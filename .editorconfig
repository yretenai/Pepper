root = true

[*]
charset = utf-8
end_of_line = lf
trim_trailing_whitespace = true
insert_final_newline = true
indent_style = tab
indent_size = 4
tab_width = 4
max_line_length = 100000

[*.csproj]
ij_xml_align_attributes = true
ij_xml_align_text = false
ij_xml_attribute_wrap = normal
ij_xml_block_comment_add_space = false
ij_xml_block_comment_at_first_column = true
ij_xml_keep_blank_lines = 2
ij_xml_keep_indents_on_empty_lines = false
ij_xml_keep_line_breaks = true
ij_xml_keep_line_breaks_in_text = true
ij_xml_keep_whitespaces = false
ij_xml_keep_whitespaces_around_cdata = preserve
ij_xml_keep_whitespaces_inside_cdata = false
ij_xml_line_comment_at_first_column = true
ij_xml_space_after_tag_name = false
ij_xml_space_around_equals_in_attribute = false
ij_xml_space_inside_empty_tag = false
ij_xml_text_wrap = off

[*.cs]
# Microsoft .NET properties
csharp_indent_braces = false
csharp_indent_switch_labels = true
csharp_new_line_before_catch = false
csharp_new_line_before_else = false
csharp_new_line_before_finally = false
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_open_brace = none
csharp_new_line_between_query_expression_clauses = true
csharp_preferred_modifier_order = public, private, protected, internal, file, new, static, abstract, virtual, sealed, readonly, override, extern, unsafe, volatile, async, required:suggestion
csharp_prefer_braces = true:none
csharp_preserve_single_line_blocks = true
csharp_space_after_cast = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false
csharp_style_namespace_declarations = file_scoped:suggestion
csharp_style_prefer_utf8_string_literals = true:suggestion
csharp_style_var_elsewhere = true:suggestion
csharp_style_var_for_built_in_types = true:suggestion
csharp_style_var_when_type_is_apparent = true:suggestion
csharp_using_directive_placement = outside_namespace:silent

# error messages
dotnet_diagnostic.ca1000.severity = none # Do not declare static members on generic types
dotnet_diagnostic.ca1001.severity = none # Types that own disposable fields should be disposable
dotnet_diagnostic.ca1002.severity = none # Do not expose generic lists
dotnet_diagnostic.ca1003.severity = warning # Use generic event handler instances
dotnet_diagnostic.ca1005.severity = none # Avoid excessive parameters on generic types
dotnet_diagnostic.ca1008.severity = none # Enums should have zero value
dotnet_diagnostic.ca1010.severity = none # Generic interface should also be implemented
dotnet_diagnostic.ca1012.severity = warning # Abstract types should not have public constructors
dotnet_diagnostic.ca1014.severity = warning # Mark assemblies with CLSCompliant
dotnet_diagnostic.ca1016.severity = suggestion # Mark assemblies with assembly version
dotnet_diagnostic.ca1017.severity = warning # Mark assemblies with ComVisible
dotnet_diagnostic.ca1018.severity = error # Mark attributes with AttributeUsageAttribute
dotnet_diagnostic.ca1019.severity = none # Define accessors for attribute arguments
dotnet_diagnostic.ca1021.severity = none # Avoid out parameters
dotnet_diagnostic.ca1024.severity = warning # Use properties where appropriate
dotnet_diagnostic.ca1027.severity = none # Mark enums with FlagsAttribute
dotnet_diagnostic.ca1028.severity = none # Enum Storage should be Int32
dotnet_diagnostic.ca1030.severity = warning # Use events where appropriate
dotnet_diagnostic.ca1031.severity = none # Do not catch general exception types
dotnet_diagnostic.ca1032.severity = warning # Implement standard exception constructors
dotnet_diagnostic.ca1033.severity = warning # Interface methods should be callable by child types
dotnet_diagnostic.ca1034.severity = none # Nested types should not be visible
dotnet_diagnostic.ca1036.severity = none # Override methods on comparable types
dotnet_diagnostic.ca1040.severity = none # Avoid empty interfaces
dotnet_diagnostic.ca1041.severity = error # Provide ObsoleteAttribute message
dotnet_diagnostic.ca1043.severity = none # Use Integral Or String Argument For Indexers
dotnet_diagnostic.ca1044.severity = warning # Properties should not be write only
dotnet_diagnostic.ca1045.severity = none # Do not pass types by reference
dotnet_diagnostic.ca1046.severity = warning # Do not overload equality operator on reference types
dotnet_diagnostic.ca1047.severity = suggestion # Do not declare protected member in sealed type
dotnet_diagnostic.ca1050.severity = suggestion # Declare types in namespaces
dotnet_diagnostic.ca1051.severity = none # Do not declare visible instance fields
dotnet_diagnostic.ca1052.severity = warning # Static holder types should be Static or NotInheritable
dotnet_diagnostic.ca1054.severity = warning # URI-like parameters should not be strings
dotnet_diagnostic.ca1055.severity = warning # URI-like return values should not be strings
dotnet_diagnostic.ca1056.severity = none # URI-like properties should not be strings
dotnet_diagnostic.ca1058.severity = warning # Types should not extend certain base types
dotnet_diagnostic.ca1060.severity = error # Move pinvokes to native methods class
dotnet_diagnostic.ca1061.severity = error # Do not hide base class methods
dotnet_diagnostic.ca1062.severity = none # Validate arguments of public methods
dotnet_diagnostic.ca1063.severity = error # Implement IDisposable Correctly
dotnet_diagnostic.ca1064.severity = error # Exceptions should be public
dotnet_diagnostic.ca1065.severity = warning # Do not raise exceptions in unexpected locations
dotnet_diagnostic.ca1066.severity = warning # Implement IEquatable when overriding Object.Equals
dotnet_diagnostic.ca1067.severity = suggestion # Override Object.Equals(object) when implementing IEquatable<T>
dotnet_diagnostic.ca1068.severity = suggestion # CancellationToken parameters must come last
dotnet_diagnostic.ca1069.severity = none # Enums values should not be duplicated
dotnet_diagnostic.ca1070.severity = error # Do not declare event fields as virtual
dotnet_diagnostic.ca1200.severity = none # Avoid using cref tags with a prefix
dotnet_diagnostic.ca1303.severity = none # Do not pass literals as localized parameters
dotnet_diagnostic.ca1304.severity = none # Specify CultureInfo
dotnet_diagnostic.ca1305.severity = none # Specify IFormatProvider
dotnet_diagnostic.ca1307.severity = warning # Specify StringComparison for clarity
dotnet_diagnostic.ca1308.severity = none # Normalize strings to uppercase
dotnet_diagnostic.ca1309.severity = none # Use ordinal string comparison
dotnet_diagnostic.ca1310.severity = none # Specify StringComparison for correctness
dotnet_diagnostic.ca1311.severity = none # Specify a culture or use an invariant version
dotnet_diagnostic.ca1401.severity = suggestion # P/Invokes should not be visible
dotnet_diagnostic.ca1416.severity = warning # Validate platform compatibility
dotnet_diagnostic.ca1417.severity = warning # Do not use 'OutAttribute' on string parameters for P/Invokes
dotnet_diagnostic.ca1418.severity = warning # Use valid platform string
dotnet_diagnostic.ca1419.severity = suggestion # Provide a parameterless constructor that is as visible as the containing type for concrete types derived from 'System.Runtime.InteropServices.SafeHandle'
dotnet_diagnostic.ca1420.severity = warning # Property, type, or attribute requires runtime marshalling
dotnet_diagnostic.ca1421.severity = suggestion # This method uses runtime marshalling even when the 'DisableRuntimeMarshallingAttribute' is applied
dotnet_diagnostic.ca1422.severity = warning # Validate platform compatibility
dotnet_diagnostic.ca1501.severity = warning # Avoid excessive inheritance
dotnet_diagnostic.ca1502.severity = none # Avoid excessive complexity
dotnet_diagnostic.ca1505.severity = none # Avoid unmaintainable code
dotnet_diagnostic.ca1506.severity = none # Avoid excessive class coupling
dotnet_diagnostic.ca1507.severity = suggestion # Use nameof to express symbol names
dotnet_diagnostic.ca1508.severity = warning # Avoid dead conditional code
dotnet_diagnostic.ca1509.severity = warning # Invalid entry in code metrics rule specification file
dotnet_diagnostic.ca1510.severity = suggestion # Use ArgumentNullException throw helper
dotnet_diagnostic.ca1511.severity = suggestion # Use ArgumentException throw helper
dotnet_diagnostic.ca1512.severity = suggestion # Use ArgumentOutOfRangeException throw helper
dotnet_diagnostic.ca1513.severity = suggestion # Use ObjectDisposedException throw helper
dotnet_diagnostic.ca1514.severity = suggestion # Avoid redundant length argument
dotnet_diagnostic.ca1515.severity = warning # Consider making public types internal
dotnet_diagnostic.ca1700.severity = warning # Do not name enum values 'Reserved'
dotnet_diagnostic.ca1707.severity = none # Identifiers should not contain underscores
dotnet_diagnostic.ca1708.severity = none # Identifiers should differ by more than case
dotnet_diagnostic.ca1710.severity = none # Identifiers should have correct suffix
dotnet_diagnostic.ca1711.severity = none # Identifiers should not have incorrect suffix
dotnet_diagnostic.ca1712.severity = none # Do not prefix enum values with type name
dotnet_diagnostic.ca1713.severity = warning # Events should not have 'Before' or 'After' prefix
dotnet_diagnostic.ca1715.severity = none # Identifiers should have correct prefix
dotnet_diagnostic.ca1716.severity = none # Identifiers should not match keywords
dotnet_diagnostic.ca1720.severity = none # Identifier contains type name
dotnet_diagnostic.ca1721.severity = none # Property names should not match get methods
dotnet_diagnostic.ca1724.severity = none # Type names should not match namespaces
dotnet_diagnostic.ca1725.severity = none # Parameter names should match base declaration
dotnet_diagnostic.ca1727.severity = none # Use PascalCase for named placeholders
dotnet_diagnostic.ca1802.severity = warning # Use literals where appropriate
dotnet_diagnostic.ca1805.severity = none # Do not initialize unnecessarily
dotnet_diagnostic.ca1806.severity = suggestion # Do not ignore method results
dotnet_diagnostic.ca1810.severity = none # Initialize reference type static fields inline
dotnet_diagnostic.ca1812.severity = none # Avoid uninstantiated internal classes
dotnet_diagnostic.ca1813.severity = warning # Avoid unsealed attributes
dotnet_diagnostic.ca1814.severity = none # Prefer jagged arrays over multidimensional
dotnet_diagnostic.ca1815.severity = warning # Override equals and operator equals on value types
dotnet_diagnostic.ca1816.severity = suggestion # Dispose methods should call SuppressFinalize
dotnet_diagnostic.ca1819.severity = none # Properties should not return arrays
dotnet_diagnostic.ca1820.severity = warning # Test for empty strings using string length
dotnet_diagnostic.ca1821.severity = suggestion # Remove empty Finalizers
dotnet_diagnostic.ca1822.severity = suggestion # Mark members as static
dotnet_diagnostic.ca1823.severity = warning # Avoid unused private fields
dotnet_diagnostic.ca1824.severity = suggestion # Mark assemblies with NeutralResourcesLanguageAttribute
dotnet_diagnostic.ca1825.severity = error # Avoid zero-length array allocations
dotnet_diagnostic.ca1826.severity = suggestion # Do not use Enumerable methods on indexable collections
dotnet_diagnostic.ca1827.severity = suggestion # Do not use Count() or LongCount() when Any() can be used
dotnet_diagnostic.ca1828.severity = suggestion # Do not use CountAsync() or LongCountAsync() when AnyAsync() can be used
dotnet_diagnostic.ca1829.severity = error # Use Length/Count property instead of Count() when available
dotnet_diagnostic.ca1830.severity = suggestion # Prefer strongly-typed Append and Insert method overloads on StringBuilder
dotnet_diagnostic.ca1831.severity = warning # Use AsSpan or AsMemory instead of Range-based indexers when appropriate
dotnet_diagnostic.ca1832.severity = suggestion # Use AsSpan or AsMemory instead of Range-based indexers when appropriate
dotnet_diagnostic.ca1833.severity = suggestion # Use AsSpan or AsMemory instead of Range-based indexers when appropriate
dotnet_diagnostic.ca1834.severity = suggestion # Consider using 'StringBuilder.Append(char)' when applicable
dotnet_diagnostic.ca1835.severity = error # Prefer the 'Memory'-based overloads for 'ReadAsync' and 'WriteAsync'
dotnet_diagnostic.ca1836.severity = error # Prefer IsEmpty over Count
dotnet_diagnostic.ca1837.severity = error # Use 'Environment.ProcessId'
dotnet_diagnostic.ca1838.severity = none # Avoid 'StringBuilder' parameters for P/Invokes
dotnet_diagnostic.ca1839.severity = error # Use 'Environment.ProcessPath'
dotnet_diagnostic.ca1840.severity = error # Use 'Environment.CurrentManagedThreadId'
dotnet_diagnostic.ca1841.severity = error # Prefer Dictionary.Contains methods
dotnet_diagnostic.ca1842.severity = error # Do not use 'WhenAll' with a single task
dotnet_diagnostic.ca1843.severity = error # Do not use 'WaitAll' with a single task
dotnet_diagnostic.ca1844.severity = suggestion # Provide memory-based overrides of async methods when subclassing 'Stream'
dotnet_diagnostic.ca1845.severity = suggestion # Use span-based 'string.Concat'
dotnet_diagnostic.ca1846.severity = suggestion # Prefer 'AsSpan' over 'Substring'
dotnet_diagnostic.ca1847.severity = suggestion # Use char literal for a single character lookup
dotnet_diagnostic.ca1848.severity = none # Use the LoggerMessage delegates
dotnet_diagnostic.ca1849.severity = warning # Call async methods when in an async method
dotnet_diagnostic.ca1850.severity = suggestion # Prefer static 'HashData' method over 'ComputeHash'
dotnet_diagnostic.ca1851.severity = warning # Possible multiple enumerations of 'IEnumerable' collection
dotnet_diagnostic.ca1852.severity = none # Seal internal types
dotnet_diagnostic.ca1853.severity = suggestion # Unnecessary call to 'Dictionary.ContainsKey(key)'
dotnet_diagnostic.ca1854.severity = suggestion # Prefer the 'IDictionary.TryGetValue(TKey, out TValue)' method
dotnet_diagnostic.ca1855.severity = suggestion # Prefer 'Clear' over 'Fill'
dotnet_diagnostic.ca1856.severity = error # Incorrect usage of ConstantExpected attribute
dotnet_diagnostic.ca1857.severity = warning # A constant is expected for the parameter
dotnet_diagnostic.ca1858.severity = suggestion # Use 'StartsWith' instead of 'IndexOf'
dotnet_diagnostic.ca1859.severity = suggestion # Use concrete types when possible for improved performance
dotnet_diagnostic.ca1860.severity = suggestion # Avoid using 'Enumerable.Any()' extension method
dotnet_diagnostic.ca1861.severity = suggestion # Avoid constant arrays as arguments
dotnet_diagnostic.ca1862.severity = suggestion # Use the 'StringComparison' method overloads to perform case-insensitive string comparisons
dotnet_diagnostic.ca1863.severity = none # Use 'CompositeFormat'
dotnet_diagnostic.ca1864.severity = suggestion # Prefer the 'IDictionary.TryAdd(TKey, TValue)' method
dotnet_diagnostic.ca1865.severity = suggestion # Use char overload
dotnet_diagnostic.ca1866.severity = suggestion # Use char overload
dotnet_diagnostic.ca1867.severity = warning # Use char overload
dotnet_diagnostic.ca1868.severity = suggestion # Unnecessary call to 'Contains(item)'
dotnet_diagnostic.ca1869.severity = suggestion # Cache and reuse 'JsonSerializerOptions' instances
dotnet_diagnostic.ca1870.severity = suggestion # Use a cached 'SearchValues' instance
dotnet_diagnostic.ca1871.severity = suggestion # Do not pass a nullable struct to 'ArgumentNullException.ThrowIfNull'
dotnet_diagnostic.ca1872.severity = suggestion # Prefer 'Convert.ToHexString' and 'Convert.ToHexStringLower' over call chains based on 'BitConverter.ToString'
dotnet_diagnostic.ca2000.severity = none # Dispose objects before losing scope
dotnet_diagnostic.ca2002.severity = warning # Do not lock on objects with weak identity
dotnet_diagnostic.ca2007.severity = none # Consider calling ConfigureAwait on the awaited task
dotnet_diagnostic.ca2008.severity = warning # Do not create tasks without passing a TaskScheduler
dotnet_diagnostic.ca2009.severity = suggestion # Do not call ToImmutableCollection on an ImmutableCollection value
dotnet_diagnostic.ca2011.severity = suggestion # Avoid infinite recursion
dotnet_diagnostic.ca2012.severity = suggestion # Use ValueTasks correctly
dotnet_diagnostic.ca2013.severity = warning # Do not use ReferenceEquals with value types
dotnet_diagnostic.ca2014.severity = warning # Do not use stackalloc in loops
dotnet_diagnostic.ca2015.severity = warning # Do not define finalizers for types derived from MemoryManager<T>
dotnet_diagnostic.ca2016.severity = suggestion # Forward the 'CancellationToken' parameter to methods
dotnet_diagnostic.ca2017.severity = warning # Parameter count mismatch
dotnet_diagnostic.ca2018.severity = warning # 'Buffer.BlockCopy' expects the number of bytes to be copied for the 'count' argument
dotnet_diagnostic.ca2019.severity = suggestion # Improper 'ThreadStatic' field initialization
dotnet_diagnostic.ca2020.severity = suggestion # Prevent behavioral change
dotnet_diagnostic.ca2021.severity = warning # Do not call Enumerable.Cast<T> or Enumerable.OfType<T> with incompatible types
dotnet_diagnostic.ca2022.severity = warning # Avoid inexact read with 'Stream.Read'
dotnet_diagnostic.ca2100.severity = warning # Review SQL queries for security vulnerabilities
dotnet_diagnostic.ca2101.severity = suggestion # Specify marshaling for P/Invoke string arguments
dotnet_diagnostic.ca2119.severity = warning # Seal methods that satisfy private interfaces
dotnet_diagnostic.ca2153.severity = warning # Do Not Catch Corrupted State Exceptions
dotnet_diagnostic.ca2200.severity = warning # Rethrow to preserve stack details
dotnet_diagnostic.ca2201.severity = none # Do not raise reserved exception types
dotnet_diagnostic.ca2207.severity = warning # Initialize value type static fields inline
dotnet_diagnostic.ca2208.severity = suggestion # Instantiate argument exceptions correctly
dotnet_diagnostic.ca2211.severity = suggestion # Non-constant fields should not be visible
dotnet_diagnostic.ca2213.severity = warning # Disposable fields should be disposed
dotnet_diagnostic.ca2214.severity = warning # Do not call overridable methods in constructors
dotnet_diagnostic.ca2215.severity = none # Dispose methods should call base class dispose
dotnet_diagnostic.ca2216.severity = warning # Disposable types should declare finalizer
dotnet_diagnostic.ca2217.severity = none # Do not mark enums with FlagsAttribute
dotnet_diagnostic.ca2218.severity = suggestion # Override GetHashCode on overriding Equals
dotnet_diagnostic.ca2219.severity = suggestion # Do not raise exceptions in finally clauses
dotnet_diagnostic.ca2224.severity = suggestion # Override Equals on overloading operator equals
dotnet_diagnostic.ca2225.severity = none # Operator overloads have named alternates
dotnet_diagnostic.ca2226.severity = warning # Operators should have symmetrical overloads
dotnet_diagnostic.ca2227.severity = none # Collection properties should be read only
dotnet_diagnostic.ca2231.severity = suggestion # Overload operator equals on overriding value type Equals
dotnet_diagnostic.ca2234.severity = warning # Pass system uri objects instead of strings
dotnet_diagnostic.ca2235.severity = warning # Mark all non-serializable fields
dotnet_diagnostic.ca2237.severity = warning # Mark ISerializable types with serializable
dotnet_diagnostic.ca2241.severity = suggestion # Provide correct arguments to formatting methods
dotnet_diagnostic.ca2242.severity = suggestion # Test for NaN correctly
dotnet_diagnostic.ca2243.severity = warning # Attribute string literals should parse correctly
dotnet_diagnostic.ca2244.severity = suggestion # Do not duplicate indexed element initializations
dotnet_diagnostic.ca2245.severity = suggestion # Do not assign a property to itself
dotnet_diagnostic.ca2246.severity = suggestion # Assigning symbol and its member in the same statement
dotnet_diagnostic.ca2247.severity = warning # Argument passed to TaskCompletionSource constructor should be TaskCreationOptions enum instead of TaskContinuationOptions enum
dotnet_diagnostic.ca2248.severity = suggestion # Provide correct 'enum' argument to 'Enum.HasFlag'
dotnet_diagnostic.ca2249.severity = suggestion # Consider using 'string.Contains' instead of 'string.IndexOf'
dotnet_diagnostic.ca2250.severity = suggestion # Use 'ThrowIfCancellationRequested'
dotnet_diagnostic.ca2251.severity = none # Use 'string.Equals'
dotnet_diagnostic.ca2252.severity = error # This API requires opting into preview features
dotnet_diagnostic.ca2253.severity = suggestion # Named placeholders should not be numeric values
dotnet_diagnostic.ca2254.severity = suggestion # Template should be a static expression
dotnet_diagnostic.ca2255.severity = warning # The 'ModuleInitializer' attribute should not be used in libraries
dotnet_diagnostic.ca2256.severity = warning # All members declared in parent interfaces must have an implementation in a DynamicInterfaceCastableImplementation-attributed interface
dotnet_diagnostic.ca2257.severity = warning # Members defined on an interface with the 'DynamicInterfaceCastableImplementationAttribute' should be 'static'
dotnet_diagnostic.ca2258.severity = warning # Providing a 'DynamicInterfaceCastableImplementation' interface in Visual Basic is unsupported
dotnet_diagnostic.ca2259.severity = warning # 'ThreadStatic' only affects static fields
dotnet_diagnostic.ca2260.severity = warning # Use correct type parameter
dotnet_diagnostic.ca2261.severity = warning # Do not use ConfigureAwaitOptions.SuppressThrowing with Task<TResult>
dotnet_diagnostic.ca2262.severity = suggestion # Set 'MaxResponseHeadersLength' properly
dotnet_diagnostic.ca2263.severity = suggestion # Prefer generic overload when type is known
dotnet_diagnostic.ca2264.severity = warning # Do not pass a non-nullable value to 'ArgumentNullException.ThrowIfNull'
dotnet_diagnostic.ca2265.severity = warning # Do not compare Span<T> to 'null' or 'default'
dotnet_diagnostic.ca2300.severity = warning # Do not use insecure deserializer BinaryFormatter
dotnet_diagnostic.ca2301.severity = warning # Do not call BinaryFormatter.Deserialize without first setting BinaryFormatter.Binder
dotnet_diagnostic.ca2302.severity = warning # Ensure BinaryFormatter.Binder is set before calling BinaryFormatter.Deserialize
dotnet_diagnostic.ca2305.severity = warning # Do not use insecure deserializer LosFormatter
dotnet_diagnostic.ca2310.severity = warning # Do not use insecure deserializer NetDataContractSerializer
dotnet_diagnostic.ca2311.severity = warning # Do not deserialize without first setting NetDataContractSerializer.Binder
dotnet_diagnostic.ca2312.severity = warning # Ensure NetDataContractSerializer.Binder is set before deserializing
dotnet_diagnostic.ca2315.severity = warning # Do not use insecure deserializer ObjectStateFormatter
dotnet_diagnostic.ca2321.severity = warning # Do not deserialize with JavaScriptSerializer using a SimpleTypeResolver
dotnet_diagnostic.ca2322.severity = warning # Ensure JavaScriptSerializer is not initialized with SimpleTypeResolver before deserializing
dotnet_diagnostic.ca2326.severity = warning # Do not use TypeNameHandling values other than None
dotnet_diagnostic.ca2327.severity = warning # Do not use insecure JsonSerializerSettings
dotnet_diagnostic.ca2328.severity = warning # Ensure that JsonSerializerSettings are secure
dotnet_diagnostic.ca2329.severity = warning # Do not deserialize with JsonSerializer using an insecure configuration
dotnet_diagnostic.ca2330.severity = warning # Ensure that JsonSerializer has a secure configuration when deserializing
dotnet_diagnostic.ca2350.severity = warning # Do not use DataTable.ReadXml() with untrusted data
dotnet_diagnostic.ca2351.severity = warning # Do not use DataSet.ReadXml() with untrusted data
dotnet_diagnostic.ca2352.severity = warning # Unsafe DataSet or DataTable in serializable type can be vulnerable to remote code execution attacks
dotnet_diagnostic.ca2353.severity = warning # Unsafe DataSet or DataTable in serializable type
dotnet_diagnostic.ca2354.severity = warning # Unsafe DataSet or DataTable in deserialized object graph can be vulnerable to remote code execution attacks
dotnet_diagnostic.ca2355.severity = warning # Unsafe DataSet or DataTable type found in deserializable object graph
dotnet_diagnostic.ca2356.severity = warning # Unsafe DataSet or DataTable type in web deserializable object graph
dotnet_diagnostic.ca2361.severity = warning # Ensure auto-generated class containing DataSet.ReadXml() is not used with untrusted data
dotnet_diagnostic.ca2362.severity = warning # Unsafe DataSet or DataTable in auto-generated serializable type can be vulnerable to remote code execution attacks
dotnet_diagnostic.ca3001.severity = warning # Review code for SQL injection vulnerabilities
dotnet_diagnostic.ca3002.severity = warning # Review code for XSS vulnerabilities
dotnet_diagnostic.ca3003.severity = warning # Review code for file path injection vulnerabilities
dotnet_diagnostic.ca3004.severity = warning # Review code for information disclosure vulnerabilities
dotnet_diagnostic.ca3005.severity = warning # Review code for LDAP injection vulnerabilities
dotnet_diagnostic.ca3006.severity = warning # Review code for process command injection vulnerabilities
dotnet_diagnostic.ca3007.severity = warning # Review code for open redirect vulnerabilities
dotnet_diagnostic.ca3008.severity = warning # Review code for XPath injection vulnerabilities
dotnet_diagnostic.ca3009.severity = warning # Review code for XML injection vulnerabilities
dotnet_diagnostic.ca3010.severity = warning # Review code for XAML injection vulnerabilities
dotnet_diagnostic.ca3011.severity = warning # Review code for DLL injection vulnerabilities
dotnet_diagnostic.ca3012.severity = warning # Review code for regex injection vulnerabilities
dotnet_diagnostic.ca3061.severity = none # Do Not Add Schema By URL
dotnet_diagnostic.ca3075.severity = none # Insecure DTD processing in XML
dotnet_diagnostic.ca3076.severity = none # Insecure XSLT script processing
dotnet_diagnostic.ca3077.severity = none # Insecure Processing in API Design, XmlDocument and XmlTextReader
dotnet_diagnostic.ca3147.severity = none # Mark Verb Handlers With Validate Antiforgery Token
dotnet_diagnostic.ca5350.severity = none # Do Not Use Weak Cryptographic Algorithms
dotnet_diagnostic.ca5351.severity = none # Do Not Use Broken Cryptographic Algorithms
dotnet_diagnostic.ca5358.severity = none # Review cipher mode usage with cryptography experts
dotnet_diagnostic.ca5359.severity = none # Do Not Disable Certificate Validation
dotnet_diagnostic.ca5360.severity = none # Do Not Call Dangerous Methods In Deserialization
dotnet_diagnostic.ca5361.severity = warning # Do Not Disable SChannel Use of Strong Crypto
dotnet_diagnostic.ca5362.severity = warning # Potential reference cycle in deserialized object graph
dotnet_diagnostic.ca5363.severity = none # Do Not Disable Request Validation
dotnet_diagnostic.ca5364.severity = none # Do Not Use Deprecated Security Protocols
dotnet_diagnostic.ca5365.severity = none # Do Not Disable HTTP Header Checking
dotnet_diagnostic.ca5366.severity = none # Use XmlReader for 'DataSet.ReadXml()'
dotnet_diagnostic.ca5367.severity = warning # Do Not Serialize Types With Pointer Fields
dotnet_diagnostic.ca5368.severity = none # Set ViewStateUserKey For Classes Derived From Page
dotnet_diagnostic.ca5369.severity = none # Use XmlReader for 'XmlSerializer.Deserialize()'
dotnet_diagnostic.ca5370.severity = none # Use XmlReader for XmlValidatingReader constructor
dotnet_diagnostic.ca5371.severity = none # Use XmlReader for 'XmlSchema.Read()'
dotnet_diagnostic.ca5372.severity = none # Use XmlReader for XPathDocument constructor
dotnet_diagnostic.ca5373.severity = none # Do not use obsolete key derivation function
dotnet_diagnostic.ca5374.severity = none # Do Not Use XslTransform
dotnet_diagnostic.ca5375.severity = warning # Do Not Use Account Shared Access Signature
dotnet_diagnostic.ca5376.severity = warning # Use SharedAccessProtocol HttpsOnly
dotnet_diagnostic.ca5377.severity = warning # Use Container Level Access Policy
dotnet_diagnostic.ca5378.severity = warning # Do not disable ServicePointManagerSecurityProtocols
dotnet_diagnostic.ca5379.severity = none # Ensure Key Derivation Function algorithm is sufficiently strong
dotnet_diagnostic.ca5380.severity = warning # Do Not Add Certificates To Root Store
dotnet_diagnostic.ca5381.severity = warning # Ensure Certificates Are Not Added To Root Store
dotnet_diagnostic.ca5382.severity = warning # Use Secure Cookies In ASP.NET Core
dotnet_diagnostic.ca5383.severity = warning # Ensure Use Secure Cookies In ASP.NET Core
dotnet_diagnostic.ca5384.severity = none # Do Not Use Digital Signature Algorithm (DSA)
dotnet_diagnostic.ca5385.severity = none # Use Rivest-Shamir-Adleman (RSA) Algorithm With Sufficient Key Size
dotnet_diagnostic.ca5386.severity = warning # Avoid hardcoding SecurityProtocolType value
dotnet_diagnostic.ca5387.severity = warning # Do Not Use Weak Key Derivation Function With Insufficient Iteration Count
dotnet_diagnostic.ca5388.severity = warning # Ensure Sufficient Iteration Count When Using Weak Key Derivation Function
dotnet_diagnostic.ca5389.severity = warning # Do Not Add Archive Item's Path To The Target File System Path
dotnet_diagnostic.ca5390.severity = warning # Do not hard-code encryption key
dotnet_diagnostic.ca5391.severity = error # Use antiforgery tokens in ASP.NET Core MVC controllers
dotnet_diagnostic.ca5392.severity = error # Use DefaultDllImportSearchPaths attribute for P/Invokes
dotnet_diagnostic.ca5393.severity = warning # Do not use unsafe DllImportSearchPath value
dotnet_diagnostic.ca5394.severity = warning # Do not use insecure randomness
dotnet_diagnostic.ca5395.severity = warning # Miss HttpVerb attribute for action methods
dotnet_diagnostic.ca5396.severity = warning # Set HttpOnly to true for HttpCookie
dotnet_diagnostic.ca5397.severity = none # Do not use deprecated SslProtocols values
dotnet_diagnostic.ca5398.severity = warning # Avoid hardcoded SslProtocols values
dotnet_diagnostic.ca5399.severity = warning # HttpClients should enable certificate revocation list checks
dotnet_diagnostic.ca5400.severity = warning # Ensure HttpClient certificate revocation list check is not disabled
dotnet_diagnostic.ca5401.severity = none # Do not use CreateEncryptor with non-default IV
dotnet_diagnostic.ca5402.severity = warning # Use CreateEncryptor with the default IV
dotnet_diagnostic.ca5403.severity = warning # Do not hard-code certificate
dotnet_diagnostic.ca5404.severity = warning # Do not disable token validation checks
dotnet_diagnostic.ca5405.severity = warning # Do not always skip token validation in delegates
dotnet_diagnostic.cs0006.severity = error # Metadata file '{0}' could not be found
dotnet_diagnostic.cs0009.severity = error # Metadata file '{0}' could not be opened -- {1}
dotnet_diagnostic.cs0012.severity = error # The type '{0}' is defined in an assembly that is not referenced. You must add a reference to assembly '{1}'.
dotnet_diagnostic.cs0016.severity = error # Could not write to output file '{0}' -- '{1}'
dotnet_diagnostic.cs0017.severity = error # Program has more than one entry point defined. Compile with /main to specify the type that contains the entry point.
dotnet_diagnostic.cs0019.severity = error # Operator '{0}' cannot be applied to operands of type '{1}' and '{2}'
dotnet_diagnostic.cs0020.severity = error # Division by constant zero
dotnet_diagnostic.cs0021.severity = error # Cannot apply indexing with [] to an expression of type '{0}'
dotnet_diagnostic.cs0022.severity = error # Wrong number of indices inside []; expected {0}
dotnet_diagnostic.cs0023.severity = error # Operator '{0}' cannot be applied to operand of type '{1}'
dotnet_diagnostic.cs0026.severity = error # Keyword 'this' is not valid in a static property, static method, or static field initializer
dotnet_diagnostic.cs0027.severity = error # Keyword 'this' is not available in the current context
dotnet_diagnostic.cs0028.severity = warning # '{0}' has the wrong signature to be an entry point
dotnet_diagnostic.cs0029.severity = error # Cannot implicitly convert type '{0}' to '{1}'
dotnet_diagnostic.cs0030.severity = error # Cannot convert type '{0}' to '{1}'
dotnet_diagnostic.cs0031.severity = error # Constant value '{0}' cannot be converted to a '{1}'
dotnet_diagnostic.cs0034.severity = error # Operator '{0}' is ambiguous on operands of type '{1}' and '{2}'
dotnet_diagnostic.cs0035.severity = error # Operator '{0}' is ambiguous on an operand of type '{1}'
dotnet_diagnostic.cs0036.severity = error # An out parameter cannot have the In attribute
dotnet_diagnostic.cs0037.severity = error # Cannot convert null to '{0}' because it is a non-nullable value type
dotnet_diagnostic.cs0039.severity = error # Cannot convert type '{0}' to '{1}' via a reference conversion, boxing conversion, unboxing conversion, wrapping conversion, or null type conversion
dotnet_diagnostic.cs0041.severity = error # Unexpected error writing debug information -- '{0}'
dotnet_diagnostic.cs0050.severity = error # Inconsistent accessibility: return type '{1}' is less accessible than method '{0}'
dotnet_diagnostic.cs0051.severity = error # Inconsistent accessibility: parameter type '{1}' is less accessible than method '{0}'
dotnet_diagnostic.cs0052.severity = error # Inconsistent accessibility: field type '{1}' is less accessible than field '{0}'
dotnet_diagnostic.cs0053.severity = error # Inconsistent accessibility: property type '{1}' is less accessible than property '{0}'
dotnet_diagnostic.cs0054.severity = error # Inconsistent accessibility: indexer return type '{1}' is less accessible than indexer '{0}'
dotnet_diagnostic.cs0055.severity = error # Inconsistent accessibility: parameter type '{1}' is less accessible than indexer '{0}'
dotnet_diagnostic.cs0056.severity = error # Inconsistent accessibility: return type '{1}' is less accessible than operator '{0}'
dotnet_diagnostic.cs0057.severity = error # Inconsistent accessibility: parameter type '{1}' is less accessible than operator '{0}'
dotnet_diagnostic.cs0058.severity = error # Inconsistent accessibility: return type '{1}' is less accessible than delegate '{0}'
dotnet_diagnostic.cs0059.severity = error # Inconsistent accessibility: parameter type '{1}' is less accessible than delegate '{0}'
dotnet_diagnostic.cs0060.severity = error # Inconsistent accessibility: base class '{1}' is less accessible than class '{0}'
dotnet_diagnostic.cs0061.severity = error # Inconsistent accessibility: base interface '{1}' is less accessible than interface '{0}'
dotnet_diagnostic.cs0065.severity = error # '{0}': event property must have both add and remove accessors
dotnet_diagnostic.cs0066.severity = error # '{0}': event must be of a delegate type
dotnet_diagnostic.cs0067.severity = warning # The event '{0}' is never used
dotnet_diagnostic.cs0068.severity = error # '{0}': instance event in interface cannot have initializer
dotnet_diagnostic.cs0070.severity = error # The event '{0}' can only appear on the left hand side of += or -= (except when used from within the type '{1}')
dotnet_diagnostic.cs0071.severity = error # An explicit interface implementation of an event must use event accessor syntax
dotnet_diagnostic.cs0072.severity = error # '{0}': cannot override; '{1}' is not an event
dotnet_diagnostic.cs0073.severity = error # An add or remove accessor must have a body
dotnet_diagnostic.cs0074.severity = error # '{0}': abstract event cannot have initializer
dotnet_diagnostic.cs0075.severity = error # To cast a negative value, you must enclose the value in parentheses.
dotnet_diagnostic.cs0076.severity = error # The enumerator name '{0}' is reserved and cannot be used
dotnet_diagnostic.cs0077.severity = error # The as operator must be used with a reference type or nullable type ('{0}' is a non-nullable value type)
dotnet_diagnostic.cs0078.severity = warning # The 'l' suffix is easily confused with the digit '1' -- use 'L' for clarity
dotnet_diagnostic.cs0079.severity = error # The event '{0}' can only appear on the left hand side of += or -=
dotnet_diagnostic.cs0080.severity = error # Constraints are not allowed on non-generic declarations
dotnet_diagnostic.cs0081.severity = error # Type parameter declaration must be an identifier not a type
dotnet_diagnostic.cs0082.severity = error # Type '{1}' already reserves a member called '{0}' with the same parameter types
dotnet_diagnostic.cs0100.severity = error # The parameter name '{0}' is a duplicate
dotnet_diagnostic.cs0101.severity = error # The namespace '{1}' already contains a definition for '{0}'
dotnet_diagnostic.cs0102.severity = error # The type '{0}' already contains a definition for '{1}'
dotnet_diagnostic.cs0103.severity = error # The name '{0}' does not exist in the current context
dotnet_diagnostic.cs0104.severity = error # '{0}' is an ambiguous reference between '{1}' and '{2}'
dotnet_diagnostic.cs0105.severity = warning # The using directive for '{0}' appeared previously in this namespace
dotnet_diagnostic.cs0106.severity = error # The modifier '{0}' is not valid for this item
dotnet_diagnostic.cs0107.severity = error # More than one protection modifier
dotnet_diagnostic.cs0108.severity = warning # '{0}' hides inherited member '{1}'. Use the new keyword if hiding was intended.
dotnet_diagnostic.cs0109.severity = warning # The member '{0}' does not hide an accessible member. The new keyword is not required.
dotnet_diagnostic.cs0110.severity = error # The evaluation of the constant value for '{0}' involves a circular definition
dotnet_diagnostic.cs0111.severity = error # Type '{1}' already defines a member called '{0}' with the same parameter types
dotnet_diagnostic.cs0112.severity = error # A static member cannot be marked as '{0}'
dotnet_diagnostic.cs0113.severity = error # A member '{0}' marked as override cannot be marked as new or virtual
dotnet_diagnostic.cs0114.severity = warning # '{0}' hides inherited member '{1}'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword.
dotnet_diagnostic.cs0115.severity = error # '{0}': no suitable method found to override
dotnet_diagnostic.cs0116.severity = error # A namespace cannot directly contain members such as fields, methods or statements
dotnet_diagnostic.cs0117.severity = error # '{0}' does not contain a definition for '{1}'
dotnet_diagnostic.cs0118.severity = error # '{0}' is a {1} but is used like a {2}
dotnet_diagnostic.cs0119.severity = error # '{0}' is a {1}, which is not valid in the given context
dotnet_diagnostic.cs0120.severity = error # An object reference is required for the non-static field, method, or property '{0}'
dotnet_diagnostic.cs0121.severity = error # The call is ambiguous between the following methods or properties: '{0}' and '{1}'
dotnet_diagnostic.cs0122.severity = error # '{0}' is inaccessible due to its protection level
dotnet_diagnostic.cs0123.severity = error # No overload for '{0}' matches delegate '{1}'
dotnet_diagnostic.cs0126.severity = error # An object of a type convertible to '{0}' is required
dotnet_diagnostic.cs0127.severity = error # Since '{0}' returns void, a return keyword must not be followed by an object expression
dotnet_diagnostic.cs0128.severity = error # A local variable or function named '{0}' is already defined in this scope
dotnet_diagnostic.cs0131.severity = error # The left-hand side of an assignment must be a variable, property or indexer
dotnet_diagnostic.cs0132.severity = error # '{0}': a static constructor must be parameterless
dotnet_diagnostic.cs0133.severity = error # The expression being assigned to '{0}' must be constant
dotnet_diagnostic.cs0134.severity = error # '{0}' is of type '{1}'. A const field of a reference type other than string can only be initialized with null.
dotnet_diagnostic.cs0136.severity = error # A local or parameter named '{0}' cannot be declared in this scope because that name is used in an enclosing local scope to define a local or parameter
dotnet_diagnostic.cs0138.severity = error # A 'using namespace' directive can only be applied to namespaces; '{0}' is a type not a namespace. Consider a 'using static' directive instead
dotnet_diagnostic.cs0139.severity = error # No enclosing loop out of which to break or continue
dotnet_diagnostic.cs0140.severity = error # The label '{0}' is a duplicate
dotnet_diagnostic.cs0143.severity = error # The type '{0}' has no constructors defined
dotnet_diagnostic.cs0144.severity = error # Cannot create an instance of the abstract type or interface '{0}'
dotnet_diagnostic.cs0145.severity = error # A const field requires a value to be provided
dotnet_diagnostic.cs0146.severity = error # Circular base type dependency involving '{0}' and '{1}'
dotnet_diagnostic.cs0148.severity = error # The delegate '{0}' does not have a valid constructor
dotnet_diagnostic.cs0149.severity = error # Method name expected
dotnet_diagnostic.cs0150.severity = error # A constant value is expected
dotnet_diagnostic.cs0151.severity = error # A switch expression or case label must be a bool, char, string, integral, enum, or corresponding nullable type in C# 6 and earlier.
dotnet_diagnostic.cs0152.severity = error # The switch statement contains multiple cases with the label value '{0}'
dotnet_diagnostic.cs0153.severity = error # A goto case is only valid inside a switch statement
dotnet_diagnostic.cs0154.severity = error # The property or indexer '{0}' cannot be used in this context because it lacks the get accessor
dotnet_diagnostic.cs0155.severity = error # The type caught or thrown must be derived from System.Exception
dotnet_diagnostic.cs0156.severity = error # A throw statement with no arguments is not allowed outside of a catch clause
dotnet_diagnostic.cs0157.severity = error # Control cannot leave the body of a finally clause
dotnet_diagnostic.cs0158.severity = error # The label '{0}' shadows another label by the same name in a contained scope
dotnet_diagnostic.cs0159.severity = error # No such label '{0}' within the scope of the goto statement
dotnet_diagnostic.cs0160.severity = error # A previous catch clause already catches all exceptions of this or of a super type ('{0}')
dotnet_diagnostic.cs0161.severity = error # '{0}': not all code paths return a value
dotnet_diagnostic.cs0162.severity = warning # Unreachable code detected
dotnet_diagnostic.cs0163.severity = error # Control cannot fall through from one case label ('{0}') to another
dotnet_diagnostic.cs0164.severity = warning # This label has not been referenced
dotnet_diagnostic.cs0165.severity = error # Use of unassigned local variable '{0}'
dotnet_diagnostic.cs0168.severity = warning # The variable '{0}' is declared but never used
dotnet_diagnostic.cs0169.severity = warning # The field '{0}' is never used
dotnet_diagnostic.cs0170.severity = error # Use of possibly unassigned field '{0}'
dotnet_diagnostic.cs0171.severity = error # Field '{0}' must be fully assigned before control is returned to the caller. Consider updating to language version '{1}' to auto-default the field.
dotnet_diagnostic.cs0172.severity = error # Type of conditional expression cannot be determined because '{0}' and '{1}' implicitly convert to one another
dotnet_diagnostic.cs0173.severity = error # Type of conditional expression cannot be determined because there is no implicit conversion between '{0}' and '{1}'
dotnet_diagnostic.cs0174.severity = error # A base class is required for a 'base' reference
dotnet_diagnostic.cs0175.severity = error # Use of keyword 'base' is not valid in this context
dotnet_diagnostic.cs0176.severity = error # Member '{0}' cannot be accessed with an instance reference; qualify it with a type name instead
dotnet_diagnostic.cs0177.severity = error # The out parameter '{0}' must be assigned to before control leaves the current method
dotnet_diagnostic.cs0178.severity = error # Invalid rank specifier: expected ',' or ']'
dotnet_diagnostic.cs0179.severity = error # '{0}' cannot be extern and declare a body
dotnet_diagnostic.cs0180.severity = error # '{0}' cannot be both extern and abstract
dotnet_diagnostic.cs0181.severity = error # Attribute constructor parameter '{0}' has type '{1}', which is not a valid attribute parameter type
dotnet_diagnostic.cs0182.severity = error # An attribute argument must be a constant expression, typeof expression or array creation expression of an attribute parameter type
dotnet_diagnostic.cs0183.severity = warning # The given expression is always of the provided ('{0}') type
dotnet_diagnostic.cs0184.severity = warning # The given expression is never of the provided ('{0}') type
dotnet_diagnostic.cs0185.severity = error # '{0}' is not a reference type as required by the lock statement
dotnet_diagnostic.cs0186.severity = error # Use of null is not valid in this context
dotnet_diagnostic.cs0188.severity = error # The 'this' object cannot be used before all of its fields have been assigned. Consider updating to language version '{0}' to auto-default the unassigned fields.
dotnet_diagnostic.cs0190.severity = error # The __arglist construct is valid only within a variable argument method
dotnet_diagnostic.cs0191.severity = error # A readonly field cannot be assigned to (except in a constructor or init-only setter of the type in which the field is defined or a variable initializer)
dotnet_diagnostic.cs0192.severity = error # A readonly field cannot be used as a ref or out value (except in a constructor)
dotnet_diagnostic.cs0193.severity = error # The * or -> operator must be applied to a pointer
dotnet_diagnostic.cs0196.severity = error # A pointer must be indexed by only one value
dotnet_diagnostic.cs0197.severity = warning # Using '{0}' as a ref or out value or taking its address may cause a runtime exception because it is a field of a marshal-by-reference class
dotnet_diagnostic.cs0198.severity = error # A static readonly field cannot be assigned to (except in a static constructor or a variable initializer)
dotnet_diagnostic.cs0199.severity = error # A static readonly field cannot be used as a ref or out value (except in a static constructor)
dotnet_diagnostic.cs0200.severity = error # Property or indexer '{0}' cannot be assigned to -- it is read only
dotnet_diagnostic.cs0201.severity = error # Only assignment, call, increment, decrement, await, and new object expressions can be used as a statement
dotnet_diagnostic.cs0202.severity = error # foreach requires that the return type '{0}' of '{1}' must have a suitable public 'MoveNext' method and public 'Current' property
dotnet_diagnostic.cs0204.severity = error # Only 65534 locals, including those generated by the compiler, are allowed
dotnet_diagnostic.cs0205.severity = error # Cannot call an abstract base member: '{0}'
dotnet_diagnostic.cs0206.severity = error # A non ref-returning property or indexer may not be used as an out or ref value
dotnet_diagnostic.cs0208.severity = error # Cannot take the address of, get the size of, or declare a pointer to a managed type ('{0}')
dotnet_diagnostic.cs0209.severity = error # The type of a local declared in a fixed statement must be a pointer type
dotnet_diagnostic.cs0210.severity = error # You must provide an initializer in a fixed or using statement declaration
dotnet_diagnostic.cs0211.severity = error # Cannot take the address of the given expression
dotnet_diagnostic.cs0212.severity = error # You can only take the address of an unfixed expression inside of a fixed statement initializer
dotnet_diagnostic.cs0213.severity = error # You cannot use the fixed statement to take the address of an already fixed expression
dotnet_diagnostic.cs0214.severity = error # Pointers and fixed size buffers may only be used in an unsafe context
dotnet_diagnostic.cs0215.severity = error # The return type of operator True or False must be bool
dotnet_diagnostic.cs0216.severity = error # The operator '{0}' requires a matching operator '{1}' to also be defined
dotnet_diagnostic.cs0217.severity = error # In order to be applicable as a short circuit operator a user-defined logical operator ('{0}') must have the same return type and parameter types
dotnet_diagnostic.cs0218.severity = error # In order for '{0}' to be applicable as a short circuit operator, its declaring type '{1}' must define operator true and operator false
dotnet_diagnostic.cs0219.severity = warning # The variable '{0}' is assigned but its value is never used
dotnet_diagnostic.cs0220.severity = error # The operation overflows at compile time in checked mode
dotnet_diagnostic.cs0221.severity = error # Constant value '{0}' cannot be converted to a '{1}' (use 'unchecked' syntax to override)
dotnet_diagnostic.cs0224.severity = error # A method with vararg cannot be generic, be in a generic type, or have a params parameter
dotnet_diagnostic.cs0225.severity = error # The params parameter must have a valid collection type
dotnet_diagnostic.cs0226.severity = error # An __arglist expression may only appear inside of a call or new expression
dotnet_diagnostic.cs0227.severity = error # Unsafe code may only appear if compiling with /unsafe
dotnet_diagnostic.cs0229.severity = error # Ambiguity between '{0}' and '{1}'
dotnet_diagnostic.cs0230.severity = error # Type and identifier are both required in a foreach statement
dotnet_diagnostic.cs0231.severity = error # A params parameter must be the last parameter in a parameter list
dotnet_diagnostic.cs0233.severity = error # '{0}' does not have a predefined size, therefore sizeof can only be used in an unsafe context
dotnet_diagnostic.cs0234.severity = error # The type or namespace name '{0}' does not exist in the namespace '{1}' (are you missing an assembly reference?)
dotnet_diagnostic.cs0236.severity = error # A field initializer cannot reference the non-static field, method, or property '{0}'
dotnet_diagnostic.cs0238.severity = error # '{0}' cannot be sealed because it is not an override
dotnet_diagnostic.cs0239.severity = error # '{0}': cannot override inherited member '{1}' because it is sealed
dotnet_diagnostic.cs0242.severity = error # The operation in question is undefined on void pointers
dotnet_diagnostic.cs0243.severity = error # The Conditional attribute is not valid on '{0}' because it is an override method
dotnet_diagnostic.cs0244.severity = error # Neither 'is' nor 'as' is valid on pointer types
dotnet_diagnostic.cs0245.severity = error # Destructors and object.Finalize cannot be called directly. Consider calling IDisposable.Dispose if available.
dotnet_diagnostic.cs0246.severity = error # The type or namespace name '{0}' could not be found (are you missing a using directive or an assembly reference?)
dotnet_diagnostic.cs0247.severity = error # Cannot use a negative size with stackalloc
dotnet_diagnostic.cs0248.severity = error # Cannot create an array with a negative size
dotnet_diagnostic.cs0249.severity = error # Do not override object.Finalize. Instead, provide a destructor.
dotnet_diagnostic.cs0250.severity = error # Do not directly call your base type Finalize method. It is called automatically from your destructor.
dotnet_diagnostic.cs0251.severity = warning # Indexing an array with a negative index (array indices always start at zero)
dotnet_diagnostic.cs0252.severity = warning # Possible unintended reference comparison; to get a value comparison, cast the left hand side to type '{0}'
dotnet_diagnostic.cs0253.severity = warning # Possible unintended reference comparison; to get a value comparison, cast the right hand side to type '{0}'
dotnet_diagnostic.cs0254.severity = error # The right hand side of a fixed statement assignment may not be a cast expression
dotnet_diagnostic.cs0255.severity = error # stackalloc may not be used in a catch or finally block
dotnet_diagnostic.cs0257.severity = error # An __arglist parameter must be the last parameter in a parameter list
dotnet_diagnostic.cs0260.severity = error # Missing partial modifier on declaration of type '{0}'; another partial declaration of this type exists
dotnet_diagnostic.cs0261.severity = error # Partial declarations of '{0}' must be all classes, all record classes, all structs, all record structs, or all interfaces
dotnet_diagnostic.cs0262.severity = error # Partial declarations of '{0}' have conflicting accessibility modifiers
dotnet_diagnostic.cs0263.severity = error # Partial declarations of '{0}' must not specify different base classes
dotnet_diagnostic.cs0264.severity = error # Partial declarations of '{0}' must have the same type parameter names in the same order
dotnet_diagnostic.cs0265.severity = error # Partial declarations of '{0}' have inconsistent constraints for type parameter '{1}'
dotnet_diagnostic.cs0266.severity = error # Cannot implicitly convert type '{0}' to '{1}'. An explicit conversion exists (are you missing a cast?)
dotnet_diagnostic.cs0267.severity = error # The 'partial' modifier can only appear immediately before 'class', 'record', 'struct', 'interface', or a method return type.
dotnet_diagnostic.cs0268.severity = error # Imported type '{0}' is invalid. It contains a circular base type dependency.
dotnet_diagnostic.cs0269.severity = error # Use of unassigned out parameter '{0}'
dotnet_diagnostic.cs0270.severity = error # Array size cannot be specified in a variable declaration (try initializing with a 'new' expression)
dotnet_diagnostic.cs0271.severity = error # The property or indexer '{0}' cannot be used in this context because the get accessor is inaccessible
dotnet_diagnostic.cs0272.severity = error # The property or indexer '{0}' cannot be used in this context because the set accessor is inaccessible
dotnet_diagnostic.cs0273.severity = error # The accessibility modifier of the '{0}' accessor must be more restrictive than the property or indexer '{1}'
dotnet_diagnostic.cs0274.severity = error # Cannot specify accessibility modifiers for both accessors of the property or indexer '{0}'
dotnet_diagnostic.cs0276.severity = error # '{0}': accessibility modifiers on accessors may only be used if the property or indexer has both a get and a set accessor
dotnet_diagnostic.cs0277.severity = error # '{0}' does not implement interface member '{1}'. '{2}' is not public.
dotnet_diagnostic.cs0278.severity = warning # '{0}' does not implement the '{1}' pattern. '{2}' is ambiguous with '{3}'.
dotnet_diagnostic.cs0279.severity = warning # '{0}' does not implement the '{1}' pattern. '{2}' is not a public instance or extension method.
dotnet_diagnostic.cs0280.severity = warning # '{0}' does not implement the '{1}' pattern. '{2}' has the wrong signature.
dotnet_diagnostic.cs0281.severity = error # Friend access was granted by '{0}', but the public key of the output assembly ('{1}') does not match that specified by the InternalsVisibleTo attribute in the granting assembly.
dotnet_diagnostic.cs0282.severity = warning # There is no defined ordering between fields in multiple declarations of partial struct '{0}'. To specify an ordering, all instance fields must be in the same declaration.
dotnet_diagnostic.cs0283.severity = error # The type '{0}' cannot be declared const
dotnet_diagnostic.cs0304.severity = error # Cannot create an instance of the variable type '{0}' because it does not have the new() constraint
dotnet_diagnostic.cs0305.severity = error # Using the generic {1} '{0}' requires {2} type arguments
dotnet_diagnostic.cs0306.severity = error # The type '{0}' may not be used as a type argument
dotnet_diagnostic.cs0307.severity = error # The {1} '{0}' cannot be used with type arguments
dotnet_diagnostic.cs0308.severity = error # The non-generic {1} '{0}' cannot be used with type arguments
dotnet_diagnostic.cs0310.severity = error # '{2}' must be a non-abstract type with a public parameterless constructor in order to use it as parameter '{1}' in the generic type or method '{0}'
dotnet_diagnostic.cs0311.severity = error # The type '{3}' cannot be used as type parameter '{2}' in the generic type or method '{0}'. There is no implicit reference conversion from '{3}' to '{1}'.
dotnet_diagnostic.cs0312.severity = error # The type '{3}' cannot be used as type parameter '{2}' in the generic type or method '{0}'. The nullable type '{3}' does not satisfy the constraint of '{1}'.
dotnet_diagnostic.cs0313.severity = error # The type '{3}' cannot be used as type parameter '{2}' in the generic type or method '{0}'. The nullable type '{3}' does not satisfy the constraint of '{1}'. Nullable types can not satisfy any interface constraints.
dotnet_diagnostic.cs0314.severity = error # The type '{3}' cannot be used as type parameter '{2}' in the generic type or method '{0}'. There is no boxing conversion or type parameter conversion from '{3}' to '{1}'.
dotnet_diagnostic.cs0315.severity = error # The type '{3}' cannot be used as type parameter '{2}' in the generic type or method '{0}'. There is no boxing conversion from '{3}' to '{1}'.
dotnet_diagnostic.cs0316.severity = error # The parameter name '{0}' conflicts with an automatically-generated parameter name
dotnet_diagnostic.cs0400.severity = error # The type or namespace name '{0}' could not be found in the global namespace (are you missing an assembly reference?)
dotnet_diagnostic.cs0401.severity = error # The new() constraint must be the last constraint specified
dotnet_diagnostic.cs0402.severity = warning # '{0}': an entry point cannot be generic or in a generic type
dotnet_diagnostic.cs0403.severity = error # Cannot convert null to type parameter '{0}' because it could be a non-nullable value type. Consider using 'default({0})' instead.
dotnet_diagnostic.cs0405.severity = error # Duplicate constraint '{0}' for type parameter '{1}'
dotnet_diagnostic.cs0406.severity = error # The class type constraint '{0}' must come before any other constraints
dotnet_diagnostic.cs0407.severity = error # '{1} {0}' has the wrong return type
dotnet_diagnostic.cs0409.severity = error # A constraint clause has already been specified for type parameter '{0}'. All of the constraints for a type parameter must be specified in a single where clause.
dotnet_diagnostic.cs0411.severity = error # The type arguments for method '{0}' cannot be inferred from the usage. Try specifying the type arguments explicitly.
dotnet_diagnostic.cs0412.severity = error # '{0}': a parameter, local variable, or local function cannot have the same name as a method type parameter
dotnet_diagnostic.cs0413.severity = error # The type parameter '{0}' cannot be used with the 'as' operator because it does not have a class type constraint nor a 'class' constraint
dotnet_diagnostic.cs0414.severity = warning # The field '{0}' is assigned but its value is never used
dotnet_diagnostic.cs0415.severity = error # The '{0}' attribute is valid only on an indexer that is not an explicit interface member declaration
dotnet_diagnostic.cs0416.severity = error # '{0}': an attribute argument cannot use type parameters
dotnet_diagnostic.cs0417.severity = error # '{0}': cannot provide arguments when creating an instance of a variable type
dotnet_diagnostic.cs0418.severity = error # '{0}': an abstract type cannot be sealed or static
dotnet_diagnostic.cs0419.severity = warning # Ambiguous reference in cref attribute: '{0}'. Assuming '{1}', but could have also matched other overloads including '{2}'.
dotnet_diagnostic.cs0420.severity = warning # '{0}': a reference to a volatile field will not be treated as volatile
dotnet_diagnostic.cs0423.severity = error # Since '{1}' has the ComImport attribute, '{0}' must be extern or abstract
dotnet_diagnostic.cs0424.severity = error # '{0}': a class with the ComImport attribute cannot specify a base class
dotnet_diagnostic.cs0425.severity = error # The constraints for type parameter '{0}' of method '{1}' must match the constraints for type parameter '{2}' of interface method '{3}'. Consider using an explicit interface implementation instead.
dotnet_diagnostic.cs0426.severity = error # The type name '{0}' does not exist in the type '{1}'
dotnet_diagnostic.cs0428.severity = error # Cannot convert method group '{0}' to non-delegate type '{1}'. Did you intend to invoke the method?
dotnet_diagnostic.cs0430.severity = error # The extern alias '{0}' was not specified in a /reference option
dotnet_diagnostic.cs0431.severity = error # Cannot use alias '{0}' with '::' since the alias references a type. Use '.' instead.
dotnet_diagnostic.cs0432.severity = error # Alias '{0}' not found
dotnet_diagnostic.cs0433.severity = error # The type '{1}' exists in both '{0}' and '{2}'
dotnet_diagnostic.cs0434.severity = error # The namespace '{1}' in '{0}' conflicts with the type '{3}' in '{2}'
dotnet_diagnostic.cs0435.severity = warning # The namespace '{1}' in '{0}' conflicts with the imported type '{3}' in '{2}'. Using the namespace defined in '{0}'.
dotnet_diagnostic.cs0436.severity = warning # The type '{1}' in '{0}' conflicts with the imported type '{3}' in '{2}'. Using the type defined in '{0}'.
dotnet_diagnostic.cs0437.severity = warning # The type '{1}' in '{0}' conflicts with the imported namespace '{3}' in '{2}'. Using the type defined in '{0}'.
dotnet_diagnostic.cs0438.severity = error # The type '{1}' in '{0}' conflicts with the namespace '{3}' in '{2}'
dotnet_diagnostic.cs0439.severity = error # An extern alias declaration must precede all other elements defined in the namespace
dotnet_diagnostic.cs0440.severity = warning # Defining an alias named 'global' is ill-advised since 'global::' always references the global namespace and not an alias
dotnet_diagnostic.cs0441.severity = error # '{0}': a type cannot be both static and sealed
dotnet_diagnostic.cs0442.severity = error # '{0}': abstract properties cannot have private accessors
dotnet_diagnostic.cs0443.severity = error # Syntax error; value expected
dotnet_diagnostic.cs0445.severity = error # Cannot modify the result of an unboxing conversion
dotnet_diagnostic.cs0446.severity = error # Foreach cannot operate on a '{0}'. Did you intend to invoke the '{0}'?
dotnet_diagnostic.cs0448.severity = error # The return type for ++ or -- operator must match the parameter type or be derived from the parameter type
dotnet_diagnostic.cs0449.severity = error # The 'class', 'struct', 'unmanaged', 'notnull', and 'default' constraints cannot be combined or duplicated, and must be specified first in the constraints list.
dotnet_diagnostic.cs0450.severity = error # '{0}': cannot specify both a constraint class and the 'class' or 'struct' constraint
dotnet_diagnostic.cs0451.severity = error # The 'new()' constraint cannot be used with the 'struct' constraint
dotnet_diagnostic.cs0452.severity = error # The type '{2}' must be a reference type in order to use it as parameter '{1}' in the generic type or method '{0}'
dotnet_diagnostic.cs0453.severity = error # The type '{2}' must be a non-nullable value type in order to use it as parameter '{1}' in the generic type or method '{0}'
dotnet_diagnostic.cs0454.severity = error # Circular constraint dependency involving '{0}' and '{1}'
dotnet_diagnostic.cs0455.severity = error # Type parameter '{0}' inherits conflicting constraints '{1}' and '{2}'
dotnet_diagnostic.cs0456.severity = error # Type parameter '{1}' has the 'struct' constraint so '{1}' cannot be used as a constraint for '{0}'
dotnet_diagnostic.cs0457.severity = error # Ambiguous user defined conversions '{0}' and '{1}' when converting from '{2}' to '{3}'
dotnet_diagnostic.cs0458.severity = warning # The result of the expression is always 'null' of type '{0}'
dotnet_diagnostic.cs0460.severity = error # Constraints for override and explicit interface implementation methods are inherited from the base method, so they cannot be specified directly, except for either a 'class', or a 'struct' constraint.
dotnet_diagnostic.cs0462.severity = error # The inherited members '{0}' and '{1}' have the same signature in type '{2}', so they cannot be overridden
dotnet_diagnostic.cs0463.severity = error # Evaluation of the decimal constant expression failed
dotnet_diagnostic.cs0464.severity = warning # Comparing with null of type '{0}' always produces 'false'
dotnet_diagnostic.cs0465.severity = warning # Introducing a 'Finalize' method can interfere with destructor invocation. Did you intend to declare a destructor?
dotnet_diagnostic.cs0466.severity = error # '{0}' should not have a params parameter since '{1}' does not
dotnet_diagnostic.cs0469.severity = warning # The 'goto case' value is not implicitly convertible to type '{0}'
dotnet_diagnostic.cs0470.severity = error # Method '{0}' cannot implement interface accessor '{1}' for type '{2}'. Use an explicit interface implementation.
dotnet_diagnostic.cs0472.severity = warning # The result of the expression is always '{0}' since a value of type '{1}' is never equal to 'null' of type '{2}'
dotnet_diagnostic.cs0473.severity = warning # Explicit interface implementation '{0}' matches more than one interface member. Which interface member is actually chosen is implementation-dependent. Consider using a non-explicit implementation instead.
dotnet_diagnostic.cs0500.severity = error # '{0}' cannot declare a body because it is marked abstract
dotnet_diagnostic.cs0501.severity = error # '{0}' must declare a body because it is not marked abstract, extern, or partial
dotnet_diagnostic.cs0502.severity = error # '{0}' cannot be both abstract and sealed
dotnet_diagnostic.cs0503.severity = error # The abstract {0} '{1}' cannot be marked virtual
dotnet_diagnostic.cs0504.severity = error # The constant '{0}' cannot be marked static
dotnet_diagnostic.cs0505.severity = error # '{0}': cannot override because '{1}' is not a function
dotnet_diagnostic.cs0506.severity = error # '{0}': cannot override inherited member '{1}' because it is not marked virtual, abstract, or override
dotnet_diagnostic.cs0507.severity = error # '{0}': cannot change access modifiers when overriding '{1}' inherited member '{2}'
dotnet_diagnostic.cs0508.severity = error # '{0}': return type must be '{2}' to match overridden member '{1}'
dotnet_diagnostic.cs0509.severity = error # '{0}': cannot derive from sealed type '{1}'
dotnet_diagnostic.cs0513.severity = error # '{0}' is abstract but it is contained in non-abstract type '{1}'
dotnet_diagnostic.cs0514.severity = error # '{0}': static constructor cannot have an explicit 'this' or 'base' constructor call
dotnet_diagnostic.cs0515.severity = error # '{0}': access modifiers are not allowed on static constructors
dotnet_diagnostic.cs0516.severity = error # Constructor '{0}' cannot call itself
dotnet_diagnostic.cs0517.severity = error # '{0}' has no base class and cannot call a base constructor
dotnet_diagnostic.cs0518.severity = error # Predefined type '{0}' is not defined or imported
dotnet_diagnostic.cs0522.severity = error # '{0}': structs cannot call base class constructors
dotnet_diagnostic.cs0523.severity = error # Struct member '{0}' of type '{1}' causes a cycle in the struct layout
dotnet_diagnostic.cs0525.severity = error # Interfaces cannot contain instance fields
dotnet_diagnostic.cs0526.severity = error # Interfaces cannot contain instance constructors
dotnet_diagnostic.cs0527.severity = error # Type '{0}' in interface list is not an interface
dotnet_diagnostic.cs0528.severity = error # '{0}' is already listed in interface list
dotnet_diagnostic.cs0529.severity = error # Inherited interface '{1}' causes a cycle in the interface hierarchy of '{0}'
dotnet_diagnostic.cs0533.severity = error # '{0}' hides inherited abstract member '{1}'
dotnet_diagnostic.cs0534.severity = error # '{0}' does not implement inherited abstract member '{1}'
dotnet_diagnostic.cs0535.severity = error # '{0}' does not implement interface member '{1}'
dotnet_diagnostic.cs0537.severity = error # The class System.Object cannot have a base class or implement an interface
dotnet_diagnostic.cs0538.severity = error # '{0}' in explicit interface declaration is not an interface
dotnet_diagnostic.cs0539.severity = error # '{0}' in explicit interface declaration is not found among members of the interface that can be implemented
dotnet_diagnostic.cs0540.severity = error # '{0}': containing type does not implement interface '{1}'
dotnet_diagnostic.cs0541.severity = error # '{0}': explicit interface declaration can only be declared in a class, record, struct or interface
dotnet_diagnostic.cs0542.severity = error # '{0}': member names cannot be the same as their enclosing type
dotnet_diagnostic.cs0543.severity = error # '{0}': the enumerator value is too large to fit in its type
dotnet_diagnostic.cs0544.severity = error # '{0}': cannot override because '{1}' is not a property
dotnet_diagnostic.cs0545.severity = error # '{0}': cannot override because '{1}' does not have an overridable get accessor
dotnet_diagnostic.cs0546.severity = error # '{0}': cannot override because '{1}' does not have an overridable set accessor
dotnet_diagnostic.cs0547.severity = error # '{0}': property or indexer cannot have void type
dotnet_diagnostic.cs0548.severity = error # '{0}': property or indexer must have at least one accessor
dotnet_diagnostic.cs0549.severity = error # '{0}' is a new virtual member in sealed type '{1}'
dotnet_diagnostic.cs0550.severity = error # '{0}' adds an accessor not found in interface member '{1}'
dotnet_diagnostic.cs0551.severity = error # Explicit interface implementation '{0}' is missing accessor '{1}'
dotnet_diagnostic.cs0552.severity = error # '{0}': user-defined conversions to or from an interface are not allowed
dotnet_diagnostic.cs0553.severity = error # '{0}': user-defined conversions to or from a base type are not allowed
dotnet_diagnostic.cs0554.severity = error # '{0}': user-defined conversions to or from a derived type are not allowed
dotnet_diagnostic.cs0555.severity = error # User-defined operator cannot convert a type to itself
dotnet_diagnostic.cs0556.severity = error # User-defined conversion must convert to or from the enclosing type
dotnet_diagnostic.cs0557.severity = error # Duplicate user-defined conversion in type '{0}'
dotnet_diagnostic.cs0558.severity = error # User-defined operator '{0}' must be declared static and public
dotnet_diagnostic.cs0559.severity = error # The parameter type for ++ or -- operator must be the containing type
dotnet_diagnostic.cs0562.severity = error # The parameter of a unary operator must be the containing type
dotnet_diagnostic.cs0563.severity = error # One of the parameters of a binary operator must be the containing type
dotnet_diagnostic.cs0564.severity = error # The first operand of an overloaded shift operator must have the same type as the containing type
dotnet_diagnostic.cs0567.severity = error # Conversion, equality, or inequality operators declared in interfaces must be abstract or virtual
dotnet_diagnostic.cs0569.severity = error # '{0}': cannot override '{1}' because it is not supported by the language
dotnet_diagnostic.cs0570.severity = error # '{0}' is not supported by the language
dotnet_diagnostic.cs0571.severity = error # '{0}': cannot explicitly call operator or accessor
dotnet_diagnostic.cs0572.severity = error # '{0}': cannot reference a type through an expression; try '{1}' instead
dotnet_diagnostic.cs0574.severity = error # Name of destructor must match name of type
dotnet_diagnostic.cs0575.severity = error # Only class types can contain destructors
dotnet_diagnostic.cs0576.severity = error # Namespace '{1}' contains a definition conflicting with alias '{0}'
dotnet_diagnostic.cs0577.severity = error # The Conditional attribute is not valid on '{0}' because it is a constructor, destructor, operator, lambda expression, or explicit interface implementation
dotnet_diagnostic.cs0578.severity = error # The Conditional attribute is not valid on '{0}' because its return type is not void
dotnet_diagnostic.cs0579.severity = error # Duplicate '{0}' attribute
dotnet_diagnostic.cs0582.severity = error # The Conditional attribute is not valid on interface members
dotnet_diagnostic.cs0590.severity = error # User-defined operators cannot return void
dotnet_diagnostic.cs0591.severity = error # Invalid value for argument to '{0}' attribute
dotnet_diagnostic.cs0592.severity = error # Attribute '{0}' is not valid on this declaration type. It is only valid on '{1}' declarations.
dotnet_diagnostic.cs0594.severity = error # Floating-point constant is outside the range of type '{0}'
dotnet_diagnostic.cs0595.severity = error # Invalid real literal.
dotnet_diagnostic.cs0596.severity = error # The Guid attribute must be specified with the ComImport attribute
dotnet_diagnostic.cs0599.severity = error # Invalid value for named attribute argument '{0}'
dotnet_diagnostic.cs0601.severity = error # The DllImport attribute must be specified on a method marked 'static' and 'extern'
dotnet_diagnostic.cs0610.severity = error # Field or property cannot be of type '{0}'
dotnet_diagnostic.cs0611.severity = error # Array elements cannot be of type '{0}'
dotnet_diagnostic.cs0612.severity = warning # '{0}' is obsolete
dotnet_diagnostic.cs0616.severity = error # '{0}' is not an attribute class
dotnet_diagnostic.cs0617.severity = error # '{0}' is not a valid named attribute argument. Named attribute arguments must be fields which are not readonly, static, or const, or read-write properties which are public and not static.
dotnet_diagnostic.cs0618.severity = warning # '{0}' is obsolete: '{1}'
dotnet_diagnostic.cs0619.severity = error # '{0}' is obsolete: '{1}'
dotnet_diagnostic.cs0620.severity = error # Indexers cannot have void type
dotnet_diagnostic.cs0621.severity = error # '{0}': virtual or abstract members cannot be private
dotnet_diagnostic.cs0622.severity = error # Can only use array initializer expressions to assign to array types. Try using a new expression instead.
dotnet_diagnostic.cs0623.severity = error # Array initializers can only be used in a variable or field initializer. Try using a new expression instead.
dotnet_diagnostic.cs0625.severity = error # '{0}': instance field in types marked with StructLayout(LayoutKind.Explicit) must have a FieldOffset attribute
dotnet_diagnostic.cs0626.severity = warning # Method, operator, or accessor '{0}' is marked external and has no attributes on it. Consider adding a DllImport attribute to specify the external implementation.
dotnet_diagnostic.cs0628.severity = warning # '{0}': new protected member declared in sealed type
dotnet_diagnostic.cs0629.severity = error # Conditional member '{0}' cannot implement interface member '{1}' in type '{2}'
dotnet_diagnostic.cs0630.severity = error # '{0}' cannot implement interface member '{1}' in type '{2}' because it has an __arglist parameter
dotnet_diagnostic.cs0631.severity = error # ref and out are not valid in this context
dotnet_diagnostic.cs0633.severity = error # The argument to the '{0}' attribute must be a valid identifier
dotnet_diagnostic.cs0636.severity = error # The FieldOffset attribute can only be placed on members of types marked with the StructLayout(LayoutKind.Explicit)
dotnet_diagnostic.cs0637.severity = error # The FieldOffset attribute is not allowed on static or const fields
dotnet_diagnostic.cs0641.severity = error # Attribute '{0}' is only valid on classes derived from System.Attribute
dotnet_diagnostic.cs0642.severity = warning # Possible mistaken empty statement
dotnet_diagnostic.cs0643.severity = error # '{0}' duplicate named attribute argument
dotnet_diagnostic.cs0644.severity = error # '{0}' cannot derive from special class '{1}'
dotnet_diagnostic.cs0646.severity = error # Cannot specify the DefaultMember attribute on a type containing an indexer
dotnet_diagnostic.cs0648.severity = error # '{0}' is a type not supported by the language
dotnet_diagnostic.cs0649.severity = warning # Field '{0}' is never assigned to, and will always have its default value {1}
dotnet_diagnostic.cs0650.severity = error # Bad array declarator: To declare a managed array the rank specifier precedes the variable's identifier. To declare a fixed size buffer field, use the fixed keyword before the field type.
dotnet_diagnostic.cs0652.severity = warning # Comparison to integral constant is useless; the constant is outside the range of type '{0}'
dotnet_diagnostic.cs0653.severity = error # Cannot apply attribute class '{0}' because it is abstract
dotnet_diagnostic.cs0655.severity = error # '{0}' is not a valid named attribute argument because it is not a valid attribute parameter type
dotnet_diagnostic.cs0656.severity = error # Missing compiler required member '{0}.{1}'
dotnet_diagnostic.cs0657.severity = warning # '{0}' is not a valid attribute location for this declaration. Valid attribute locations for this declaration are '{1}'. All attributes in this block will be ignored.
dotnet_diagnostic.cs0658.severity = warning # '{0}' is not a recognized attribute location. Valid attribute locations for this declaration are '{1}'. All attributes in this block will be ignored.
dotnet_diagnostic.cs0659.severity = warning # '{0}' overrides Object.Equals(object o) but does not override Object.GetHashCode()
dotnet_diagnostic.cs0660.severity = warning # '{0}' defines operator == or operator != but does not override Object.Equals(object o)
dotnet_diagnostic.cs0661.severity = warning # '{0}' defines operator == or operator != but does not override Object.GetHashCode()
dotnet_diagnostic.cs0662.severity = error # Cannot specify the Out attribute on a ref parameter without also specifying the In attribute.
dotnet_diagnostic.cs0663.severity = error # '{0}' cannot define an overloaded {1} that differs only on parameter modifiers '{2}' and '{3}'
dotnet_diagnostic.cs0664.severity = error # Literal of type double cannot be implicitly converted to type '{1}'; use an '{0}' suffix to create a literal of this type
dotnet_diagnostic.cs0665.severity = warning # Assignment in conditional expression is always constant; did you mean to use == instead of = ?
dotnet_diagnostic.cs0666.severity = error # '{0}': new protected member declared in struct
dotnet_diagnostic.cs0668.severity = error # Two indexers have different names; the IndexerName attribute must be used with the same name on every indexer within a type
dotnet_diagnostic.cs0669.severity = error # A class with the ComImport attribute cannot have a user-defined constructor
dotnet_diagnostic.cs0670.severity = error # Field cannot have void type
dotnet_diagnostic.cs0672.severity = warning # Member '{0}' overrides obsolete member '{1}'. Add the Obsolete attribute to '{0}'.
dotnet_diagnostic.cs0673.severity = error # System.Void cannot be used from C# -- use typeof(void) to get the void type object
dotnet_diagnostic.cs0674.severity = error # Do not use 'System.ParamArrayAttribute'/'System.Runtime.CompilerServices.ParamCollectionAttribute'. Use the 'params' keyword instead.
dotnet_diagnostic.cs0675.severity = warning # Bitwise-or operator used on a sign-extended operand; consider casting to a smaller unsigned type first
dotnet_diagnostic.cs0677.severity = error # '{0}': a volatile field cannot be of the type '{1}'
dotnet_diagnostic.cs0678.severity = error # '{0}': a field cannot be both volatile and readonly
dotnet_diagnostic.cs0681.severity = error # The modifier 'abstract' is not valid on fields. Try using a property instead.
dotnet_diagnostic.cs0682.severity = error # '{0}' cannot implement '{1}' because it is not supported by the language
dotnet_diagnostic.cs0683.severity = error # '{0}' explicit method implementation cannot implement '{1}' because it is an accessor
dotnet_diagnostic.cs0684.severity = warning # '{0}' interface marked with 'CoClassAttribute' not marked with 'ComImportAttribute'
dotnet_diagnostic.cs0685.severity = error # Conditional member '{0}' cannot have an out parameter
dotnet_diagnostic.cs0686.severity = error # Accessor '{0}' cannot implement interface member '{1}' for type '{2}'. Use an explicit interface implementation.
dotnet_diagnostic.cs0687.severity = error # The namespace alias qualifier '::' always resolves to a type or namespace so is illegal here. Consider using '.' instead.
dotnet_diagnostic.cs0689.severity = error # Cannot derive from '{0}' because it is a type parameter
dotnet_diagnostic.cs0692.severity = error # Duplicate type parameter '{0}'
dotnet_diagnostic.cs0693.severity = warning # Type parameter '{0}' has the same name as the type parameter from outer type '{1}'
dotnet_diagnostic.cs0694.severity = error # Type parameter '{0}' has the same name as the containing type, or method
dotnet_diagnostic.cs0695.severity = error # '{0}' cannot implement both '{1}' and '{2}' because they may unify for some type parameter substitutions
dotnet_diagnostic.cs0699.severity = error # '{1}' does not define type parameter '{0}'
dotnet_diagnostic.cs0701.severity = error # '{0}' is not a valid constraint. A type used as a constraint must be an interface, a non-sealed class or a type parameter.
dotnet_diagnostic.cs0702.severity = error # Constraint cannot be special class '{0}'
dotnet_diagnostic.cs0703.severity = error # Inconsistent accessibility: constraint type '{1}' is less accessible than '{0}'
dotnet_diagnostic.cs0704.severity = error # Cannot do non-virtual member lookup in '{0}' because it is a type parameter
dotnet_diagnostic.cs0706.severity = error # Invalid constraint type. A type used as a constraint must be an interface, a non-sealed class or a type parameter.
dotnet_diagnostic.cs0708.severity = error # '{0}': cannot declare instance members in a static class
dotnet_diagnostic.cs0709.severity = error # '{1}': cannot derive from static class '{0}'
dotnet_diagnostic.cs0710.severity = error # Static classes cannot have instance constructors
dotnet_diagnostic.cs0711.severity = error # Static classes cannot contain destructors
dotnet_diagnostic.cs0712.severity = error # Cannot create an instance of the static class '{0}'
dotnet_diagnostic.cs0713.severity = error # Static class '{0}' cannot derive from type '{1}'. Static classes must derive from object.
dotnet_diagnostic.cs0714.severity = error # '{0}': static classes cannot implement interfaces
dotnet_diagnostic.cs0715.severity = error # '{0}': static classes cannot contain user-defined operators
dotnet_diagnostic.cs0716.severity = error # Cannot convert to static type '{0}'
dotnet_diagnostic.cs0717.severity = error # '{0}': static classes cannot be used as constraints
dotnet_diagnostic.cs0718.severity = error # '{0}': static types cannot be used as type arguments
dotnet_diagnostic.cs0719.severity = error # '{0}': array elements cannot be of static type
dotnet_diagnostic.cs0720.severity = error # '{0}': cannot declare indexers in a static class
dotnet_diagnostic.cs0721.severity = error # '{0}': static types cannot be used as parameters
dotnet_diagnostic.cs0722.severity = error # '{0}': static types cannot be used as return types
dotnet_diagnostic.cs0723.severity = error # Cannot declare a variable of static type '{0}'
dotnet_diagnostic.cs0724.severity = error # A throw statement with no arguments is not allowed in a finally clause that is nested inside the nearest enclosing catch clause
dotnet_diagnostic.cs0726.severity = error # '{0}' is not a valid format specifier
dotnet_diagnostic.cs0728.severity = warning # Possibly incorrect assignment to local '{0}' which is the argument to a using or lock statement. The Dispose call or unlocking will happen on the original value of the local.
dotnet_diagnostic.cs0729.severity = error # Type '{0}' is defined in this assembly, but a type forwarder is specified for it
dotnet_diagnostic.cs0730.severity = error # Cannot forward type '{0}' because it is a nested type of '{1}'
dotnet_diagnostic.cs0731.severity = error # The type forwarder for type '{0}' in assembly '{1}' causes a cycle
dotnet_diagnostic.cs0734.severity = error # The /moduleassemblyname option may only be specified when building a target type of 'module'
dotnet_diagnostic.cs0735.severity = error # Invalid type specified as an argument for TypeForwardedTo attribute
dotnet_diagnostic.cs0736.severity = error # '{0}' does not implement instance interface member '{1}'. '{2}' cannot implement the interface member because it is static.
dotnet_diagnostic.cs0737.severity = error # '{0}' does not implement interface member '{1}'. '{2}' cannot implement an interface member because it is not public.
dotnet_diagnostic.cs0738.severity = error # '{0}' does not implement interface member '{1}'. '{2}' cannot implement '{1}' because it does not have the matching return type of '{3}'.
dotnet_diagnostic.cs0739.severity = error # '{0}' duplicate TypeForwardedToAttribute
dotnet_diagnostic.cs0742.severity = error # A query body must end with a select clause or a group clause
dotnet_diagnostic.cs0743.severity = error # Expected contextual keyword 'on'
dotnet_diagnostic.cs0744.severity = error # Expected contextual keyword 'equals'
dotnet_diagnostic.cs0745.severity = error # Expected contextual keyword 'by'
dotnet_diagnostic.cs0746.severity = error # Invalid anonymous type member declarator. Anonymous type members must be declared with a member assignment, simple name or member access.
dotnet_diagnostic.cs0747.severity = error # Invalid initializer member declarator
dotnet_diagnostic.cs0748.severity = error # Inconsistent lambda parameter usage; parameter types must be all explicit or all implicit
dotnet_diagnostic.cs0750.severity = error # A partial method cannot have the 'abstract' modifier
dotnet_diagnostic.cs0751.severity = error # A partial method must be declared within a partial type
dotnet_diagnostic.cs0754.severity = error # A partial method may not explicitly implement an interface method
dotnet_diagnostic.cs0755.severity = error # Both partial method declarations must be extension methods or neither may be an extension method
dotnet_diagnostic.cs0756.severity = error # A partial method may not have multiple defining declarations
dotnet_diagnostic.cs0757.severity = error # A partial method may not have multiple implementing declarations
dotnet_diagnostic.cs0758.severity = error # Both partial method declarations must use a params parameter or neither may use a params parameter
dotnet_diagnostic.cs0759.severity = error # No defining declaration found for implementing declaration of partial method '{0}'
dotnet_diagnostic.cs0761.severity = error # Partial method declarations of '{0}' have inconsistent constraints for type parameter '{1}'
dotnet_diagnostic.cs0762.severity = error # Cannot create delegate from method '{0}' because it is a partial method without an implementing declaration
dotnet_diagnostic.cs0763.severity = error # Both partial method declarations must be static or neither may be static
dotnet_diagnostic.cs0764.severity = error # Both partial method declarations must be unsafe or neither may be unsafe
dotnet_diagnostic.cs0765.severity = error # Partial methods with only a defining declaration or removed conditional methods cannot be used in expression trees
dotnet_diagnostic.cs0767.severity = error # Cannot inherit interface '{0}' with the specified type parameters because it causes method '{1}' to contain overloads which differ only on ref and out
dotnet_diagnostic.cs0768.severity = error # Constructor '{0}' cannot call itself through another constructor
dotnet_diagnostic.cs0809.severity = warning # Obsolete member '{0}' overrides non-obsolete member '{1}'
dotnet_diagnostic.cs0811.severity = warning # The fully qualified name for '{0}' is too long for debug information. Compile without '/debug' option.
dotnet_diagnostic.cs0815.severity = error # Cannot assign {0} to an implicitly-typed variable
dotnet_diagnostic.cs0818.severity = error # Implicitly-typed variables must be initialized
dotnet_diagnostic.cs0819.severity = error # Implicitly-typed variables cannot have multiple declarators
dotnet_diagnostic.cs0820.severity = error # Cannot initialize an implicitly-typed variable with an array initializer
dotnet_diagnostic.cs0821.severity = error # Implicitly-typed local variables cannot be fixed
dotnet_diagnostic.cs0822.severity = error # Implicitly-typed variables cannot be constant
dotnet_diagnostic.cs0824.severity = warning # Constructor '{0}' is marked external
dotnet_diagnostic.cs0825.severity = error # The contextual keyword 'var' may only appear within a local variable declaration or in script code
dotnet_diagnostic.cs0826.severity = error # No best type found for implicitly-typed array
dotnet_diagnostic.cs0828.severity = error # Cannot assign '{0}' to anonymous type property
dotnet_diagnostic.cs0831.severity = error # An expression tree may not contain a base access
dotnet_diagnostic.cs0832.severity = error # An expression tree may not contain an assignment operator
dotnet_diagnostic.cs0833.severity = error # An anonymous type cannot have multiple properties with the same name
dotnet_diagnostic.cs0834.severity = error # A lambda expression with a statement body cannot be converted to an expression tree
dotnet_diagnostic.cs0835.severity = error # Cannot convert lambda to an expression tree whose type argument '{0}' is not a delegate type
dotnet_diagnostic.cs0836.severity = error # Cannot use anonymous type in a constant expression
dotnet_diagnostic.cs0837.severity = error # The first operand of an 'is' or 'as' operator may not be a lambda expression, anonymous method, or method group.
dotnet_diagnostic.cs0838.severity = error # An expression tree may not contain a multidimensional array initializer
dotnet_diagnostic.cs0839.severity = error # Argument missing
dotnet_diagnostic.cs0841.severity = error # Cannot use local variable '{0}' before it is declared
dotnet_diagnostic.cs0843.severity = error # Auto-implemented property '{0}' must be fully assigned before control is returned to the caller. Consider updating to language version '{1}' to auto-default the property.
dotnet_diagnostic.cs0844.severity = error # Cannot use local variable '{0}' before it is declared. The declaration of the local variable hides the field '{1}'.
dotnet_diagnostic.cs0845.severity = error # An expression tree lambda may not contain a coalescing operator with a null or default literal left-hand side
dotnet_diagnostic.cs0846.severity = error # A nested array initializer is expected
dotnet_diagnostic.cs0847.severity = error # An array initializer of length '{0}' is expected
dotnet_diagnostic.cs0853.severity = error # An expression tree may not contain a named argument specification
dotnet_diagnostic.cs0854.severity = error # An expression tree may not contain a call or invocation that uses optional arguments
dotnet_diagnostic.cs0855.severity = error # An expression tree may not contain an indexed property
dotnet_diagnostic.cs0856.severity = error # Indexed property '{0}' has non-optional arguments which must be provided
dotnet_diagnostic.cs0857.severity = error # Indexed property '{0}' must have all arguments optional
dotnet_diagnostic.cs1001.severity = error # Identifier expected
dotnet_diagnostic.cs1002.severity = error # ; expected
dotnet_diagnostic.cs1003.severity = error # Syntax error, '{0}' expected
dotnet_diagnostic.cs1004.severity = error # Duplicate '{0}' modifier
dotnet_diagnostic.cs1007.severity = error # Property accessor already defined
dotnet_diagnostic.cs1008.severity = error # Type byte, sbyte, short, ushort, int, uint, long, or ulong expected
dotnet_diagnostic.cs1009.severity = error # Unrecognized escape sequence
dotnet_diagnostic.cs1010.severity = error # Newline in constant
dotnet_diagnostic.cs1011.severity = error # Empty character literal
dotnet_diagnostic.cs1012.severity = error # Too many characters in character literal
dotnet_diagnostic.cs1013.severity = error # Invalid number
dotnet_diagnostic.cs1014.severity = error # A get or set accessor expected
dotnet_diagnostic.cs1015.severity = error # An object, string, or class type expected
dotnet_diagnostic.cs1016.severity = error # Named attribute argument expected
dotnet_diagnostic.cs1017.severity = error # Catch clauses cannot follow the general catch clause of a try statement
dotnet_diagnostic.cs1018.severity = error # Keyword 'this' or 'base' expected
dotnet_diagnostic.cs1019.severity = error # Overloadable unary operator expected
dotnet_diagnostic.cs1020.severity = error # Overloadable binary operator expected
dotnet_diagnostic.cs1021.severity = error # Integral constant is too large
dotnet_diagnostic.cs1022.severity = error # Type or namespace definition, or end-of-file expected
dotnet_diagnostic.cs1023.severity = error # Embedded statement cannot be a declaration or labeled statement
dotnet_diagnostic.cs1024.severity = error # Preprocessor directive expected
dotnet_diagnostic.cs1025.severity = error # Single-line comment or end-of-line expected
dotnet_diagnostic.cs1026.severity = error # ) expected
dotnet_diagnostic.cs1027.severity = error # #endif directive expected
dotnet_diagnostic.cs1028.severity = error # Unexpected preprocessor directive
dotnet_diagnostic.cs1029.severity = error # #error: '{0}'
dotnet_diagnostic.cs1030.severity = warning # #warning: '{0}'
dotnet_diagnostic.cs1031.severity = error # Type expected
dotnet_diagnostic.cs1032.severity = error # Cannot define/undefine preprocessor symbols after first token in file
dotnet_diagnostic.cs1035.severity = error # End-of-file found, '*/' expected
dotnet_diagnostic.cs1037.severity = error # Overloadable operator expected
dotnet_diagnostic.cs1038.severity = error # #endregion directive expected
dotnet_diagnostic.cs1039.severity = error # Unterminated string literal
dotnet_diagnostic.cs1040.severity = error # Preprocessor directives must appear as the first non-whitespace character on a line
dotnet_diagnostic.cs1041.severity = error # Identifier expected; '{1}' is a keyword
dotnet_diagnostic.cs1043.severity = error # { or ; expected
dotnet_diagnostic.cs1044.severity = error # Cannot use more than one type in a for, using, fixed, or declaration statement
dotnet_diagnostic.cs1055.severity = error # An add or remove accessor expected
dotnet_diagnostic.cs1056.severity = error # Unexpected character '{0}'
dotnet_diagnostic.cs1057.severity = error # '{0}': static classes cannot contain protected members
dotnet_diagnostic.cs1058.severity = warning # A previous catch clause already catches all exceptions. All non-exceptions thrown will be wrapped in a System.Runtime.CompilerServices.RuntimeWrappedException.
dotnet_diagnostic.cs1059.severity = error # The operand of an increment or decrement operator must be a variable, property or indexer
dotnet_diagnostic.cs1061.severity = error # '{0}' does not contain a definition for '{1}' and no accessible extension method '{1}' accepting a first argument of type '{0}' could be found (are you missing a using directive or an assembly reference?)
dotnet_diagnostic.cs1062.severity = warning # The best overloaded Add method '{0}' for the collection initializer element is obsolete. {1}
dotnet_diagnostic.cs1063.severity = error # The best overloaded Add method '{0}' for the collection initializer element is obsolete. {1}
dotnet_diagnostic.cs1064.severity = warning # The best overloaded Add method '{0}' for the collection initializer element is obsolete.
dotnet_diagnostic.cs1065.severity = error # Default values are not valid in this context.
dotnet_diagnostic.cs1066.severity = warning # The default value specified for parameter '{0}' will have no effect because it applies to a member that is used in contexts that do not allow optional arguments
dotnet_diagnostic.cs1067.severity = error # Partial declarations of '{0}' must have the same type parameter names and variance modifiers in the same order
dotnet_diagnostic.cs1068.severity = error # The type name '{0}' could not be found in the global namespace. This type has been forwarded to assembly '{1}' Consider adding a reference to that assembly.
dotnet_diagnostic.cs1069.severity = error # The type name '{0}' could not be found in the namespace '{1}'. This type has been forwarded to assembly '{2}' Consider adding a reference to that assembly.
dotnet_diagnostic.cs1070.severity = error # The type name '{0}' could not be found. This type has been forwarded to assembly '{1}'. Consider adding a reference to that assembly.
dotnet_diagnostic.cs1072.severity = warning # Expected identifier or numeric literal.
dotnet_diagnostic.cs1073.severity = error # Unexpected token '{0}'
dotnet_diagnostic.cs1100.severity = error # Method '{0}' has a parameter modifier 'this' which is not on the first parameter
dotnet_diagnostic.cs1103.severity = error # The first parameter of an extension method cannot be of type '{0}'
dotnet_diagnostic.cs1104.severity = error # A parameter array cannot be used with 'this' modifier on an extension method
dotnet_diagnostic.cs1105.severity = error # Extension method must be static
dotnet_diagnostic.cs1106.severity = error # Extension method must be defined in a non-generic static class
dotnet_diagnostic.cs1107.severity = error # A parameter can only have one '{0}' modifier
dotnet_diagnostic.cs1109.severity = error # Extension methods must be defined in a top level static class; {0} is a nested class
dotnet_diagnostic.cs1110.severity = error # Cannot define a new extension method because the compiler required type '{0}' cannot be found. Are you missing a reference to System.Core.dll?
dotnet_diagnostic.cs1112.severity = error # Do not use 'System.Runtime.CompilerServices.ExtensionAttribute'. Use the 'this' keyword instead.
dotnet_diagnostic.cs1113.severity = error # Extension method '{0}' defined on value type '{1}' cannot be used to create delegates
dotnet_diagnostic.cs1501.severity = error # No overload for method '{0}' takes {1} arguments
dotnet_diagnostic.cs1503.severity = error # Argument {0}: cannot convert from '{1}' to '{2}'
dotnet_diagnostic.cs1504.severity = error # Source file '{0}' could not be opened -- {1}
dotnet_diagnostic.cs1507.severity = error # Cannot link resource files when building a module
dotnet_diagnostic.cs1508.severity = error # Resource identifier '{0}' has already been used in this assembly
dotnet_diagnostic.cs1509.severity = error # The referenced file '{0}' is not an assembly
dotnet_diagnostic.cs1510.severity = error # A ref or out value must be an assignable variable
dotnet_diagnostic.cs1511.severity = error # Keyword 'base' is not available in a static method
dotnet_diagnostic.cs1512.severity = error # Keyword 'base' is not available in the current context
dotnet_diagnostic.cs1513.severity = error # } expected
dotnet_diagnostic.cs1514.severity = error # { expected
dotnet_diagnostic.cs1515.severity = error # 'in' expected
dotnet_diagnostic.cs1517.severity = error # Invalid preprocessor expression
dotnet_diagnostic.cs1519.severity = error # Invalid token '{0}' in class, record, struct, or interface member declaration
dotnet_diagnostic.cs1520.severity = error # Method must have a return type
dotnet_diagnostic.cs1521.severity = error # Invalid base type
dotnet_diagnostic.cs1522.severity = warning # Empty switch block
dotnet_diagnostic.cs1524.severity = error # Expected catch or finally
dotnet_diagnostic.cs1525.severity = error # Invalid expression term '{0}'
dotnet_diagnostic.cs1526.severity = error # A new expression requires an argument list or (), [], or {} after type
dotnet_diagnostic.cs1527.severity = error # Elements defined in a namespace cannot be explicitly declared as private, protected, protected internal, or private protected
dotnet_diagnostic.cs1528.severity = error # Expected ; or = (cannot specify constructor arguments in declaration)
dotnet_diagnostic.cs1529.severity = error # A using clause must precede all other elements defined in the namespace except extern alias declarations
dotnet_diagnostic.cs1534.severity = error # Overloaded binary operator '{0}' takes two parameters
dotnet_diagnostic.cs1535.severity = error # Overloaded unary operator '{0}' takes one parameter
dotnet_diagnostic.cs1536.severity = error # Invalid parameter type 'void'
dotnet_diagnostic.cs1537.severity = error # The using alias '{0}' appeared previously in this namespace
dotnet_diagnostic.cs1540.severity = error # Cannot access protected member '{0}' via a qualifier of type '{1}'; the qualifier must be of type '{2}' (or derived from it)
dotnet_diagnostic.cs1542.severity = error # '{0}' cannot be added to this assembly because it already is an assembly
dotnet_diagnostic.cs1545.severity = error # Property, indexer, or event '{0}' is not supported by the language; try directly calling accessor methods '{1}' or '{2}'
dotnet_diagnostic.cs1546.severity = error # Property, indexer, or event '{0}' is not supported by the language; try directly calling accessor method '{1}'
dotnet_diagnostic.cs1547.severity = error # Keyword 'void' cannot be used in this context
dotnet_diagnostic.cs1551.severity = error # Indexers must have at least one parameter
dotnet_diagnostic.cs1552.severity = error # Array type specifier, [], must appear before parameter name
dotnet_diagnostic.cs1553.severity = error # Declaration is not valid; use '{0} operator <dest-type> (...' instead
dotnet_diagnostic.cs1555.severity = error # Could not find '{0}' specified for Main method
dotnet_diagnostic.cs1556.severity = error # '{0}' specified for Main method must be a non-generic class, record, struct, or interface
dotnet_diagnostic.cs1558.severity = error # '{0}' does not have a suitable static 'Main' method
dotnet_diagnostic.cs1562.severity = error # Outputs without source must have the /out option specified
dotnet_diagnostic.cs1564.severity = error # Conflicting options specified: Win32 resource file; Win32 manifest
dotnet_diagnostic.cs1565.severity = error # Conflicting options specified: Win32 resource file; Win32 icon
dotnet_diagnostic.cs1566.severity = error # Error reading resource '{0}' -- '{1}'
dotnet_diagnostic.cs1569.severity = error # Error writing to XML documentation file: {0}
dotnet_diagnostic.cs1570.severity = warning # XML comment has badly formed XML -- '{0}'
dotnet_diagnostic.cs1571.severity = warning # XML comment has a duplicate param tag for '{0}'
dotnet_diagnostic.cs1572.severity = warning # XML comment has a param tag for '{0}', but there is no parameter by that name
dotnet_diagnostic.cs1573.severity = warning # Parameter '{0}' has no matching param tag in the XML comment for '{1}' (but other parameters do)
dotnet_diagnostic.cs1574.severity = warning # XML comment has cref attribute '{0}' that could not be resolved
dotnet_diagnostic.cs1575.severity = error # A stackalloc expression requires [] after type
dotnet_diagnostic.cs1576.severity = error # The line number specified for #line directive is missing or invalid
dotnet_diagnostic.cs1578.severity = error # Quoted file name, single-line comment or end-of-line expected
dotnet_diagnostic.cs1579.severity = error # foreach statement cannot operate on variables of type '{0}' because '{0}' does not contain a public instance or extension definition for '{1}'
dotnet_diagnostic.cs1580.severity = warning # Invalid type for parameter {0} in XML comment cref attribute: '{1}'
dotnet_diagnostic.cs1581.severity = warning # Invalid return type in XML comment cref attribute
dotnet_diagnostic.cs1583.severity = error # Error reading Win32 resources -- {0}
dotnet_diagnostic.cs1584.severity = warning # XML comment has syntactically incorrect cref attribute '{0}'
dotnet_diagnostic.cs1585.severity = error # Member modifier '{0}' must precede the member type and name
dotnet_diagnostic.cs1586.severity = error # Array creation must have array size or array initializer
dotnet_diagnostic.cs1587.severity = warning # XML comment is not placed on a valid language element
dotnet_diagnostic.cs1589.severity = warning # Unable to include XML fragment '{1}' of file '{0}' -- {2}
dotnet_diagnostic.cs1590.severity = warning # Invalid XML include element -- {0}
dotnet_diagnostic.cs1591.severity = warning # Missing XML comment for publicly visible type or member '{0}'
dotnet_diagnostic.cs1592.severity = warning # Badly formed XML in included comments file -- '{0}'
dotnet_diagnostic.cs1593.severity = error # Delegate '{0}' does not take {1} arguments
dotnet_diagnostic.cs1597.severity = error # Semicolon after method or accessor block is not valid
dotnet_diagnostic.cs1599.severity = error # The return type of a method, delegate, or function pointer cannot be '{0}'
dotnet_diagnostic.cs1600.severity = error # Compilation cancelled by user
dotnet_diagnostic.cs1601.severity = error # Cannot make reference to variable of type '{0}'
dotnet_diagnostic.cs1604.severity = error # Cannot assign to '{0}' because it is read-only
dotnet_diagnostic.cs1605.severity = error # Cannot use '{0}' as a ref or out value because it is read-only
dotnet_diagnostic.cs1607.severity = warning # Unknown
dotnet_diagnostic.cs1608.severity = error # The RequiredAttribute attribute is not permitted on C# types
dotnet_diagnostic.cs1609.severity = error # Modifiers cannot be placed on event accessor declarations
dotnet_diagnostic.cs1611.severity = error # The params parameter cannot be declared as {0}
dotnet_diagnostic.cs1612.severity = error # Cannot modify the return value of '{0}' because it is not a variable
dotnet_diagnostic.cs1613.severity = error # The managed coclass wrapper class '{0}' for interface '{1}' cannot be found (are you missing an assembly reference?)
dotnet_diagnostic.cs1614.severity = error # '{0}' is ambiguous between '{1}' and '{2}'. Either use '@{0}' or explicitly include the 'Attribute' suffix.
dotnet_diagnostic.cs1615.severity = error # Argument {0} may not be passed with the '{1}' keyword
dotnet_diagnostic.cs1616.severity = warning # Option '{0}' overrides attribute '{1}' given in a source file or added module
dotnet_diagnostic.cs1617.severity = error # Invalid option '{0}' for /langversion. Use '/langversion:?' to list supported values.
dotnet_diagnostic.cs1618.severity = error # Cannot create delegate with '{0}' because it or a method it overrides has a Conditional attribute
dotnet_diagnostic.cs1619.severity = error # Cannot create temporary file -- {0}
dotnet_diagnostic.cs1620.severity = error # Argument {0} must be passed with the '{1}' keyword
dotnet_diagnostic.cs1621.severity = error # The yield statement cannot be used inside an anonymous method or lambda expression
dotnet_diagnostic.cs1622.severity = error # Cannot return a value from an iterator. Use the yield return statement to return a value, or yield break to end the iteration.
dotnet_diagnostic.cs1623.severity = error # Iterators cannot have ref, in or out parameters
dotnet_diagnostic.cs1624.severity = error # The body of '{0}' cannot be an iterator block because '{1}' is not an iterator interface type
dotnet_diagnostic.cs1625.severity = error # Cannot yield in the body of a finally clause
dotnet_diagnostic.cs1626.severity = error # Cannot yield a value in the body of a try block with a catch clause
dotnet_diagnostic.cs1627.severity = error # Expression expected after yield return
dotnet_diagnostic.cs1628.severity = error # Cannot use ref, out, or in parameter '{0}' inside an anonymous method, lambda expression, query expression, or local function
dotnet_diagnostic.cs1629.severity = error # Unsafe code may not appear in iterators
dotnet_diagnostic.cs1631.severity = error # Cannot yield a value in the body of a catch clause
dotnet_diagnostic.cs1632.severity = error # Control cannot leave the body of an anonymous method or lambda expression
dotnet_diagnostic.cs1633.severity = warning # Unrecognized #pragma directive
dotnet_diagnostic.cs1634.severity = warning # Expected 'disable' or 'restore'
dotnet_diagnostic.cs1635.severity = warning # Cannot restore warning 'CS{0}' because it was disabled globally
dotnet_diagnostic.cs1636.severity = error # __arglist is not allowed in the parameter list of iterators
dotnet_diagnostic.cs1637.severity = error # Iterators cannot have pointer type parameters
dotnet_diagnostic.cs1639.severity = error # The managed coclass wrapper class signature '{0}' for interface '{1}' is not a valid class name signature
dotnet_diagnostic.cs1640.severity = error # foreach statement cannot operate on variables of type '{0}' because it implements multiple instantiations of '{1}'; try casting to a specific interface instantiation
dotnet_diagnostic.cs1641.severity = error # A fixed size buffer field must have the array size specifier after the field name
dotnet_diagnostic.cs1642.severity = error # Fixed size buffer fields may only be members of structs
dotnet_diagnostic.cs1643.severity = error # Not all code paths return a value in {0} of type '{1}'
dotnet_diagnostic.cs1645.severity = warning # Feature '{0}' is not part of the standardized ISO C# language specification, and may not be accepted by other compilers
dotnet_diagnostic.cs1646.severity = error # Keyword, identifier, or string expected after verbatim specifier: @
dotnet_diagnostic.cs1648.severity = error # Members of readonly field '{0}' cannot be modified (except in a constructor or a variable initializer)
dotnet_diagnostic.cs1649.severity = error # Members of readonly field '{0}' cannot be used as a ref or out value (except in a constructor)
dotnet_diagnostic.cs1650.severity = error # Fields of static readonly field '{0}' cannot be assigned to (except in a static constructor or a variable initializer)
dotnet_diagnostic.cs1651.severity = error # Fields of static readonly field '{0}' cannot be used as a ref or out value (except in a static constructor)
dotnet_diagnostic.cs1654.severity = error # Cannot modify members of '{0}' because it is a '{1}'
dotnet_diagnostic.cs1655.severity = error # Cannot use fields of '{0}' as a ref or out value because it is a '{1}'
dotnet_diagnostic.cs1656.severity = error # Cannot assign to '{0}' because it is a '{1}'
dotnet_diagnostic.cs1657.severity = error # Cannot use '{0}' as a ref or out value because it is a '{1}'
dotnet_diagnostic.cs1658.severity = warning # {0}. See also error CS{1}.
dotnet_diagnostic.cs1660.severity = error # Cannot convert {0} to type '{1}' because it is not a delegate type
dotnet_diagnostic.cs1661.severity = error # Cannot convert {0} to type '{1}' because the parameter types do not match the delegate parameter types
dotnet_diagnostic.cs1662.severity = error # Cannot convert {0} to intended delegate type because some of the return types in the block are not implicitly convertible to the delegate return type
dotnet_diagnostic.cs1663.severity = error # Fixed size buffer type must be one of the following: bool, byte, short, int, long, char, sbyte, ushort, uint, ulong, float or double
dotnet_diagnostic.cs1664.severity = error # Fixed size buffer of length {0} and type '{1}' is too big
dotnet_diagnostic.cs1665.severity = error # Fixed size buffers must have a length greater than zero
dotnet_diagnostic.cs1666.severity = error # You cannot use fixed size buffers contained in unfixed expressions. Try using the fixed statement.
dotnet_diagnostic.cs1667.severity = error # Attribute '{0}' is not valid on property or event accessors. It is only valid on '{1}' declarations.
dotnet_diagnostic.cs1668.severity = warning # Invalid search path '{0}' specified in '{1}' -- '{2}'
dotnet_diagnostic.cs1669.severity = error # __arglist is not valid in this context
dotnet_diagnostic.cs1670.severity = error # params is not valid in this context
dotnet_diagnostic.cs1671.severity = error # A namespace declaration cannot have modifiers or attributes
dotnet_diagnostic.cs1672.severity = error # Invalid option '{0}' for /platform; must be anycpu, x86, Itanium, arm, arm64 or x64
dotnet_diagnostic.cs1673.severity = error # Anonymous methods, lambda expressions, query expressions, and local functions inside structs cannot access instance members of 'this'. Consider copying 'this' to a local variable outside the anonymous method, lambda expression, query expression, or local function and using the local instead.
dotnet_diagnostic.cs1674.severity = error # '{0}': type used in a using statement must be implicitly convertible to 'System.IDisposable'.
dotnet_diagnostic.cs1676.severity = error # Parameter {0} must be declared with the '{1}' keyword
dotnet_diagnostic.cs1677.severity = error # Parameter {0} should not be declared with the '{1}' keyword
dotnet_diagnostic.cs1678.severity = error # Parameter {0} is declared as type '{1}{2}' but should be '{3}{4}'
dotnet_diagnostic.cs1679.severity = error # Invalid extern alias for '/reference'; '{0}' is not a valid identifier
dotnet_diagnostic.cs1680.severity = error # Invalid reference alias option: '{0}=' -- missing filename
dotnet_diagnostic.cs1681.severity = error # You cannot redefine the global extern alias
dotnet_diagnostic.cs1685.severity = warning # The predefined type '{0}' is defined in multiple assemblies in the global alias; using definition from '{1}'
dotnet_diagnostic.cs1686.severity = error # Local '{0}' or its members cannot have their address taken and be used inside an anonymous method or lambda expression
dotnet_diagnostic.cs1687.severity = warning # Source file has exceeded the limit of 16,707,565 lines representable in the PDB; debug information will be incorrect
dotnet_diagnostic.cs1688.severity = error # Cannot convert anonymous method block without a parameter list to delegate type '{0}' because it has one or more out parameters
dotnet_diagnostic.cs1689.severity = error # Attribute '{0}' is only valid on methods or attribute classes
dotnet_diagnostic.cs1690.severity = warning # Accessing a member on '{0}' may cause a runtime exception because it is a field of a marshal-by-reference class
dotnet_diagnostic.cs1692.severity = warning # Invalid number
dotnet_diagnostic.cs1695.severity = warning # Invalid #pragma checksum syntax; should be #pragma checksum "filename" "{XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX}" "XXXX..."
dotnet_diagnostic.cs1696.severity = warning # Single-line comment or end-of-line expected
dotnet_diagnostic.cs1697.severity = warning # Different checksum values given for '{0}'
dotnet_diagnostic.cs1700.severity = warning # Assembly reference '{0}' is invalid and cannot be resolved
dotnet_diagnostic.cs1701.severity = warning # Assuming assembly reference '{0}' used by '{1}' matches identity '{2}' of '{3}', you may need to supply runtime policy
dotnet_diagnostic.cs1702.severity = warning # Assuming assembly reference '{0}' used by '{1}' matches identity '{2}' of '{3}', you may need to supply runtime policy
dotnet_diagnostic.cs1703.severity = error # Multiple assemblies with equivalent identity have been imported: '{0}' and '{1}'. Remove one of the duplicate references.
dotnet_diagnostic.cs1704.severity = error # An assembly with the same simple name '{0}' has already been imported. Try removing one of the references (e.g. '{1}') or sign them to enable side-by-side.
dotnet_diagnostic.cs1705.severity = error # Assembly '{0}' with identity '{1}' uses '{2}' which has a higher version than referenced assembly '{3}' with identity '{4}'
dotnet_diagnostic.cs1708.severity = error # Fixed size buffers can only be accessed through locals or fields
dotnet_diagnostic.cs1710.severity = warning # XML comment has a duplicate typeparam tag for '{0}'
dotnet_diagnostic.cs1711.severity = warning # XML comment has a typeparam tag for '{0}', but there is no type parameter by that name
dotnet_diagnostic.cs1712.severity = warning # Type parameter '{0}' has no matching typeparam tag in the XML comment on '{1}' (but other type parameters do)
dotnet_diagnostic.cs1715.severity = error # '{0}': type must be '{2}' to match overridden member '{1}'
dotnet_diagnostic.cs1716.severity = error # Do not use 'System.Runtime.CompilerServices.FixedBuffer' attribute. Use the 'fixed' field modifier instead.
dotnet_diagnostic.cs1717.severity = warning # Assignment made to same variable; did you mean to assign something else?
dotnet_diagnostic.cs1718.severity = warning # Comparison made to same variable; did you mean to compare something else?
dotnet_diagnostic.cs1719.severity = error # Error opening Win32 resource file '{0}' -- '{1}'
dotnet_diagnostic.cs1720.severity = warning # Expression will always cause a System.NullReferenceException because the default value of '{0}' is null
dotnet_diagnostic.cs1721.severity = error # Class '{0}' cannot have multiple base classes: '{1}' and '{2}'
dotnet_diagnostic.cs1722.severity = error # Base class '{0}' must come before any interfaces
dotnet_diagnostic.cs1723.severity = warning # XML comment has cref attribute '{0}' that refers to a type parameter
dotnet_diagnostic.cs1725.severity = error # Friend assembly reference '{0}' is invalid. InternalsVisibleTo declarations cannot have a version, culture, public key token, or processor architecture specified.
dotnet_diagnostic.cs1726.severity = error # Friend assembly reference '{0}' is invalid. Strong-name signed assemblies must specify a public key in their InternalsVisibleTo declarations.
dotnet_diagnostic.cs1728.severity = error # Cannot bind delegate to '{0}' because it is a member of 'System.Nullable<T>'
dotnet_diagnostic.cs1729.severity = error # '{0}' does not contain a constructor that takes {1} arguments
dotnet_diagnostic.cs1730.severity = error # Assembly and module attributes must precede all other elements defined in a file except using clauses and extern alias declarations
dotnet_diagnostic.cs1733.severity = error # Expected expression
dotnet_diagnostic.cs1734.severity = warning # XML comment on '{1}' has a paramref tag for '{0}', but there is no parameter by that name
dotnet_diagnostic.cs1735.severity = warning # XML comment on '{1}' has a typeparamref tag for '{0}', but there is no type parameter by that name
dotnet_diagnostic.cs1736.severity = error # Default parameter value for '{0}' must be a compile-time constant
dotnet_diagnostic.cs1737.severity = error # Optional parameters must appear after all required parameters
dotnet_diagnostic.cs1738.severity = error # Named argument specifications must appear after all fixed arguments have been specified. Please use language version {0} or greater to allow non-trailing named arguments.
dotnet_diagnostic.cs1739.severity = error # The best overload for '{0}' does not have a parameter named '{1}'
dotnet_diagnostic.cs1740.severity = error # Named argument '{0}' cannot be specified multiple times
dotnet_diagnostic.cs1741.severity = error # A ref or out parameter cannot have a default value
dotnet_diagnostic.cs1742.severity = error # An array access may not have a named argument specifier
dotnet_diagnostic.cs1743.severity = error # Cannot specify a default value for the 'this' parameter
dotnet_diagnostic.cs1744.severity = error # Named argument '{0}' specifies a parameter for which a positional argument has already been given
dotnet_diagnostic.cs1745.severity = error # Cannot specify default parameter value in conjunction with DefaultParameterAttribute or OptionalAttribute
dotnet_diagnostic.cs1746.severity = error # The delegate '{0}' does not have a parameter named '{1}'
dotnet_diagnostic.cs1747.severity = error # Cannot embed interop types from assembly '{0}' because it is missing the '{1}' attribute.
dotnet_diagnostic.cs1748.severity = error # Cannot find the interop type that matches the embedded interop type '{0}'. Are you missing an assembly reference?
dotnet_diagnostic.cs1750.severity = error # A value of type '{0}' cannot be used as a default parameter because there are no standard conversions to type '{1}'
dotnet_diagnostic.cs1751.severity = error # Cannot specify a default value for a parameter collection
dotnet_diagnostic.cs1752.severity = error # Interop type '{0}' cannot be embedded. Use the applicable interface instead.
dotnet_diagnostic.cs1754.severity = error # Type '{0}' cannot be embedded because it is a nested type. Consider setting the 'Embed Interop Types' property to false.
dotnet_diagnostic.cs1756.severity = error # Interop type '{0}' cannot be embedded because it is missing the required '{1}' attribute.
dotnet_diagnostic.cs1757.severity = error # Embedded interop struct '{0}' can contain only public instance fields.
dotnet_diagnostic.cs1758.severity = error # Cannot embed interop type '{0}' found in both assembly '{1}' and '{2}'. Consider setting the 'Embed Interop Types' property to false.
dotnet_diagnostic.cs1759.severity = error # Cannot embed interop types from assembly '{0}' because it is missing either the '{1}' attribute or the '{2}' attribute.
dotnet_diagnostic.cs1760.severity = error # Assemblies '{0}' and '{1}' refer to the same metadata but only one is a linked reference (specified using /link option); consider removing one of the references.
dotnet_diagnostic.cs1761.severity = error # Embedding the interop type '{0}' from assembly '{1}' causes a name clash in the current assembly. Consider setting the 'Embed Interop Types' property to false.
dotnet_diagnostic.cs1762.severity = warning # A reference was created to embedded interop assembly '{0}' because of an indirect reference to that assembly created by assembly '{1}'. Consider changing the 'Embed Interop Types' property on either assembly.
dotnet_diagnostic.cs1763.severity = error # '{0}' is of type '{1}'. A default parameter value of a reference type other than string can only be initialized with null
dotnet_diagnostic.cs1764.severity = error # Cannot use fixed local '{0}' inside an anonymous method, lambda expression, or query expression
dotnet_diagnostic.cs1766.severity = error # Source interface '{0}' is missing method '{1}' which is required to embed event '{2}'.
dotnet_diagnostic.cs1767.severity = error # Interface '{0}' has an invalid source interface which is required to embed event '{1}'.
dotnet_diagnostic.cs1768.severity = error # Type '{0}' cannot be embedded because it has a generic argument. Consider setting the 'Embed Interop Types' property to false.
dotnet_diagnostic.cs1769.severity = error # Type '{0}' from assembly '{1}' cannot be used across assembly boundaries because it has a generic type argument that is an embedded interop type.
dotnet_diagnostic.cs1770.severity = error # A value of type '{0}' cannot be used as default parameter for nullable parameter '{1}' because '{0}' is not a simple type
dotnet_diagnostic.cs1773.severity = error # Invalid version {0} for /subsystemversion. The version must be 6.02 or greater for ARM or AppContainerExe, and 4.00 or greater otherwise
dotnet_diagnostic.cs1774.severity = error # Embedded interop method '{0}' contains a body.
dotnet_diagnostic.cs1900.severity = error # Warning level must be zero or greater
dotnet_diagnostic.cs1902.severity = error # Invalid option '{0}' for /debug; must be 'portable', 'embedded', 'full' or 'pdbonly'
dotnet_diagnostic.cs1906.severity = error # Invalid option '{0}'; Resource visibility must be either 'public' or 'private'
dotnet_diagnostic.cs1908.severity = error # The type of the argument to the DefaultParameterValue attribute must match the parameter type
dotnet_diagnostic.cs1910.severity = error # Argument of type '{0}' is not applicable for the DefaultParameterValue attribute
dotnet_diagnostic.cs1912.severity = error # Duplicate initialization of member '{0}'
dotnet_diagnostic.cs1913.severity = error # Member '{0}' cannot be initialized. It is not a field or property.
dotnet_diagnostic.cs1914.severity = error # Static field or property '{0}' cannot be assigned in an object initializer
dotnet_diagnostic.cs1917.severity = error # Members of readonly field '{0}' of type '{1}' cannot be assigned with an object initializer because it is of a value type
dotnet_diagnostic.cs1918.severity = error # Members of property '{0}' of type '{1}' cannot be assigned with an object initializer because it is of a value type
dotnet_diagnostic.cs1919.severity = error # Unsafe type '{0}' cannot be used in object creation
dotnet_diagnostic.cs1920.severity = error # Element initializer cannot be empty
dotnet_diagnostic.cs1921.severity = error # The best overloaded method match for '{0}' has wrong signature for the initializer element. The initializable Add must be an accessible instance method.
dotnet_diagnostic.cs1922.severity = error # Cannot initialize type '{0}' with a collection initializer because it does not implement 'System.Collections.IEnumerable'
dotnet_diagnostic.cs1926.severity = error # Error opening Win32 manifest file {0} -- {1}
dotnet_diagnostic.cs1927.severity = warning # Ignoring /win32manifest for module because it only applies to assemblies
dotnet_diagnostic.cs1929.severity = error # '{0}' does not contain a definition for '{1}' and the best extension method overload '{2}' requires a receiver of type '{3}'
dotnet_diagnostic.cs1930.severity = error # The range variable '{0}' has already been declared
dotnet_diagnostic.cs1931.severity = error # The range variable '{0}' conflicts with a previous declaration of '{0}'
dotnet_diagnostic.cs1932.severity = error # Cannot assign {0} to a range variable
dotnet_diagnostic.cs1934.severity = error # Could not find an implementation of the query pattern for source type '{0}'. '{1}' not found. Consider explicitly specifying the type of the range variable '{2}'.
dotnet_diagnostic.cs1935.severity = error # Could not find an implementation of the query pattern for source type '{0}'. '{1}' not found. Are you missing required assembly references or a using directive for 'System.Linq'?
dotnet_diagnostic.cs1936.severity = error # Could not find an implementation of the query pattern for source type '{0}'. '{1}' not found.
dotnet_diagnostic.cs1937.severity = error # The name '{0}' is not in scope on the left side of 'equals'. Consider swapping the expressions on either side of 'equals'.
dotnet_diagnostic.cs1938.severity = error # The name '{0}' is not in scope on the right side of 'equals'. Consider swapping the expressions on either side of 'equals'.
dotnet_diagnostic.cs1939.severity = error # Cannot pass the range variable '{0}' as an out or ref parameter
dotnet_diagnostic.cs1940.severity = error # Multiple implementations of the query pattern were found for source type '{0}'. Ambiguous call to '{1}'.
dotnet_diagnostic.cs1941.severity = error # The type of one of the expressions in the {0} clause is incorrect. Type inference failed in the call to '{1}'.
dotnet_diagnostic.cs1942.severity = error # The type of the expression in the {0} clause is incorrect. Type inference failed in the call to '{1}'.
dotnet_diagnostic.cs1943.severity = error # An expression of type '{0}' is not allowed in a subsequent from clause in a query expression with source type '{1}'. Type inference failed in the call to '{2}'.
dotnet_diagnostic.cs1944.severity = error # An expression tree may not contain an unsafe pointer operation
dotnet_diagnostic.cs1945.severity = error # An expression tree may not contain an anonymous method expression
dotnet_diagnostic.cs1946.severity = error # An anonymous method expression cannot be converted to an expression tree
dotnet_diagnostic.cs1947.severity = error # Range variable '{0}' cannot be assigned to -- it is read only
dotnet_diagnostic.cs1948.severity = error # The range variable '{0}' cannot have the same name as a method type parameter
dotnet_diagnostic.cs1949.severity = error # The contextual keyword 'var' cannot be used in a range variable declaration
dotnet_diagnostic.cs1950.severity = error # The best overloaded Add method '{0}' for the collection initializer has some invalid arguments
dotnet_diagnostic.cs1951.severity = error # An expression tree lambda may not contain a ref, in or out parameter
dotnet_diagnostic.cs1952.severity = error # An expression tree lambda may not contain a method with variable arguments
dotnet_diagnostic.cs1954.severity = error # The best overloaded method match '{0}' for the collection initializer element cannot be used. Collection initializer 'Add' methods cannot have ref or out parameters.
dotnet_diagnostic.cs1955.severity = error # Non-invocable member '{0}' cannot be used like a method.
dotnet_diagnostic.cs1956.severity = warning # Member '{0}' implements interface member '{1}' in type '{2}'. There are multiple matches for the interface member at run-time. It is implementation dependent which method will be called.
dotnet_diagnostic.cs1957.severity = warning # Member '{1}' overrides '{0}'. There are multiple override candidates at run-time. It is implementation dependent which method will be called. Please use a newer runtime.
dotnet_diagnostic.cs1958.severity = error # Object and collection initializer expressions may not be applied to a delegate creation expression
dotnet_diagnostic.cs1959.severity = error # '{0}' is of type '{1}'. The type specified in a constant declaration must be sbyte, byte, short, ushort, int, uint, long, ulong, char, float, double, decimal, bool, string, an enum-type, or a reference-type.
dotnet_diagnostic.cs1960.severity = error # Invalid variance modifier. Only interface and delegate type parameters can be specified as variant.
dotnet_diagnostic.cs1961.severity = error # Invalid variance: The type parameter '{1}' must be {3} valid on '{0}'. '{1}' is {2}.
dotnet_diagnostic.cs1962.severity = error # The typeof operator cannot be used on the dynamic type
dotnet_diagnostic.cs1963.severity = error # An expression tree may not contain a dynamic operation
dotnet_diagnostic.cs1964.severity = error # '{0}': user-defined conversions to or from the dynamic type are not allowed
dotnet_diagnostic.cs1965.severity = error # '{0}': cannot derive from the dynamic type
dotnet_diagnostic.cs1966.severity = error # '{0}': cannot implement a dynamic interface '{1}'
dotnet_diagnostic.cs1967.severity = error # Constraint cannot be the dynamic type
dotnet_diagnostic.cs1968.severity = error # Constraint cannot be a dynamic type '{0}'
dotnet_diagnostic.cs1969.severity = error # One or more types required to compile a dynamic expression cannot be found. Are you missing a reference?
dotnet_diagnostic.cs1970.severity = error # Do not use 'System.Runtime.CompilerServices.DynamicAttribute'. Use the 'dynamic' keyword instead.
dotnet_diagnostic.cs1971.severity = error # The call to method '{0}' needs to be dynamically dispatched, but cannot be because it is part of a base access expression. Consider casting the dynamic arguments or eliminating the base access.
dotnet_diagnostic.cs1972.severity = error # The indexer access needs to be dynamically dispatched, but cannot be because it is part of a base access expression. Consider casting the dynamic arguments or eliminating the base access.
dotnet_diagnostic.cs1973.severity = error # '{0}' has no applicable method named '{1}' but appears to have an extension method by that name. Extension methods cannot be dynamically dispatched. Consider casting the dynamic arguments or calling the extension method without the extension method syntax.
dotnet_diagnostic.cs1974.severity = warning # The dynamically dispatched call to method '{0}' may fail at runtime because one or more applicable overloads are conditional methods.
dotnet_diagnostic.cs1975.severity = error # The constructor call needs to be dynamically dispatched, but cannot be because it is part of a constructor initializer. Consider casting the dynamic arguments.
dotnet_diagnostic.cs1976.severity = error # Cannot use a method group as an argument to a dynamically dispatched operation. Did you intend to invoke the method?
dotnet_diagnostic.cs1977.severity = error # Cannot use a lambda expression as an argument to a dynamically dispatched operation without first casting it to a delegate or expression tree type.
dotnet_diagnostic.cs1978.severity = error # Cannot use an expression of type '{0}' as an argument to a dynamically dispatched operation.
dotnet_diagnostic.cs1979.severity = error # Query expressions over source type 'dynamic' or with a join sequence of type 'dynamic' are not allowed
dotnet_diagnostic.cs1980.severity = error # Cannot define a class or member that utilizes 'dynamic' because the compiler required type '{0}' cannot be found. Are you missing a reference?
dotnet_diagnostic.cs1981.severity = warning # Using '{0}' to test compatibility with '{1}' is essentially identical to testing compatibility with '{2}' and will succeed for all non-null values
dotnet_diagnostic.cs1983.severity = error # The return type of an async method must be void, Task, Task<T>, a task-like type, IAsyncEnumerable<T>, or IAsyncEnumerator<T>
dotnet_diagnostic.cs1984.severity = error # Cannot await in the body of a finally clause
dotnet_diagnostic.cs1985.severity = error # Cannot await in a catch clause
dotnet_diagnostic.cs1986.severity = error # 'await' requires that the type {0} have a suitable 'GetAwaiter' method
dotnet_diagnostic.cs1988.severity = error # Async methods cannot have ref, in or out parameters
dotnet_diagnostic.cs1989.severity = error # Async lambda expressions cannot be converted to expression trees
dotnet_diagnostic.cs1991.severity = error # '{0}' cannot implement '{1}' because '{2}' is a Windows Runtime event and '{3}' is a regular .NET event.
dotnet_diagnostic.cs1992.severity = error # The 'await' operator can only be used when contained within a method or lambda expression marked with the 'async' modifier
dotnet_diagnostic.cs1994.severity = error # The 'async' modifier can only be used in methods that have a body.
dotnet_diagnostic.cs1995.severity = error # The 'await' operator may only be used in a query expression within the first collection expression of the initial 'from' clause or within the collection expression of a 'join' clause
dotnet_diagnostic.cs1996.severity = error # Cannot await in the body of a lock statement
dotnet_diagnostic.cs1997.severity = error # Since '{0}' is an async method that returns '{1}', a return keyword must not be followed by an object expression
dotnet_diagnostic.cs1998.severity = warning # This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.
dotnet_diagnostic.cs2001.severity = error # Source file '{0}' could not be found.
dotnet_diagnostic.cs2002.severity = warning # Source file '{0}' specified multiple times
dotnet_diagnostic.cs2005.severity = error # Missing file specification for '{0}' option
dotnet_diagnostic.cs2006.severity = error # Command-line syntax error: Missing '{0}' for '{1}' option
dotnet_diagnostic.cs2007.severity = error # Unrecognized option: '{0}'
dotnet_diagnostic.cs2008.severity = warning # No source files specified.
dotnet_diagnostic.cs2011.severity = error # Error opening response file '{0}'
dotnet_diagnostic.cs2012.severity = error # Cannot open '{0}' for writing -- '{1}'
dotnet_diagnostic.cs2013.severity = error # Invalid image base number '{0}'
dotnet_diagnostic.cs2015.severity = error # '{0}' is a binary file instead of a text file
dotnet_diagnostic.cs2016.severity = error # Code page '{0}' is invalid or not installed
dotnet_diagnostic.cs2017.severity = error # Cannot specify /main if building a module or library
dotnet_diagnostic.cs2019.severity = error # Invalid target type for /target: must specify 'exe', 'winexe', 'library', or 'module'
dotnet_diagnostic.cs2021.severity = error # File name '{0}' is empty, contains invalid characters, has a drive specification without an absolute path, or is too long
dotnet_diagnostic.cs2023.severity = warning # Ignoring /noconfig option because it was specified in a response file
dotnet_diagnostic.cs2024.severity = error # Invalid file section alignment '{0}'
dotnet_diagnostic.cs2029.severity = warning # Invalid name for a preprocessing symbol; '{0}' is not a valid identifier
dotnet_diagnostic.cs2033.severity = error # Cannot create short filename '{0}' when a long filename with the same short filename already exists
dotnet_diagnostic.cs2034.severity = error # A /reference option that declares an extern alias can only have one filename. To specify multiple aliases or filenames, use multiple /reference options.
dotnet_diagnostic.cs2035.severity = error # Command-line syntax error: Missing ':<number>' for '{0}' option
dotnet_diagnostic.cs2036.severity = error # The /pdb option requires that the /debug option also be used
dotnet_diagnostic.cs2037.severity = error # An expression tree lambda may not contain a COM call with ref omitted on arguments
dotnet_diagnostic.cs2038.severity = warning # The language name '{0}' is invalid.
dotnet_diagnostic.cs2039.severity = error # Command-line syntax error: Invalid Guid format '{0}' for option '{1}'
dotnet_diagnostic.cs2040.severity = error # Command-line syntax error: Missing Guid for option '{1}'
dotnet_diagnostic.cs2041.severity = error # Invalid output name: {0}
dotnet_diagnostic.cs2042.severity = error # Invalid debug information format: {0}
dotnet_diagnostic.cs2043.severity = error # 'id#' syntax is no longer supported. Use '$id' instead.
dotnet_diagnostic.cs2044.severity = error # /sourcelink switch is only supported when emitting PDB.
dotnet_diagnostic.cs2045.severity = error # /embed switch is only supported when emitting a PDB.
dotnet_diagnostic.cs2046.severity = error # Command-line syntax error: '{0}' is not a valid value for the '{1}' option. The value must be of the form '{2}'.
dotnet_diagnostic.cs3000.severity = warning # Methods with variable arguments are not CLS-compliant
dotnet_diagnostic.cs3001.severity = warning # Argument type '{0}' is not CLS-compliant
dotnet_diagnostic.cs3002.severity = warning # Return type of '{0}' is not CLS-compliant
dotnet_diagnostic.cs3003.severity = warning # Type of '{0}' is not CLS-compliant
dotnet_diagnostic.cs3005.severity = warning # Identifier '{0}' differing only in case is not CLS-compliant
dotnet_diagnostic.cs3006.severity = warning # Overloaded method '{0}' differing only in ref or out, or in array rank, is not CLS-compliant
dotnet_diagnostic.cs3007.severity = warning # Overloaded method '{0}' differing only by unnamed array types is not CLS-compliant
dotnet_diagnostic.cs3008.severity = warning # Identifier '{0}' is not CLS-compliant
dotnet_diagnostic.cs3009.severity = warning # '{0}': base type '{1}' is not CLS-compliant
dotnet_diagnostic.cs3010.severity = warning # '{0}': CLS-compliant interfaces must have only CLS-compliant members
dotnet_diagnostic.cs3011.severity = warning # '{0}': only CLS-compliant members can be abstract
dotnet_diagnostic.cs3012.severity = warning # You must specify the CLSCompliant attribute on the assembly, not the module, to enable CLS compliance checking
dotnet_diagnostic.cs3013.severity = warning # Added modules must be marked with the CLSCompliant attribute to match the assembly
dotnet_diagnostic.cs3014.severity = warning # '{0}' cannot be marked as CLS-compliant because the assembly does not have a CLSCompliant attribute
dotnet_diagnostic.cs3015.severity = warning # '{0}' has no accessible constructors which use only CLS-compliant types
dotnet_diagnostic.cs3016.severity = warning # Arrays as attribute arguments is not CLS-compliant
dotnet_diagnostic.cs3017.severity = warning # You cannot specify the CLSCompliant attribute on a module that differs from the CLSCompliant attribute on the assembly
dotnet_diagnostic.cs3018.severity = warning # '{0}' cannot be marked as CLS-compliant because it is a member of non-CLS-compliant type '{1}'
dotnet_diagnostic.cs3019.severity = warning # CLS compliance checking will not be performed on '{0}' because it is not visible from outside this assembly
dotnet_diagnostic.cs3021.severity = warning # '{0}' does not need a CLSCompliant attribute because the assembly does not have a CLSCompliant attribute
dotnet_diagnostic.cs3022.severity = warning # CLSCompliant attribute has no meaning when applied to parameters. Try putting it on the method instead.
dotnet_diagnostic.cs3023.severity = warning # CLSCompliant attribute has no meaning when applied to return types. Try putting it on the method instead.
dotnet_diagnostic.cs3024.severity = warning # Constraint type '{0}' is not CLS-compliant
dotnet_diagnostic.cs3026.severity = warning # CLS-compliant field '{0}' cannot be volatile
dotnet_diagnostic.cs3027.severity = warning # '{0}' is not CLS-compliant because base interface '{1}' is not CLS-compliant
dotnet_diagnostic.cs3028.severity = error # Algorithm '{0}' is not supported
dotnet_diagnostic.cs4001.severity = error # Cannot await '{0}'
dotnet_diagnostic.cs4003.severity = error # 'await' cannot be used as an identifier within an async method or lambda expression
dotnet_diagnostic.cs4004.severity = error # Cannot await in an unsafe context
dotnet_diagnostic.cs4005.severity = error # Async methods cannot have pointer type parameters
dotnet_diagnostic.cs4006.severity = error # __arglist is not allowed in the parameter list of async methods
dotnet_diagnostic.cs4007.severity = error # 'await' cannot be used in an expression containing the type '{0}'
dotnet_diagnostic.cs4008.severity = error # Cannot await 'void'
dotnet_diagnostic.cs4009.severity = error # A void or int returning entry point cannot be async
dotnet_diagnostic.cs4010.severity = error # Cannot convert async {0} to delegate type '{1}'. An async {0} may return void, Task or Task<T>, none of which are convertible to '{1}'.
dotnet_diagnostic.cs4011.severity = error # 'await' requires that the return type '{0}' of '{1}.GetAwaiter()' have suitable 'IsCompleted', 'OnCompleted', and 'GetResult' members, and implement 'INotifyCompletion' or 'ICriticalNotifyCompletion'
dotnet_diagnostic.cs4012.severity = error # Parameters or locals of type '{0}' cannot be declared in async methods or async lambda expressions.
dotnet_diagnostic.cs4013.severity = error # Instance of type '{0}' cannot be used inside a nested function, query expression, iterator block or async method
dotnet_diagnostic.cs4014.severity = warning # Because this call is not awaited, execution of the current method continues before the call is completed. Consider applying the 'await' operator to the result of the call.
dotnet_diagnostic.cs4015.severity = error # 'MethodImplOptions.Synchronized' cannot be applied to an async method
dotnet_diagnostic.cs4016.severity = error # Since this is an async method, the return expression must be of type '{0}' rather than '{1}'
dotnet_diagnostic.cs4017.severity = error # CallerLineNumberAttribute cannot be applied because there are no standard conversions from type '{0}' to type '{1}'
dotnet_diagnostic.cs4018.severity = error # CallerFilePathAttribute cannot be applied because there are no standard conversions from type '{0}' to type '{1}'
dotnet_diagnostic.cs4019.severity = error # CallerMemberNameAttribute cannot be applied because there are no standard conversions from type '{0}' to type '{1}'
dotnet_diagnostic.cs4020.severity = error # The CallerLineNumberAttribute may only be applied to parameters with default values
dotnet_diagnostic.cs4021.severity = error # The CallerFilePathAttribute may only be applied to parameters with default values
dotnet_diagnostic.cs4022.severity = error # The CallerMemberNameAttribute may only be applied to parameters with default values
dotnet_diagnostic.cs4023.severity = error # /platform:anycpu32bitpreferred can only be used with /t:exe, /t:winexe and /t:appcontainerexe
dotnet_diagnostic.cs4024.severity = warning # The CallerLineNumberAttribute applied to parameter '{0}' will have no effect because it applies to a member that is used in contexts that do not allow optional arguments
dotnet_diagnostic.cs4025.severity = warning # The CallerFilePathAttribute applied to parameter '{0}' will have no effect because it applies to a member that is used in contexts that do not allow optional arguments
dotnet_diagnostic.cs4026.severity = warning # The CallerMemberNameAttribute applied to parameter '{0}' will have no effect because it applies to a member that is used in contexts that do not allow optional arguments
dotnet_diagnostic.cs4027.severity = error # '{0}' does not implement '{1}'
dotnet_diagnostic.cs4028.severity = error # 'await' requires that the type '{0}' have a suitable 'GetAwaiter' method. Are you missing a using directive for 'System'?
dotnet_diagnostic.cs4029.severity = error # Cannot return an expression of type 'void'
dotnet_diagnostic.cs4030.severity = error # Security attribute '{0}' cannot be applied to an Async method.
dotnet_diagnostic.cs4031.severity = error # Async methods are not allowed in an Interface, Class, or Structure which has the 'SecurityCritical' or 'SecuritySafeCritical' attribute.
dotnet_diagnostic.cs4032.severity = error # The 'await' operator can only be used within an async method. Consider marking this method with the 'async' modifier and changing its return type to 'Task<{0}>'.
dotnet_diagnostic.cs4033.severity = error # The 'await' operator can only be used within an async method. Consider marking this method with the 'async' modifier and changing its return type to 'Task'.
dotnet_diagnostic.cs4034.severity = error # The 'await' operator can only be used within an async {0}. Consider marking this {0} with the 'async' modifier.
dotnet_diagnostic.cs4036.severity = error # '{0}' does not contain a definition for '{1}' and no extension method '{1}' accepting a first argument of type '{0}' could be found (are you missing a using directive for '{2}'?)
dotnet_diagnostic.cs5001.severity = error # Program does not contain a static 'Main' method suitable for an entry point
dotnet_diagnostic.cs7000.severity = error # Unexpected use of an aliased name
dotnet_diagnostic.cs7002.severity = error # Unexpected use of a generic name
dotnet_diagnostic.cs7003.severity = error # Unexpected use of an unbound generic name
dotnet_diagnostic.cs7006.severity = error # Expressions and statements can only occur in a method body
dotnet_diagnostic.cs7007.severity = error # A 'using static' directive can only be applied to types; '{0}' is a namespace not a type. Consider a 'using namespace' directive instead
dotnet_diagnostic.cs7008.severity = error # The assembly name '{0}' is reserved and cannot be used as a reference in an interactive session
dotnet_diagnostic.cs7009.severity = error # Cannot use #r after first token in file
dotnet_diagnostic.cs7010.severity = error # Quoted file name expected
dotnet_diagnostic.cs7011.severity = error # #r is only allowed in scripts
dotnet_diagnostic.cs7012.severity = error # The name '{0}' does not exist in the current context (are you missing a reference to assembly '{1}'?)
dotnet_diagnostic.cs7013.severity = error # Name '{0}' exceeds the maximum length allowed in metadata.
dotnet_diagnostic.cs7014.severity = error # Attributes are not valid in this context.
dotnet_diagnostic.cs7015.severity = error # 'extern alias' is not valid in this context
dotnet_diagnostic.cs7016.severity = error # Alias '{0}' conflicts with {1} definition
dotnet_diagnostic.cs7017.severity = error # Member definition, statement, or end-of-file expected
dotnet_diagnostic.cs7018.severity = error # Expected a script (.csx file) but none specified
dotnet_diagnostic.cs7019.severity = error # Type of '{0}' cannot be inferred since its initializer directly or indirectly refers to the definition.
dotnet_diagnostic.cs7020.severity = error # Cannot use 'yield' in top-level script code
dotnet_diagnostic.cs7021.severity = error # Cannot declare namespace in script code
dotnet_diagnostic.cs7022.severity = warning # The entry point of the program is global code; ignoring '{0}' entry point.
dotnet_diagnostic.cs7023.severity = error # The second operand of an 'is' or 'as' operator may not be static type '{0}'
dotnet_diagnostic.cs7024.severity = error # Delegate '{0}' has no invoke method or an invoke method with a return type or parameter types that are not supported.
dotnet_diagnostic.cs7025.severity = error # Inconsistent accessibility: event type '{1}' is less accessible than event '{0}'
dotnet_diagnostic.cs7026.severity = error # Assembly and module attributes are not allowed in this context
dotnet_diagnostic.cs7027.severity = error # Error signing output with public key from file '{0}' -- {1}
dotnet_diagnostic.cs7028.severity = error # Error signing output with public key from container '{0}' -- {1}
dotnet_diagnostic.cs7029.severity = error # Friend access was granted by '{0}', but the strong name signing state of the output assembly does not match that of the granting assembly.
dotnet_diagnostic.cs7030.severity = error # Cannot pass null for friend assembly name
dotnet_diagnostic.cs7032.severity = error # Key file '{0}' is missing the private key needed for signing
dotnet_diagnostic.cs7033.severity = warning # Delay signing was specified and requires a public key, but no public key was specified
dotnet_diagnostic.cs7034.severity = error # The specified version string '{0}' does not conform to the required format - major[.minor[.build[.revision]]]
dotnet_diagnostic.cs7035.severity = warning # The specified version string '{0}' does not conform to the recommended format - major.minor.build.revision
dotnet_diagnostic.cs7036.severity = error # There is no argument given that corresponds to the required parameter '{0}' of '{1}'
dotnet_diagnostic.cs7038.severity = error # Failed to emit module '{0}': {1}
dotnet_diagnostic.cs7041.severity = error # Each linked resource and module must have a unique filename. Filename '{0}' is specified more than once in this assembly
dotnet_diagnostic.cs7042.severity = error # The DllImport attribute cannot be applied to a method that is generic or contained in a generic method or type.
dotnet_diagnostic.cs7043.severity = error # Cannot update '{0}'; attribute '{1}' is missing.
dotnet_diagnostic.cs7045.severity = error # Parameter not valid for the specified unmanaged type.
dotnet_diagnostic.cs7046.severity = error # Attribute parameter '{0}' must be specified.
dotnet_diagnostic.cs7047.severity = error # Attribute parameter '{0}' or '{1}' must be specified.
dotnet_diagnostic.cs7048.severity = error # First argument to a security attribute must be a valid SecurityAction
dotnet_diagnostic.cs7049.severity = error # Security attribute '{0}' has an invalid SecurityAction value '{1}'
dotnet_diagnostic.cs7050.severity = error # SecurityAction value '{0}' is invalid for security attributes applied to an assembly
dotnet_diagnostic.cs7051.severity = error # SecurityAction value '{0}' is invalid for security attributes applied to a type or a method
dotnet_diagnostic.cs7052.severity = error # SecurityAction value '{0}' is invalid for PrincipalPermission attribute
dotnet_diagnostic.cs7053.severity = error # An expression tree may not contain '{0}'
dotnet_diagnostic.cs7054.severity = error # Unmanaged type '{0}' not valid for fields.
dotnet_diagnostic.cs7055.severity = error # Unmanaged type '{0}' is only valid for fields.
dotnet_diagnostic.cs7056.severity = error # Unable to resolve file path '{0}' specified for the named argument '{1}' for PermissionSet attribute
dotnet_diagnostic.cs7057.severity = error # Error reading file '{0}' specified for the named argument '{1}' for PermissionSet attribute: '{2}'
dotnet_diagnostic.cs7058.severity = error # The specified version string '{0}' does not conform to the required format - major.minor.build.revision (without wildcards)
dotnet_diagnostic.cs7059.severity = error # Executables cannot be satellite assemblies; culture should always be empty
dotnet_diagnostic.cs7061.severity = error # Duplicate '{0}' attribute in '{1}'
dotnet_diagnostic.cs7064.severity = error # Error opening icon file {0} -- {1}
dotnet_diagnostic.cs7065.severity = error # Error building Win32 resources -- {0}
dotnet_diagnostic.cs7067.severity = error # Attribute constructor parameter '{0}' is optional, but no default parameter value was specified.
dotnet_diagnostic.cs7068.severity = error # Reference to type '{0}' claims it is defined in this assembly, but it is not defined in source or any added modules
dotnet_diagnostic.cs7069.severity = error # Reference to type '{0}' claims it is defined in '{1}', but it could not be found
dotnet_diagnostic.cs7070.severity = error # Security attribute '{0}' is not valid on this declaration type. Security attributes are only valid on assembly, type and method declarations.
dotnet_diagnostic.cs7071.severity = error # Assembly reference '{0}' is invalid and cannot be resolved
dotnet_diagnostic.cs7079.severity = error # The type '{0}' is defined in a module that has not been added. You must add the module '{1}'.
dotnet_diagnostic.cs7080.severity = warning # The CallerMemberNameAttribute applied to parameter '{0}' will have no effect. It is overridden by the CallerFilePathAttribute.
dotnet_diagnostic.cs7081.severity = warning # The CallerMemberNameAttribute applied to parameter '{0}' will have no effect. It is overridden by the CallerLineNumberAttribute.
dotnet_diagnostic.cs7082.severity = warning # The CallerFilePathAttribute applied to parameter '{0}' will have no effect. It is overridden by the CallerLineNumberAttribute.
dotnet_diagnostic.cs7083.severity = error # Expression must be implicitly convertible to Boolean or its type '{0}' must define operator '{1}'.
dotnet_diagnostic.cs7084.severity = error # A Windows Runtime event may not be passed as an out or ref parameter.
dotnet_diagnostic.cs7086.severity = error # Module name '{0}' stored in '{1}' must match its filename.
dotnet_diagnostic.cs7087.severity = error # Invalid module name: {0}
dotnet_diagnostic.cs7088.severity = error # Invalid '{0}' value: '{1}'.
dotnet_diagnostic.cs7089.severity = error # AppConfigPath must be absolute.
dotnet_diagnostic.cs7090.severity = warning # Attribute '{0}' from module '{1}' will be ignored in favor of the instance appearing in source
dotnet_diagnostic.cs7091.severity = error # Attribute '{0}' given in a source file conflicts with option '{1}'.
dotnet_diagnostic.cs7092.severity = error # A fixed buffer may only have one dimension.
dotnet_diagnostic.cs7093.severity = error # Cannot read config file '{0}' -- '{1}'
dotnet_diagnostic.cs7094.severity = error # Cannot await in the filter expression of a catch clause
dotnet_diagnostic.cs7095.severity = warning # Filter expression is a constant 'true', consider removing the filter
dotnet_diagnostic.cs7096.severity = error # Cannot continue since the edit includes a reference to an embedded type: '{0}'.
dotnet_diagnostic.cs7098.severity = error # Linked netmodule metadata must provide a full PE image: '{0}'.
dotnet_diagnostic.cs7099.severity = error # Metadata references are not supported.
dotnet_diagnostic.cs7100.severity = error # Assembly culture strings may not contain embedded NUL characters.
dotnet_diagnostic.cs7101.severity = error # Member '{0}' added during the current debug session can only be accessed from within its declaring assembly '{1}'.
dotnet_diagnostic.cs7102.severity = error # Compilation options '{0}' and '{1}' can't both be specified at the same time.
dotnet_diagnostic.cs7103.severity = error # Unable to read debug information of method '{0}' (token 0x{1:X8}) from assembly '{2}'
dotnet_diagnostic.cs8001.severity = warning # The command line switch '{0}' is not yet implemented and was ignored.
dotnet_diagnostic.cs8002.severity = warning # Referenced assembly '{0}' does not have a strong name.
dotnet_diagnostic.cs8003.severity = error # Invalid signature public key specified in AssemblySignatureKeyAttribute.
dotnet_diagnostic.cs8004.severity = error # Type '{0}' exported from module '{1}' conflicts with type declared in primary module of this assembly.
dotnet_diagnostic.cs8005.severity = error # Type '{0}' exported from module '{1}' conflicts with type '{2}' exported from module '{3}'.
dotnet_diagnostic.cs8006.severity = error # Forwarded type '{0}' conflicts with type declared in primary module of this assembly.
dotnet_diagnostic.cs8007.severity = error # Type '{0}' forwarded to assembly '{1}' conflicts with type '{2}' forwarded to assembly '{3}'.
dotnet_diagnostic.cs8008.severity = error # Type '{0}' forwarded to assembly '{1}' conflicts with type '{2}' exported from module '{3}'.
dotnet_diagnostic.cs8009.severity = warning # Referenced assembly '{0}' has different culture setting of '{1}'.
dotnet_diagnostic.cs8010.severity = error # Agnostic assembly cannot have a processor specific module '{0}'.
dotnet_diagnostic.cs8011.severity = error # Assembly and module '{0}' cannot target different processors.
dotnet_diagnostic.cs8012.severity = warning # Referenced assembly '{0}' targets a different processor.
dotnet_diagnostic.cs8013.severity = error # Cryptographic failure while creating hashes.
dotnet_diagnostic.cs8014.severity = error # Reference to '{0}' netmodule missing.
dotnet_diagnostic.cs8015.severity = error # Module '{0}' is already defined in this assembly. Each module must have a unique filename.
dotnet_diagnostic.cs8016.severity = error # Transparent identifier member access failed for field '{0}' of '{1}'. Does the data being queried implement the query pattern?
dotnet_diagnostic.cs8017.severity = error # The parameter has multiple distinct default values.
dotnet_diagnostic.cs8018.severity = warning # Within cref attributes, nested types of generic types should be qualified.
dotnet_diagnostic.cs8019.severity = none # Unnecessary using directive.
dotnet_diagnostic.cs8020.severity = none # Unused extern alias.
dotnet_diagnostic.cs8021.severity = warning # No value for RuntimeMetadataVersion found. No assembly containing System.Object was found nor was a value for RuntimeMetadataVersion specified through options.
dotnet_diagnostic.cs8022.severity = error # Feature '{0}' is not available in C# 1. Please use language version {1} or greater.
dotnet_diagnostic.cs8023.severity = error # Feature '{0}' is not available in C# 2. Please use language version {1} or greater.
dotnet_diagnostic.cs8024.severity = error # Feature '{0}' is not available in C# 3. Please use language version {1} or greater.
dotnet_diagnostic.cs8025.severity = error # Feature '{0}' is not available in C# 4. Please use language version {1} or greater.
dotnet_diagnostic.cs8026.severity = error # Feature '{0}' is not available in C# 5. Please use language version {1} or greater.
dotnet_diagnostic.cs8027.severity = error # The field has multiple distinct constant values.
dotnet_diagnostic.cs8028.severity = error # '{0}': a class with the ComImport attribute cannot specify field initializers.
dotnet_diagnostic.cs8029.severity = warning # Local name '{0}' is too long for PDB. Consider shortening or compiling without /debug.
dotnet_diagnostic.cs8030.severity = error # Anonymous function converted to a void returning delegate cannot return a value
dotnet_diagnostic.cs8031.severity = error # Async lambda expression converted to a '{0}' returning delegate cannot return a value
dotnet_diagnostic.cs8032.severity = warning # An instance of analyzer {0} cannot be created from {1} : {2}.
dotnet_diagnostic.cs8033.severity = warning # The assembly {0} does not contain any analyzers.
dotnet_diagnostic.cs8034.severity = warning # Unable to load Analyzer assembly {0} : {1}
dotnet_diagnostic.cs8035.severity = error # Error reading ruleset file {0} - {1}
dotnet_diagnostic.cs8036.severity = error # Error reading debug information for '{0}'
dotnet_diagnostic.cs8040.severity = suggestion # Skipping some types in analyzer assembly {0} due to a ReflectionTypeLoadException : {1}.
dotnet_diagnostic.cs8050.severity = error # Only auto-implemented properties can have initializers.
dotnet_diagnostic.cs8051.severity = error # Auto-implemented properties must have get accessors.
dotnet_diagnostic.cs8053.severity = error # Instance properties in interfaces cannot have initializers.
dotnet_diagnostic.cs8054.severity = error # Enums cannot contain explicit parameterless constructors
dotnet_diagnostic.cs8055.severity = error # Cannot emit debug information for a source text without encoding.
dotnet_diagnostic.cs8057.severity = error # Block bodies and expression bodies cannot both be provided.
dotnet_diagnostic.cs8058.severity = error # Feature '{0}' is experimental and unsupported; use '/features:{1}' to enable.
dotnet_diagnostic.cs8059.severity = error # Feature '{0}' is not available in C# 6. Please use language version {1} or greater.
dotnet_diagnostic.cs8070.severity = error # Control cannot fall out of switch from final case label ('{0}')
dotnet_diagnostic.cs8072.severity = error # An expression tree lambda may not contain a null propagating operator.
dotnet_diagnostic.cs8073.severity = warning # The result of the expression is always '{0}' since a value of type '{1}' is never equal to 'null' of type '{2}'
dotnet_diagnostic.cs8074.severity = error # An expression tree lambda may not contain a dictionary initializer.
dotnet_diagnostic.cs8075.severity = error # An extension Add method is not supported for a collection initializer in an expression lambda.
dotnet_diagnostic.cs8076.severity = error # Missing close delimiter '}' for interpolated expression started with '{'.
dotnet_diagnostic.cs8078.severity = error # An expression is too long or complex to compile
dotnet_diagnostic.cs8079.severity = error # Use of possibly unassigned auto-implemented property '{0}'
dotnet_diagnostic.cs8080.severity = error # Auto-implemented properties must override all accessors of the overridden property.
dotnet_diagnostic.cs8081.severity = error # Expression does not have a name.
dotnet_diagnostic.cs8082.severity = error # Sub-expression cannot be used in an argument to nameof.
dotnet_diagnostic.cs8083.severity = error # An alias-qualified name is not an expression.
dotnet_diagnostic.cs8084.severity = error # Type parameters are not allowed on a method group as an argument to 'nameof'.
dotnet_diagnostic.cs8085.severity = error # A 'using static' directive cannot be used to declare an alias
dotnet_diagnostic.cs8086.severity = error # A '{0}' character must be escaped (by doubling) in an interpolated string.
dotnet_diagnostic.cs8087.severity = error # A '{0}' character may only be escaped by doubling '{0}{0}' in an interpolated string.
dotnet_diagnostic.cs8088.severity = error # A format specifier may not contain trailing whitespace.
dotnet_diagnostic.cs8089.severity = error # Empty format specifier.
dotnet_diagnostic.cs8090.severity = error # There is an error in a referenced assembly '{0}'.
dotnet_diagnostic.cs8091.severity = error # '{0}' cannot be extern and have a constructor initializer
dotnet_diagnostic.cs8092.severity = error # Expression or declaration statement expected.
dotnet_diagnostic.cs8093.severity = error # Extension method groups are not allowed as an argument to 'nameof'.
dotnet_diagnostic.cs8094.severity = warning # Alignment value {0} has a magnitude greater than {1} and may result in a large formatted string.
dotnet_diagnostic.cs8095.severity = error # Length of String constant resulting from concatenation exceeds System.Int32.MaxValue. Try splitting the string into multiple constants.
dotnet_diagnostic.cs8096.severity = error # Debug entry point must be a definition of a method declared in the current compilation.
dotnet_diagnostic.cs8097.severity = error # #load is only allowed in scripts
dotnet_diagnostic.cs8098.severity = error # Cannot use #load after first token in file
dotnet_diagnostic.cs8099.severity = error # Source file references are not supported.
dotnet_diagnostic.cs8100.severity = error # The 'await' operator cannot be used in a static script variable initializer.
dotnet_diagnostic.cs8101.severity = error # The pathmap option was incorrectly formatted.
dotnet_diagnostic.cs8102.severity = error # Public signing was specified and requires a public key, but no public key was specified.
dotnet_diagnostic.cs8103.severity = error # Combined length of user strings used by the program exceeds allowed limit. Try to decrease use of string literals.
dotnet_diagnostic.cs8104.severity = error # An error occurred while writing the output file: {0}.
dotnet_diagnostic.cs8105.severity = warning # Attribute '{0}' is ignored when public signing is specified.
dotnet_diagnostic.cs8106.severity = error # Option '{0}' must be an absolute path.
dotnet_diagnostic.cs8107.severity = error # Feature '{0}' is not available in C# 7.0. Please use language version {1} or greater.
dotnet_diagnostic.cs8108.severity = error # Cannot pass argument with dynamic type to params parameter '{0}' of local function '{1}'.
dotnet_diagnostic.cs8110.severity = error # An expression tree may not contain a reference to a local function
dotnet_diagnostic.cs8111.severity = error # Invalid instrumentation kind: {0}
dotnet_diagnostic.cs8112.severity = error # Local function '{0}' must declare a body because it is not marked 'static extern'.
dotnet_diagnostic.cs8113.severity = error # Invalid hash algorithm name: '{0}'
dotnet_diagnostic.cs8115.severity = error # A throw expression is not allowed in this context.
dotnet_diagnostic.cs8116.severity = error # It is not legal to use nullable type '{0}?' in a pattern; use the underlying type '{0}' instead.
dotnet_diagnostic.cs8117.severity = error # Invalid operand for pattern match; value required, but found '{0}'.
dotnet_diagnostic.cs8119.severity = error # The switch expression must be a value; found '{0}'.
dotnet_diagnostic.cs8120.severity = error # The switch case is unreachable. It has already been handled by a previous case or it is impossible to match.
dotnet_diagnostic.cs8121.severity = error # An expression of type '{0}' cannot be handled by a pattern of type '{1}'.
dotnet_diagnostic.cs8122.severity = error # An expression tree may not contain an 'is' pattern-matching operator.
dotnet_diagnostic.cs8123.severity = warning # The tuple element name '{0}' is ignored because a different name or no name is specified by the target type '{1}'.
dotnet_diagnostic.cs8124.severity = error # Tuple must contain at least two elements.
dotnet_diagnostic.cs8125.severity = error # Tuple element name '{0}' is only allowed at position {1}.
dotnet_diagnostic.cs8126.severity = error # Tuple element name '{0}' is disallowed at any position.
dotnet_diagnostic.cs8127.severity = error # Tuple element names must be unique.
dotnet_diagnostic.cs8128.severity = error # Member '{0}' was not found on type '{1}' from assembly '{2}'.
dotnet_diagnostic.cs8129.severity = error # No suitable 'Deconstruct' instance or extension method was found for type '{0}', with {1} out parameters and a void return type.
dotnet_diagnostic.cs8130.severity = error # Cannot infer the type of implicitly-typed deconstruction variable '{0}'.
dotnet_diagnostic.cs8131.severity = error # Deconstruct assignment requires an expression with a type on the right-hand-side.
dotnet_diagnostic.cs8132.severity = error # Cannot deconstruct a tuple of '{0}' elements into '{1}' variables.
dotnet_diagnostic.cs8133.severity = error # Cannot deconstruct dynamic objects.
dotnet_diagnostic.cs8134.severity = error # Deconstruction must contain at least two variables.
dotnet_diagnostic.cs8135.severity = error # Tuple with {0} elements cannot be converted to type '{1}'.
dotnet_diagnostic.cs8136.severity = error # Deconstruction 'var (...)' form disallows a specific type for 'var'.
dotnet_diagnostic.cs8137.severity = error # Cannot define a class or member that utilizes tuples because the compiler required type '{0}' cannot be found. Are you missing a reference?
dotnet_diagnostic.cs8138.severity = error # Cannot reference 'System.Runtime.CompilerServices.TupleElementNamesAttribute' explicitly. Use the tuple syntax to define tuple names.
dotnet_diagnostic.cs8139.severity = error # '{0}': cannot change tuple element names when overriding inherited member '{1}'
dotnet_diagnostic.cs8140.severity = error # '{0}' is already listed in the interface list on type '{2}' with different tuple element names, as '{1}'.
dotnet_diagnostic.cs8141.severity = error # The tuple element names in the signature of method '{0}' must match the tuple element names of interface method '{1}' (including on the return type).
dotnet_diagnostic.cs8142.severity = error # Both partial method declarations, '{0}' and '{1}', must use the same tuple element names.
dotnet_diagnostic.cs8143.severity = error # An expression tree may not contain a tuple literal.
dotnet_diagnostic.cs8144.severity = error # An expression tree may not contain a tuple conversion.
dotnet_diagnostic.cs8145.severity = error # Auto-implemented properties cannot return by reference
dotnet_diagnostic.cs8146.severity = error # Properties which return by reference must have a get accessor
dotnet_diagnostic.cs8147.severity = error # Properties which return by reference cannot have set accessors
dotnet_diagnostic.cs8148.severity = error # '{0}' must match by reference return of overridden member '{1}'
dotnet_diagnostic.cs8149.severity = error # By-reference returns may only be used in methods that return by reference
dotnet_diagnostic.cs8150.severity = error # By-value returns may only be used in methods that return by value
dotnet_diagnostic.cs8151.severity = error # The return expression must be of type '{0}' because this method returns by reference
dotnet_diagnostic.cs8152.severity = error # '{0}' does not implement interface member '{1}'. '{2}' cannot implement '{1}' because it does not have matching return by reference.
dotnet_diagnostic.cs8153.severity = error # An expression tree lambda may not contain a call to a method, property, or indexer that returns by reference
dotnet_diagnostic.cs8154.severity = error # The body of '{0}' cannot be an iterator block because '{0}' returns by reference
dotnet_diagnostic.cs8155.severity = error # Lambda expressions that return by reference cannot be converted to expression trees
dotnet_diagnostic.cs8156.severity = error # An expression cannot be used in this context because it may not be passed or returned by reference
dotnet_diagnostic.cs8157.severity = error # Cannot return '{0}' by reference because it was initialized to a value that cannot be returned by reference
dotnet_diagnostic.cs8158.severity = error # Cannot return by reference a member of '{0}' because it was initialized to a value that cannot be returned by reference
dotnet_diagnostic.cs8159.severity = error # Cannot return the range variable '{0}' by reference
dotnet_diagnostic.cs8160.severity = error # A readonly field cannot be returned by writable reference
dotnet_diagnostic.cs8161.severity = error # A static readonly field cannot be returned by writable reference
dotnet_diagnostic.cs8162.severity = error # Members of readonly field '{0}' cannot be returned by writable reference
dotnet_diagnostic.cs8163.severity = error # Fields of static readonly field '{0}' cannot be returned by writable reference
dotnet_diagnostic.cs8166.severity = error # Cannot return a parameter by reference '{0}' because it is not a ref parameter
dotnet_diagnostic.cs8167.severity = error # Cannot return by reference a member of parameter '{0}' because it is not a ref or out parameter
dotnet_diagnostic.cs8168.severity = error # Cannot return local '{0}' by reference because it is not a ref local
dotnet_diagnostic.cs8169.severity = error # Cannot return a member of local '{0}' by reference because it is not a ref local
dotnet_diagnostic.cs8170.severity = error # Struct members cannot return 'this' or other instance members by reference
dotnet_diagnostic.cs8171.severity = error # Cannot initialize a by-value variable with a reference
dotnet_diagnostic.cs8172.severity = error # Cannot initialize a by-reference variable with a value
dotnet_diagnostic.cs8173.severity = error # The expression must be of type '{0}' because it is being assigned by reference
dotnet_diagnostic.cs8174.severity = error # A declaration of a by-reference variable must have an initializer
dotnet_diagnostic.cs8175.severity = error # Cannot use ref local '{0}' inside an anonymous method, lambda expression, or query expression
dotnet_diagnostic.cs8176.severity = error # Iterators cannot have by-reference locals
dotnet_diagnostic.cs8177.severity = error # Async methods cannot have by-reference locals
dotnet_diagnostic.cs8178.severity = error # A reference returned by a call to '{0}' cannot be preserved across 'await' or 'yield' boundary.
dotnet_diagnostic.cs8179.severity = error # Predefined type '{0}' is not defined or imported
dotnet_diagnostic.cs8180.severity = error # { or ; or => expected
dotnet_diagnostic.cs8181.severity = error # 'new' cannot be used with tuple type. Use a tuple literal expression instead.
dotnet_diagnostic.cs8182.severity = error # Predefined type '{0}' must be a struct.
dotnet_diagnostic.cs8183.severity = error # Cannot infer the type of implicitly-typed discard.
dotnet_diagnostic.cs8185.severity = error # A declaration is not allowed in this context.
dotnet_diagnostic.cs8186.severity = error # A foreach loop must declare its iteration variables.
dotnet_diagnostic.cs8187.severity = error # Tuple element names are not permitted on the left of a deconstruction.
dotnet_diagnostic.cs8188.severity = error # An expression tree may not contain a throw-expression.
dotnet_diagnostic.cs8189.severity = error # Ref mismatch between '{0}' and delegate '{1}'
dotnet_diagnostic.cs8190.severity = error # Provided source code kind is unsupported or invalid: '{0}'
dotnet_diagnostic.cs8191.severity = error # Provided documentation mode is unsupported or invalid: '{0}'.
dotnet_diagnostic.cs8192.severity = error # Provided language version is unsupported or invalid: '{0}'.
dotnet_diagnostic.cs8196.severity = error # Reference to an implicitly-typed out variable '{0}' is not permitted in the same argument list.
dotnet_diagnostic.cs8197.severity = error # Cannot infer the type of implicitly-typed out variable '{0}'.
dotnet_diagnostic.cs8198.severity = error # An expression tree may not contain an out argument variable declaration.
dotnet_diagnostic.cs8199.severity = error # The syntax 'var (...)' as an lvalue is reserved.
dotnet_diagnostic.cs8202.severity = error # Public signing is not supported for netmodules.
dotnet_diagnostic.cs8203.severity = error # Invalid assembly name: {0}
dotnet_diagnostic.cs8204.severity = error # For type '{0}' to be used as an AsyncMethodBuilder for type '{1}', its Task property should return type '{1}' instead of type '{2}'.
dotnet_diagnostic.cs8206.severity = error # Module '{0}' in assembly '{1}' is forwarding the type '{2}' to multiple assemblies: '{3}' and '{4}'.
dotnet_diagnostic.cs8207.severity = error # An expression tree may not contain a discard.
dotnet_diagnostic.cs8208.severity = error # It is not legal to use the type 'dynamic' in a pattern.
dotnet_diagnostic.cs8209.severity = error # A value of type 'void' may not be assigned.
dotnet_diagnostic.cs8210.severity = error # A tuple may not contain a value of type 'void'.
dotnet_diagnostic.cs8300.severity = error # Merge conflict marker encountered
dotnet_diagnostic.cs8301.severity = error # Invalid name for a preprocessing symbol; '{0}' is not a valid identifier
dotnet_diagnostic.cs8302.severity = error # Feature '{0}' is not available in C# 7.1. Please use language version {1} or greater.
dotnet_diagnostic.cs8303.severity = error # Specified language version '{0}' cannot have leading zeroes
dotnet_diagnostic.cs8304.severity = error # Compiler version: '{0}'. Language version: {1}.
dotnet_diagnostic.cs8305.severity = warning # '{0}' is for evaluation purposes only and is subject to change or removal in future updates.
dotnet_diagnostic.cs8306.severity = error # Tuple element name '{0}' is inferred. Please use language version {1} or greater to access an element by its inferred name.
dotnet_diagnostic.cs8307.severity = error # The first operand of an 'as' operator may not be a tuple literal without a natural type.
dotnet_diagnostic.cs8308.severity = error # Do not use refout when using refonly.
dotnet_diagnostic.cs8309.severity = error # Cannot compile net modules when using /refout or /refonly.
dotnet_diagnostic.cs8310.severity = error # Operator '{0}' cannot be applied to operand '{1}'
dotnet_diagnostic.cs8312.severity = error # Use of default literal is not valid in this context
dotnet_diagnostic.cs8314.severity = error # An expression of type '{0}' cannot be handled by a pattern of type '{1}' in C# {2}. Please use language version {3} or greater.
dotnet_diagnostic.cs8315.severity = error # Operator '{0}' is ambiguous on operands '{1}' and '{2}'
dotnet_diagnostic.cs8320.severity = error # Feature '{0}' is not available in C# 7.2. Please use language version {1} or greater.
dotnet_diagnostic.cs8321.severity = warning # The local function '{0}' is declared but never used
dotnet_diagnostic.cs8322.severity = error # Cannot pass argument with dynamic type to generic local function '{0}' with inferred type arguments.
dotnet_diagnostic.cs8323.severity = error # Named argument '{0}' is used out-of-position but is followed by an unnamed argument
dotnet_diagnostic.cs8324.severity = error # Named argument specifications must appear after all fixed arguments have been specified in a dynamic invocation.
dotnet_diagnostic.cs8325.severity = error # 'await' cannot be used in an expression containing a ref conditional operator
dotnet_diagnostic.cs8326.severity = error # Both conditional operator values must be ref values or neither may be a ref value
dotnet_diagnostic.cs8327.severity = error # The expression must be of type '{0}' to match the alternative ref value
dotnet_diagnostic.cs8328.severity = error # The parameter modifier '{0}' cannot be used with '{1}'
dotnet_diagnostic.cs8329.severity = error # Cannot use {0} '{1}' as a ref or out value because it is a readonly variable
dotnet_diagnostic.cs8330.severity = error # Members of {0} '{1}' cannot be used as a ref or out value because it is a readonly variable
dotnet_diagnostic.cs8331.severity = error # Cannot assign to {0} '{1}' or use it as the right hand side of a ref assignment because it is a readonly variable
dotnet_diagnostic.cs8332.severity = error # Cannot assign to a member of {0} '{1}' or use it as the right hand side of a ref assignment because it is a readonly variable
dotnet_diagnostic.cs8333.severity = error # Cannot return {0} '{1}' by writable reference because it is a readonly variable
dotnet_diagnostic.cs8334.severity = error # Members of {0} '{1}' cannot be returned by writable reference because it is a readonly variable
dotnet_diagnostic.cs8335.severity = error # Do not use '{0}'. This is reserved for compiler usage.
dotnet_diagnostic.cs8336.severity = error # The type name '{0}' is reserved to be used by the compiler.
dotnet_diagnostic.cs8337.severity = error # The first parameter of a 'ref' extension method '{0}' must be a value type or a generic type constrained to struct.
dotnet_diagnostic.cs8338.severity = error # The first 'in' or 'ref readonly' parameter of the extension method '{0}' must be a concrete (non-generic) value type.
dotnet_diagnostic.cs8340.severity = error # Instance fields of readonly structs must be readonly.
dotnet_diagnostic.cs8341.severity = error # Auto-implemented instance properties in readonly structs must be readonly.
dotnet_diagnostic.cs8342.severity = error # Field-like events are not allowed in readonly structs.
dotnet_diagnostic.cs8343.severity = error # '{0}': ref structs cannot implement interfaces
dotnet_diagnostic.cs8344.severity = error # foreach statement cannot operate on enumerators of type '{0}' in async or iterator methods because '{0}' is a ref struct.
dotnet_diagnostic.cs8345.severity = error # Field or auto-implemented property cannot be of type '{0}' unless it is an instance member of a ref struct.
dotnet_diagnostic.cs8346.severity = error # Conversion of a stackalloc expression of type '{0}' to type '{1}' is not possible.
dotnet_diagnostic.cs8347.severity = error # Cannot use a result of '{0}' in this context because it may expose variables referenced by parameter '{1}' outside of their declaration scope
dotnet_diagnostic.cs8348.severity = error # Cannot use a member of result of '{0}' in this context because it may expose variables referenced by parameter '{1}' outside of their declaration scope
dotnet_diagnostic.cs8349.severity = error # Expression cannot be used in this context because it may indirectly expose variables outside of their declaration scope
dotnet_diagnostic.cs8350.severity = error # This combination of arguments to '{0}' is disallowed because it may expose variables referenced by parameter '{1}' outside of their declaration scope
dotnet_diagnostic.cs8351.severity = error # Branches of a ref conditional operator cannot refer to variables with incompatible declaration scopes
dotnet_diagnostic.cs8352.severity = error # Cannot use variable '{0}' in this context because it may expose referenced variables outside of their declaration scope
dotnet_diagnostic.cs8353.severity = error # A result of a stackalloc expression of type '{0}' cannot be used in this context because it may be exposed outside of the containing method
dotnet_diagnostic.cs8354.severity = error # Cannot return 'this' by reference.
dotnet_diagnostic.cs8355.severity = error # An in parameter cannot have the Out attribute.
dotnet_diagnostic.cs8356.severity = error # Predefined type '{0}' is declared in multiple referenced assemblies: '{1}' and '{2}'
dotnet_diagnostic.cs8357.severity = error # The specified version string '{0}' contains wildcards, which are not compatible with determinism. Either remove wildcards from the version string, or disable determinism for this compilation
dotnet_diagnostic.cs8358.severity = error # Cannot use attribute constructor '{0}' because it has 'in' or 'ref readonly' parameters.
dotnet_diagnostic.cs8359.severity = warning # Filter expression is a constant 'false', consider removing the catch clause
dotnet_diagnostic.cs8360.severity = warning # Filter expression is a constant 'false', consider removing the try-catch block
dotnet_diagnostic.cs8361.severity = error # A conditional expression cannot be used directly in a string interpolation because the ':' ends the interpolation. Parenthesize the conditional expression.
dotnet_diagnostic.cs8362.severity = error # __arglist cannot have an argument of void type
dotnet_diagnostic.cs8364.severity = error # Arguments with 'in' modifier cannot be used in dynamically dispatched expressions.
dotnet_diagnostic.cs8370.severity = error # Feature '{0}' is not available in C# 7.3. Please use language version {1} or greater.
dotnet_diagnostic.cs8371.severity = warning # Field-targeted attributes on auto-properties are not supported in language version {0}. Please use language version {1} or greater.
dotnet_diagnostic.cs8372.severity = error # Do not use 'System.Runtime.CompilerServices.FixedBuffer' attribute on a property
dotnet_diagnostic.cs8373.severity = error # The left-hand side of a ref assignment must be a ref variable.
dotnet_diagnostic.cs8374.severity = error # Cannot ref-assign '{1}' to '{0}' because '{1}' has a narrower escape scope than '{0}'.
dotnet_diagnostic.cs8375.severity = error # The 'new()' constraint cannot be used with the 'unmanaged' constraint
dotnet_diagnostic.cs8377.severity = error # The type '{2}' must be a non-nullable value type, along with all fields at any level of nesting, in order to use it as parameter '{1}' in the generic type or method '{0}'
dotnet_diagnostic.cs8378.severity = error # __arglist cannot have an argument passed by 'in' or 'out'
dotnet_diagnostic.cs8379.severity = error # Type parameter '{1}' has the 'unmanaged' constraint so '{1}' cannot be used as a constraint for '{0}'
dotnet_diagnostic.cs8380.severity = error # '{0}': cannot specify both a constraint class and the 'unmanaged' constraint
dotnet_diagnostic.cs8381.severity = error # "Invalid rank specifier: expected ']'
dotnet_diagnostic.cs8382.severity = error # An expression tree may not contain a tuple == or != operator
dotnet_diagnostic.cs8383.severity = warning # The tuple element name '{0}' is ignored because a different name or no name is specified on the other side of the tuple == or != operator.
dotnet_diagnostic.cs8384.severity = error # Tuple types used as operands of an == or != operator must have matching cardinalities. But this operator has tuple types of cardinality {0} on the left and {1} on the right.
dotnet_diagnostic.cs8385.severity = error # The given expression cannot be used in a fixed statement
dotnet_diagnostic.cs8386.severity = error # Invalid object creation
dotnet_diagnostic.cs8387.severity = warning # Type parameter '{0}' has the same name as the type parameter from outer method '{1}'
dotnet_diagnostic.cs8388.severity = error # An out variable cannot be declared as a ref local
dotnet_diagnostic.cs8389.severity = error # Omitting the type argument is not allowed in the current context
dotnet_diagnostic.cs8400.severity = error # Feature '{0}' is not available in C# 8.0. Please use language version {1} or greater.
dotnet_diagnostic.cs8401.severity = error # To use '@$' instead of '$@' for an interpolated verbatim string, please use language version '{0}' or greater.
dotnet_diagnostic.cs8403.severity = error # Method '{0}' with an iterator block must be 'async' to return '{1}'
dotnet_diagnostic.cs8410.severity = error # '{0}': type used in an asynchronous using statement must be implicitly convertible to 'System.IAsyncDisposable' or implement a suitable 'DisposeAsync' method.
dotnet_diagnostic.cs8411.severity = error # Asynchronous foreach statement cannot operate on variables of type '{0}' because '{0}' does not contain a suitable public instance or extension definition for '{1}'
dotnet_diagnostic.cs8412.severity = error # Asynchronous foreach requires that the return type '{0}' of '{1}' must have a suitable public 'MoveNextAsync' method and public 'Current' property
dotnet_diagnostic.cs8413.severity = error # Asynchronous foreach statement cannot operate on variables of type '{0}' because it implements multiple instantiations of '{1}'; try casting to a specific interface instantiation
dotnet_diagnostic.cs8414.severity = error # foreach statement cannot operate on variables of type '{0}' because '{0}' does not contain a public instance or extension definition for '{1}'. Did you mean 'await foreach' rather than 'foreach'?
dotnet_diagnostic.cs8415.severity = error # Asynchronous foreach statement cannot operate on variables of type '{0}' because '{0}' does not contain a public instance or extension definition for '{1}'. Did you mean 'foreach' rather than 'await foreach'?
dotnet_diagnostic.cs8416.severity = error # Cannot use a collection of dynamic type in an asynchronous foreach
dotnet_diagnostic.cs8417.severity = error # '{0}': type used in an asynchronous using statement must be implicitly convertible to 'System.IAsyncDisposable' or implement a suitable 'DisposeAsync' method. Did you mean 'using' rather than 'await using'?
dotnet_diagnostic.cs8418.severity = error # '{0}': type used in a using statement must be implicitly convertible to 'System.IDisposable'. Did you mean 'await using' rather than 'using'?
dotnet_diagnostic.cs8419.severity = error # The body of an async-iterator method must contain a 'yield' statement.
dotnet_diagnostic.cs8420.severity = error # The body of an async-iterator method must contain a 'yield' statement. Consider removing 'async' from the method declaration or adding a 'yield' statement.
dotnet_diagnostic.cs8421.severity = error # A static local function cannot contain a reference to '{0}'.
dotnet_diagnostic.cs8422.severity = error # A static local function cannot contain a reference to 'this' or 'base'.
dotnet_diagnostic.cs8423.severity = error # Attribute '{0}' is not valid on event accessors. It is only valid on '{1}' declarations.
dotnet_diagnostic.cs8424.severity = warning # The EnumeratorCancellationAttribute applied to parameter '{0}' will have no effect. The attribute is only effective on a parameter of type CancellationToken in an async-iterator method returning IAsyncEnumerable
dotnet_diagnostic.cs8425.severity = warning # Async-iterator '{0}' has one or more parameters of type 'CancellationToken' but none of them is decorated with the 'EnumeratorCancellation' attribute, so the cancellation token parameter from the generated 'IAsyncEnumerable<>.GetAsyncEnumerator' will be unconsumed
dotnet_diagnostic.cs8426.severity = error # The attribute [EnumeratorCancellation] cannot be used on multiple parameters
dotnet_diagnostic.cs8427.severity = error # Enums, classes, and structures cannot be declared in an interface that has an 'in' or 'out' type parameter.
dotnet_diagnostic.cs8428.severity = error # Invocation of implicit Index Indexer cannot name the argument.
dotnet_diagnostic.cs8429.severity = error # Invocation of implicit Range Indexer cannot name the argument.
dotnet_diagnostic.cs8500.severity = warning # This takes the address of, gets the size of, or declares a pointer to a managed type ('{0}')
dotnet_diagnostic.cs8502.severity = error # Matching the tuple type '{0}' requires '{1}' subpatterns, but '{2}' subpatterns are present.
dotnet_diagnostic.cs8503.severity = error # A property subpattern requires a reference to the property or field to be matched, e.g. '{{ Name: {0} }}'
dotnet_diagnostic.cs8504.severity = error # Pattern missing
dotnet_diagnostic.cs8505.severity = error # A default literal 'default' is not valid as a pattern. Use another literal (e.g. '0' or 'null') as appropriate. To match everything, use a discard pattern '_'.
dotnet_diagnostic.cs8506.severity = error # No best type was found for the switch expression.
dotnet_diagnostic.cs8508.severity = error # The syntax 'var' for a pattern is not permitted to refer to a type, but '{0}' is in scope here.
dotnet_diagnostic.cs8509.severity = warning # The switch expression does not handle all possible values of its input type (it is not exhaustive). For example, the pattern '{0}' is not covered.
dotnet_diagnostic.cs8510.severity = error # The pattern is unreachable. It has already been handled by a previous arm of the switch expression or it is impossible to match.
dotnet_diagnostic.cs8511.severity = error # An expression of type '{0}' cannot be handled by a pattern of type '{1}'. Please use language version '{2}' or greater to match an open type with a constant pattern.
dotnet_diagnostic.cs8512.severity = warning # The name '_' refers to the constant, not the discard pattern. Use 'var _' to discard the value, or '@_' to refer to a constant by that name.
dotnet_diagnostic.cs8513.severity = warning # The name '_' refers to the type '{0}', not the discard pattern. Use '@_' for the type, or 'var _' to discard.
dotnet_diagnostic.cs8514.severity = error # An expression tree may not contain a switch expression.
dotnet_diagnostic.cs8515.severity = error # Parentheses are required around the switch governing expression.
dotnet_diagnostic.cs8516.severity = error # The name '{0}' does not identify tuple element '{1}'.
dotnet_diagnostic.cs8517.severity = error # The name '{0}' does not match the corresponding 'Deconstruct' parameter '{1}'.
dotnet_diagnostic.cs8518.severity = error # An expression of type '{0}' can never match the provided pattern.
dotnet_diagnostic.cs8519.severity = warning # The given expression never matches the provided pattern.
dotnet_diagnostic.cs8520.severity = warning # The given expression always matches the provided constant.
dotnet_diagnostic.cs8521.severity = error # Pattern-matching is not permitted for pointer types.
dotnet_diagnostic.cs8522.severity = error # Element names are not permitted when pattern-matching via 'System.Runtime.CompilerServices.ITuple'.
dotnet_diagnostic.cs8523.severity = error # The discard pattern is not permitted as a case label in a switch statement. Use 'case var _:' for a discard pattern, or 'case @_:' for a constant named '_'.
dotnet_diagnostic.cs8524.severity = warning # The switch expression does not handle some values of its input type (it is not exhaustive) involving an unnamed enum value. For example, the pattern '{0}' is not covered.
dotnet_diagnostic.cs8597.severity = warning # Thrown value may be null.
dotnet_diagnostic.cs8598.severity = error # The suppression operator is not allowed in this context
dotnet_diagnostic.cs8600.severity = warning # Converting null literal or possible null value to non-nullable type.
dotnet_diagnostic.cs8601.severity = warning # Possible null reference assignment.
dotnet_diagnostic.cs8602.severity = warning # Dereference of a possibly null reference.
dotnet_diagnostic.cs8603.severity = warning # Possible null reference return.
dotnet_diagnostic.cs8604.severity = warning # Possible null reference argument for parameter '{0}' in '{1}'.
dotnet_diagnostic.cs8605.severity = warning # Unboxing a possibly null value.
dotnet_diagnostic.cs8607.severity = warning # A possible null value may not be used for a type marked with [NotNull] or [DisallowNull]
dotnet_diagnostic.cs8608.severity = warning # Nullability of reference types in type doesn't match overridden member.
dotnet_diagnostic.cs8609.severity = warning # Nullability of reference types in return type doesn't match overridden member.
dotnet_diagnostic.cs8610.severity = warning # Nullability of reference types in type of parameter '{0}' doesn't match overridden member.
dotnet_diagnostic.cs8611.severity = warning # Nullability of reference types in type of parameter '{0}' doesn't match partial method declaration.
dotnet_diagnostic.cs8612.severity = warning # Nullability of reference types in type of '{0}' doesn't match implicitly implemented member '{1}'.
dotnet_diagnostic.cs8613.severity = warning # Nullability of reference types in return type of '{0}' doesn't match implicitly implemented member '{1}'.
dotnet_diagnostic.cs8614.severity = warning # Nullability of reference types in type of parameter '{0}' of '{1}' doesn't match implicitly implemented member '{2}'.
dotnet_diagnostic.cs8615.severity = warning # Nullability of reference types in type doesn't match implemented member '{0}'.
dotnet_diagnostic.cs8616.severity = warning # Nullability of reference types in return type doesn't match implemented member '{0}'.
dotnet_diagnostic.cs8617.severity = warning # Nullability of reference types in type of parameter '{0}' doesn't match implemented member '{1}'.
dotnet_diagnostic.cs8618.severity = warning # Non-nullable {0} '{1}' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the {0} as nullable.
dotnet_diagnostic.cs8619.severity = warning # Nullability of reference types in value of type '{0}' doesn't match target type '{1}'.
dotnet_diagnostic.cs8620.severity = warning # Argument of type '{0}' cannot be used for parameter '{2}' of type '{1}' in '{3}' due to differences in the nullability of reference types.
dotnet_diagnostic.cs8621.severity = warning # Nullability of reference types in return type of '{0}' doesn't match the target delegate '{1}' (possibly because of nullability attributes).
dotnet_diagnostic.cs8622.severity = warning # Nullability of reference types in type of parameter '{0}' of '{1}' doesn't match the target delegate '{2}' (possibly because of nullability attributes).
dotnet_diagnostic.cs8623.severity = error # Explicit application of 'System.Runtime.CompilerServices.NullableAttribute' is not allowed.
dotnet_diagnostic.cs8624.severity = warning # Argument of type '{0}' cannot be used as an output of type '{1}' for parameter '{2}' in '{3}' due to differences in the nullability of reference types.
dotnet_diagnostic.cs8625.severity = warning # Cannot convert null literal to non-nullable reference type.
dotnet_diagnostic.cs8627.severity = error # A nullable type parameter must be known to be a value type or non-nullable reference type unless language version '{0}' or greater is used. Consider changing the language version or adding a 'class', 'struct', or type constraint.
dotnet_diagnostic.cs8628.severity = error # Cannot use a nullable reference type in object creation.
dotnet_diagnostic.cs8629.severity = warning # Nullable value type may be null.
dotnet_diagnostic.cs8630.severity = error # Invalid '{0}' value: '{1}' for C# {2}. Please use language version '{3}' or greater.
dotnet_diagnostic.cs8631.severity = warning # The type '{3}' cannot be used as type parameter '{2}' in the generic type or method '{0}'. Nullability of type argument '{3}' doesn't match constraint type '{1}'.
dotnet_diagnostic.cs8632.severity = warning # The annotation for nullable reference types should only be used in code within a '#nullable' annotations context.
dotnet_diagnostic.cs8633.severity = warning # Nullability in constraints for type parameter '{0}' of method '{1}' doesn't match the constraints for type parameter '{2}' of interface method '{3}'. Consider using an explicit interface implementation instead.
dotnet_diagnostic.cs8634.severity = warning # The type '{2}' cannot be used as type parameter '{1}' in the generic type or method '{0}'. Nullability of type argument '{2}' doesn't match 'class' constraint.
dotnet_diagnostic.cs8635.severity = error # Unexpected character sequence '...'
dotnet_diagnostic.cs8636.severity = error # Invalid option '{0}' for /nullable; must be 'disable', 'enable', 'warnings' or 'annotations'
dotnet_diagnostic.cs8637.severity = error # Expected 'enable', 'disable', or 'restore'
dotnet_diagnostic.cs8639.severity = error # The typeof operator cannot be used on a nullable reference type
dotnet_diagnostic.cs8640.severity = error # Expression tree cannot contain value of ref struct or restricted type '{0}'.
dotnet_diagnostic.cs8641.severity = error # 'else' cannot start a statement.
dotnet_diagnostic.cs8642.severity = error # An expression tree may not contain a null coalescing assignment
dotnet_diagnostic.cs8643.severity = warning # Nullability of reference types in explicit interface specifier doesn't match interface implemented by the type.
dotnet_diagnostic.cs8644.severity = warning # '{0}' does not implement interface member '{1}'. Nullability of reference types in interface implemented by the base type doesn't match.
dotnet_diagnostic.cs8645.severity = warning # '{0}' is already listed in the interface list on type '{1}' with different nullability of reference types.
dotnet_diagnostic.cs8646.severity = error # '{0}' is explicitly implemented more than once.
dotnet_diagnostic.cs8647.severity = error # A using variable cannot be used directly within a switch section (consider using braces).
dotnet_diagnostic.cs8648.severity = error # A goto cannot jump to a location after a using declaration.
dotnet_diagnostic.cs8649.severity = error # A goto cannot jump to a location before a using declaration within the same block.
dotnet_diagnostic.cs8650.severity = error # It is not legal to use nullable reference type '{0}?' in an is-type expression; use the underlying type '{0}' instead.
dotnet_diagnostic.cs8651.severity = error # It is not legal to use nullable reference type '{0}?' in an as expression; use the underlying type '{0}' instead.
dotnet_diagnostic.cs8652.severity = error # The feature '{0}' is currently in Preview and *unsupported*. To use Preview features, use the 'preview' language version.
dotnet_diagnostic.cs8655.severity = warning # The switch expression does not handle some null inputs (it is not exhaustive). For example, the pattern '{0}' is not covered.
dotnet_diagnostic.cs8656.severity = warning # Call to non-readonly member '{0}' from a 'readonly' member results in an implicit copy of '{1}'.
dotnet_diagnostic.cs8657.severity = error # Static member '{0}' cannot be marked 'readonly'.
dotnet_diagnostic.cs8658.severity = error # Auto-implemented 'set' accessor '{0}' cannot be marked 'readonly'.
dotnet_diagnostic.cs8659.severity = error # Auto-implemented property '{0}' cannot be marked 'readonly' because it has a 'set' accessor.
dotnet_diagnostic.cs8660.severity = error # Cannot specify 'readonly' modifiers on both property or indexer '{0}' and its accessor. Remove one of them.
dotnet_diagnostic.cs8661.severity = error # Cannot specify 'readonly' modifiers on both accessors of property or indexer '{0}'. Instead, put a 'readonly' modifier on the property itself.
dotnet_diagnostic.cs8662.severity = error # Field-like event '{0}' cannot be 'readonly'.
dotnet_diagnostic.cs8663.severity = error # Both partial method declarations must be readonly or neither may be readonly
dotnet_diagnostic.cs8664.severity = error # '{0}': 'readonly' can only be used on accessors if the property or indexer has both a get and a set accessor
dotnet_diagnostic.cs8665.severity = error # Method '{0}' specifies a 'class' constraint for type parameter '{1}', but corresponding type parameter '{2}' of overridden or explicitly implemented method '{3}' is not a reference type.
dotnet_diagnostic.cs8666.severity = error # Method '{0}' specifies a 'struct' constraint for type parameter '{1}', but corresponding type parameter '{2}' of overridden or explicitly implemented method '{3}' is not a non-nullable value type.
dotnet_diagnostic.cs8667.severity = warning # Partial method declarations of '{0}' have inconsistent nullability in constraints for type parameter '{1}'
dotnet_diagnostic.cs8668.severity = error # Expected 'warnings', 'annotations', or end of directive
dotnet_diagnostic.cs8669.severity = warning # The annotation for nullable reference types should only be used in code within a '#nullable' annotations context. Auto-generated code requires an explicit '#nullable' directive in source.
dotnet_diagnostic.cs8670.severity = warning # Object or collection initializer implicitly dereferences possibly null member '{0}'.
dotnet_diagnostic.cs8700.severity = error # Multiple analyzer config files cannot be in the same directory ('{0}').
dotnet_diagnostic.cs8701.severity = error # Target runtime doesn't support default interface implementation.
dotnet_diagnostic.cs8702.severity = error # '{0}' cannot implement interface member '{1}' in type '{2}' because the target runtime doesn't support default interface implementation.
dotnet_diagnostic.cs8703.severity = error # The modifier '{0}' is not valid for this item in C# {1}. Please use language version '{2}' or greater.
dotnet_diagnostic.cs8704.severity = error # '{0}' does not implement interface member '{1}'. '{2}' cannot implicitly implement a non-public member in C# {3}. Please use language version '{4}' or greater.
dotnet_diagnostic.cs8705.severity = error # Interface member '{0}' does not have a most specific implementation. Neither '{1}', nor '{2}' are most specific.
dotnet_diagnostic.cs8706.severity = error # '{0}' cannot implement interface member '{1}' in type '{2}' because feature '{3}' is not available in C# {4}. Please use language version '{5}' or greater.
dotnet_diagnostic.cs8707.severity = error # Target runtime doesn't support 'protected', 'protected internal', or 'private protected' accessibility for a member of an interface.
dotnet_diagnostic.cs8711.severity = error # Type '{0}' cannot be embedded because it has a non-abstract member. Consider setting the 'Embed Interop Types' property to false.
dotnet_diagnostic.cs8712.severity = error # '{0}': abstract event cannot use event accessor syntax
dotnet_diagnostic.cs8714.severity = warning # The type '{2}' cannot be used as type parameter '{1}' in the generic type or method '{0}'. Nullability of type argument '{2}' doesn't match 'notnull' constraint.
dotnet_diagnostic.cs8715.severity = error # Duplicate null suppression operator ('!')
dotnet_diagnostic.cs8716.severity = error # There is no target type for the default literal.
dotnet_diagnostic.cs8750.severity = error # Type '{0}' cannot be embedded because it has a re-abstraction of a member from base interface. Consider setting the 'Embed Interop Types' property to false.
dotnet_diagnostic.cs8751.severity = error # Internal error in the C# compiler.
dotnet_diagnostic.cs8752.severity = error # The type '{0}' may not be used as the target type of new()
dotnet_diagnostic.cs8753.severity = error # Use of new() is not valid in this context
dotnet_diagnostic.cs8754.severity = error # There is no target type for '{0}'
dotnet_diagnostic.cs8755.severity = error # '{0}' cannot be used as a modifier on a function pointer parameter.
dotnet_diagnostic.cs8756.severity = error # Function pointer '{0}' does not take {1} arguments
dotnet_diagnostic.cs8757.severity = error # No overload for '{0}' matches function pointer '{1}'
dotnet_diagnostic.cs8758.severity = error # Ref mismatch between '{0}' and function pointer '{1}'
dotnet_diagnostic.cs8759.severity = error # Cannot create a function pointer for '{0}' because it is not a static method
dotnet_diagnostic.cs8760.severity = error # '{0}': extern event cannot have initializer
dotnet_diagnostic.cs8761.severity = error # Operator '{0}' cannot be applied to 'default' and operand of type '{1}' because it is a type parameter that is not known to be a reference type
dotnet_diagnostic.cs8762.severity = warning # Parameter '{0}' must have a non-null value when exiting with '{1}'.
dotnet_diagnostic.cs8763.severity = warning # A method marked [DoesNotReturn] should not return.
dotnet_diagnostic.cs8764.severity = warning # Nullability of return type doesn't match overridden member (possibly because of nullability attributes).
dotnet_diagnostic.cs8765.severity = warning # Nullability of type of parameter '{0}' doesn't match overridden member (possibly because of nullability attributes).
dotnet_diagnostic.cs8766.severity = warning # Nullability of reference types in return type of '{0}' doesn't match implicitly implemented member '{1}' (possibly because of nullability attributes).
dotnet_diagnostic.cs8767.severity = warning # Nullability of reference types in type of parameter '{0}' of '{1}' doesn't match implicitly implemented member '{2}' (possibly because of nullability attributes).
dotnet_diagnostic.cs8768.severity = warning # Nullability of reference types in return type doesn't match implemented member '{0}' (possibly because of nullability attributes).
dotnet_diagnostic.cs8769.severity = warning # Nullability of reference types in type of parameter '{0}' doesn't match implemented member '{1}' (possibly because of nullability attributes).
dotnet_diagnostic.cs8770.severity = warning # Method '{0}' lacks `[DoesNotReturn]` annotation to match implemented or overridden member.
dotnet_diagnostic.cs8771.severity = error # Output directory could not be determined
dotnet_diagnostic.cs8772.severity = error # stdin argument '-' is specified, but input has not been redirected from the standard input stream.
dotnet_diagnostic.cs8773.severity = error # Feature '{0}' is not available in C# 9.0. Please use language version {1} or greater.
dotnet_diagnostic.cs8774.severity = warning # Member '{0}' must have a non-null value when exiting.
dotnet_diagnostic.cs8775.severity = warning # Member '{0}' must have a non-null value when exiting with '{1}'.
dotnet_diagnostic.cs8776.severity = warning # Member '{0}' cannot be used in this attribute.
dotnet_diagnostic.cs8777.severity = warning # Parameter '{0}' must have a non-null value when exiting.
dotnet_diagnostic.cs8778.severity = warning # Constant value '{0}' may overflow '{1}' at runtime (use 'unchecked' syntax to override)
dotnet_diagnostic.cs8779.severity = error # '{0}' is already listed in the interface list on type '{2}' as '{1}'.
dotnet_diagnostic.cs8780.severity = error # A variable may not be declared within a 'not' or 'or' pattern.
dotnet_diagnostic.cs8781.severity = error # Relational patterns may not be used for a value of type '{0}'.
dotnet_diagnostic.cs8782.severity = error # Relational patterns may not be used for a floating-point NaN.
dotnet_diagnostic.cs8783.severity = error # Local function '{0}' must be 'static' in order to use the Conditional attribute
dotnet_diagnostic.cs8784.severity = warning # Generator '{0}' failed to initialize. It will not contribute to the output and compilation errors may occur as a result. Exception was of type '{1}' with message '{2}'. {3}
dotnet_diagnostic.cs8785.severity = warning # Generator '{0}' failed to generate source. It will not contribute to the output and compilation errors may occur as a result. Exception was of type '{1}' with message '{2}'. {3}
dotnet_diagnostic.cs8786.severity = error # Calling convention of '{0}' is not compatible with '{1}'.
dotnet_diagnostic.cs8787.severity = error # Cannot convert method group to function pointer (Are you missing a '&'?)
dotnet_diagnostic.cs8788.severity = error # Cannot use an extension method with a receiver as the target of a '&' operator.
dotnet_diagnostic.cs8789.severity = error # The type of a local declared in a fixed statement cannot be a function pointer type.
dotnet_diagnostic.cs8790.severity = error # An expression tree may not contain a pattern System.Index or System.Range indexer access
dotnet_diagnostic.cs8791.severity = error # An expression tree may not contain a from-end index ('^') expression.
dotnet_diagnostic.cs8792.severity = error # An expression tree may not contain a range ('..') expression.
dotnet_diagnostic.cs8793.severity = warning # The given expression always matches the provided pattern.
dotnet_diagnostic.cs8794.severity = warning # An expression of type '{0}' always matches the provided pattern.
dotnet_diagnostic.cs8795.severity = error # Partial method '{0}' must have an implementation part because it has accessibility modifiers.
dotnet_diagnostic.cs8796.severity = error # Partial method '{0}' must have accessibility modifiers because it has a non-void return type.
dotnet_diagnostic.cs8797.severity = error # Partial method '{0}' must have accessibility modifiers because it has 'out' parameters.
dotnet_diagnostic.cs8798.severity = error # Partial method '{0}' must have accessibility modifiers because it has a 'virtual', 'override', 'sealed', 'new', or 'extern' modifier.
dotnet_diagnostic.cs8799.severity = error # Both partial method declarations must have identical accessibility modifiers.
dotnet_diagnostic.cs8800.severity = error # Both partial method declarations must have identical combinations of 'virtual', 'override', 'sealed', and 'new' modifiers.
dotnet_diagnostic.cs8801.severity = error # Cannot use local variable or local function '{0}' declared in a top-level statement in this context.
dotnet_diagnostic.cs8802.severity = error # Only one compilation unit can have top-level statements.
dotnet_diagnostic.cs8803.severity = error # Top-level statements must precede namespace and type declarations.
dotnet_diagnostic.cs8804.severity = error # Cannot specify /main if there is a compilation unit with top-level statements.
dotnet_diagnostic.cs8805.severity = error # Program using top-level statements must be an executable.
dotnet_diagnostic.cs8806.severity = error # The calling convention of '{0}' is not supported by the language.
dotnet_diagnostic.cs8807.severity = error # '{0}' is not a valid calling convention specifier for a function pointer.
dotnet_diagnostic.cs8808.severity = error # '{0}' is not a valid function pointer return type modifier. Valid modifiers are 'ref' and 'ref readonly'.
dotnet_diagnostic.cs8809.severity = error # A return type can only have one '{0}' modifier.
dotnet_diagnostic.cs8810.severity = error # '&' on method groups cannot be used in expression trees
dotnet_diagnostic.cs8811.severity = error # Cannot convert &method group '{0}' to delegate type '{1}'.
dotnet_diagnostic.cs8812.severity = error # Cannot convert &method group '{0}' to non-function pointer type '{1}'.
dotnet_diagnostic.cs8813.severity = error # A module initializer must be an ordinary member method
dotnet_diagnostic.cs8814.severity = error # Module initializer method '{0}' must be accessible at the module level
dotnet_diagnostic.cs8815.severity = error # Module initializer method '{0}' must be static, and non-virtual, must have no parameters, and must return 'void'
dotnet_diagnostic.cs8816.severity = error # Module initializer method '{0}' must not be generic and must not be contained in a generic type
dotnet_diagnostic.cs8817.severity = error # Both partial method declarations must have the same return type.
dotnet_diagnostic.cs8818.severity = error # Partial method declarations must have matching ref return values.
dotnet_diagnostic.cs8819.severity = warning # Nullability of reference types in return type doesn't match partial method declaration.
dotnet_diagnostic.cs8820.severity = error # A static anonymous function cannot contain a reference to '{0}'.
dotnet_diagnostic.cs8821.severity = error # A static anonymous function cannot contain a reference to 'this' or 'base'.
dotnet_diagnostic.cs8822.severity = error # Method '{0}' specifies a 'default' constraint for type parameter '{1}', but corresponding type parameter '{2}' of overridden or explicitly implemented method '{3}' is constrained to a reference type or a value type.
dotnet_diagnostic.cs8823.severity = error # The 'default' constraint is valid on override and explicit interface implementation methods only.
dotnet_diagnostic.cs8824.severity = warning # Parameter '{0}' must have a non-null value when exiting because parameter '{1}' is non-null.
dotnet_diagnostic.cs8825.severity = warning # Return value must be non-null because parameter '{0}' is non-null.
dotnet_diagnostic.cs8826.severity = warning # Partial method declarations '{0}' and '{1}' have signature differences.
dotnet_diagnostic.cs8830.severity = error # '{0}': Target runtime doesn't support covariant return types in overrides. Return type must be '{2}' to match overridden member '{1}'
dotnet_diagnostic.cs8831.severity = error # '{0}': Target runtime doesn't support covariant types in overrides. Type must be '{2}' to match overridden member '{1}'
dotnet_diagnostic.cs8846.severity = warning # The switch expression does not handle all possible values of its input type (it is not exhaustive). For example, the pattern '{0}' is not covered. However, a pattern with a 'when' clause might successfully match this value.
dotnet_diagnostic.cs8847.severity = warning # The switch expression does not handle some null inputs (it is not exhaustive). For example, the pattern '{0}' is not covered. However, a pattern with a 'when' clause might successfully match this value.
dotnet_diagnostic.cs8848.severity = warning # Operator '{0}' cannot be used here due to precedence. Use parentheses to disambiguate.
dotnet_diagnostic.cs8849.severity = error # An expression tree may not contain a with-expression.
dotnet_diagnostic.cs8850.severity = warning # The assembly '{0}' containing type '{1}' references .NET Framework, which is not supported.
dotnet_diagnostic.cs8851.severity = warning # '{0}' defines 'Equals' but not 'GetHashCode'
dotnet_diagnostic.cs8852.severity = error # Init-only property or indexer '{0}' can only be assigned in an object initializer, or on 'this' or 'base' in an instance constructor or an 'init' accessor.
dotnet_diagnostic.cs8853.severity = error # '{0}' must match by init-only of overridden member '{1}'
dotnet_diagnostic.cs8854.severity = error # '{0}' does not implement interface member '{1}'. '{2}' cannot implement '{1}'.
dotnet_diagnostic.cs8855.severity = error # Accessors '{0}' and '{1}' should both be init-only or neither
dotnet_diagnostic.cs8856.severity = error # The 'init' accessor is not valid on static members
dotnet_diagnostic.cs8857.severity = error # The receiver of a `with` expression must have a non-void type.
dotnet_diagnostic.cs8858.severity = error # The receiver type '{0}' is not a valid record type and is not a struct type.
dotnet_diagnostic.cs8859.severity = error # Members named 'Clone' are disallowed in records.
dotnet_diagnostic.cs8860.severity = warning # Types and aliases should not be named 'record'.
dotnet_diagnostic.cs8861.severity = error # Unexpected argument list.
dotnet_diagnostic.cs8862.severity = error # A constructor declared in a type with parameter list must have 'this' constructor initializer.
dotnet_diagnostic.cs8863.severity = error # Only a single partial type declaration may have a parameter list
dotnet_diagnostic.cs8864.severity = error # Records may only inherit from object or another record
dotnet_diagnostic.cs8865.severity = error # Only records may inherit from records.
dotnet_diagnostic.cs8866.severity = error # Record member '{0}' must be a readable instance property or field of type '{1}' to match positional parameter '{2}'.
dotnet_diagnostic.cs8867.severity = error # No accessible copy constructor found in base type '{0}'.
dotnet_diagnostic.cs8868.severity = error # A copy constructor in a record must call a copy constructor of the base, or a parameterless object constructor if the record inherits from object.
dotnet_diagnostic.cs8869.severity = error # '{0}' does not override expected method from 'object'.
dotnet_diagnostic.cs8870.severity = error # '{0}' cannot be sealed because containing record is not sealed.
dotnet_diagnostic.cs8871.severity = error # '{0}' does not override expected method from '{1}'.
dotnet_diagnostic.cs8872.severity = error # '{0}' must allow overriding because the containing record is not sealed.
dotnet_diagnostic.cs8873.severity = error # Record member '{0}' must be public.
dotnet_diagnostic.cs8874.severity = error # Record member '{0}' must return '{1}'.
dotnet_diagnostic.cs8875.severity = error # Record member '{0}' must be protected.
dotnet_diagnostic.cs8876.severity = error # '{0}' does not override expected property from '{1}'.
dotnet_diagnostic.cs8877.severity = error # Record member '{0}' may not be static.
dotnet_diagnostic.cs8878.severity = error # A copy constructor '{0}' must be public or protected because the record is not sealed.
dotnet_diagnostic.cs8879.severity = error # Record member '{0}' must be private.
dotnet_diagnostic.cs8880.severity = warning # Auto-implemented property '{0}' must be fully assigned before control is returned to the caller. Consider updating to language version '{1}' to auto-default the property.
dotnet_diagnostic.cs8881.severity = warning # Field '{0}' must be fully assigned before control is returned to the caller. Consider updating to language version '{1}' to auto-default the field.
dotnet_diagnostic.cs8882.severity = warning # The out parameter '{0}' must be assigned to before control leaves the current method
dotnet_diagnostic.cs8883.severity = warning # Use of possibly unassigned auto-implemented property '{0}'
dotnet_diagnostic.cs8884.severity = warning # Use of possibly unassigned field '{0}'
dotnet_diagnostic.cs8885.severity = warning # The 'this' object cannot be used before all of its fields have been assigned. Consider updating to language version '{0}' to auto-default the unassigned fields.
dotnet_diagnostic.cs8886.severity = warning # Use of unassigned out parameter '{0}'
dotnet_diagnostic.cs8887.severity = warning # Use of unassigned local variable '{0}'
dotnet_diagnostic.cs8888.severity = error # 'managed' calling convention cannot be combined with unmanaged calling convention specifiers.
dotnet_diagnostic.cs8889.severity = error # The target runtime doesn't support extensible or runtime-environment default calling conventions.
dotnet_diagnostic.cs8890.severity = error # Type '{0}' is not defined.
dotnet_diagnostic.cs8891.severity = error # Type '{0}' must be public to be used as a calling convention.
dotnet_diagnostic.cs8892.severity = warning # Method '{0}' will not be used as an entry point because a synchronous entry point '{1}' was found.
dotnet_diagnostic.cs8893.severity = error # '{0}' is not a valid calling convention type for 'UnmanagedCallersOnly'.
dotnet_diagnostic.cs8894.severity = error # Cannot use '{0}' as a {1} type on a method attributed with 'UnmanagedCallersOnly'.
dotnet_diagnostic.cs8895.severity = error # Methods attributed with 'UnmanagedCallersOnly' cannot have generic type parameters and cannot be declared in a generic type.
dotnet_diagnostic.cs8896.severity = error # 'UnmanagedCallersOnly' can only be applied to ordinary static non-abstract, non-virtual methods or static local functions.
dotnet_diagnostic.cs8897.severity = warning # '{0}': static types cannot be used as parameters
dotnet_diagnostic.cs8898.severity = warning # '{0}': static types cannot be used as return types
dotnet_diagnostic.cs8899.severity = error # Application entry points cannot be attributed with 'UnmanagedCallersOnly'.
dotnet_diagnostic.cs8900.severity = error # Module initializer cannot be attributed with 'UnmanagedCallersOnly'.
dotnet_diagnostic.cs8901.severity = error # '{0}' is attributed with 'UnmanagedCallersOnly' and cannot be called directly. Obtain a function pointer to this method.
dotnet_diagnostic.cs8902.severity = error # '{0}' is attributed with 'UnmanagedCallersOnly' and cannot be converted to a delegate type. Obtain a function pointer to this method.
dotnet_diagnostic.cs8903.severity = error # 'init' accessors cannot be marked 'readonly'. Mark '{0}' readonly instead.
dotnet_diagnostic.cs8904.severity = error # Invalid variance: The type parameter '{1}' must be {3} valid on '{0}' unless language version '{4}' or greater is used. '{1}' is {2}.
dotnet_diagnostic.cs8905.severity = error # A function pointer cannot be called with named arguments.
dotnet_diagnostic.cs8906.severity = error # Record equality contract property '{0}' must have a get accessor.
dotnet_diagnostic.cs8907.severity = warning # Parameter '{0}' is unread. Did you forget to use it to initialize the property with that name?
dotnet_diagnostic.cs8908.severity = error # The type '{0}' may not be used for a field of a record.
dotnet_diagnostic.cs8909.severity = warning # Comparison of function pointers might yield an unexpected result, since pointers to the same function may be distinct.
dotnet_diagnostic.cs8910.severity = error # The primary constructor conflicts with the synthesized copy constructor.
dotnet_diagnostic.cs8911.severity = error # Using a function pointer type in this context is not supported.
dotnet_diagnostic.cs8912.severity = error # Inheriting from a record with a sealed 'Object.ToString' is not supported in C# {0}. Please use language version '{1}' or greater.
dotnet_diagnostic.cs8913.severity = error # The positional member '{0}' found corresponding to this parameter is hidden.
dotnet_diagnostic.cs8914.severity = error # A global using directive cannot be used in a namespace declaration.
dotnet_diagnostic.cs8915.severity = error # A global using directive must precede all non-global using directives.
dotnet_diagnostic.cs8916.severity = error # Attributes on lambda expressions require a parenthesized parameter list.
dotnet_diagnostic.cs8917.severity = error # The delegate type could not be inferred.
dotnet_diagnostic.cs8918.severity = error # Identifier or a simple member access expected.
dotnet_diagnostic.cs8919.severity = error # Target runtime doesn't support static abstract members in interfaces.
dotnet_diagnostic.cs8920.severity = error # The interface '{0}' cannot be used as type argument. Static member '{1}' does not have a most specific implementation in the interface.
dotnet_diagnostic.cs8921.severity = error # The parameter of a unary operator must be the containing type, or its type parameter constrained to it.
dotnet_diagnostic.cs8922.severity = error # The parameter type for ++ or -- operator must be the containing type, or its type parameter constrained to it.
dotnet_diagnostic.cs8923.severity = error # The return type for ++ or -- operator must either match the parameter type, or be derived from the parameter type, or be the containing type's type parameter constrained to it unless the parameter type is a different type parameter.
dotnet_diagnostic.cs8924.severity = error # One of the parameters of a binary operator must be the containing type, or its type parameter constrained to it.
dotnet_diagnostic.cs8925.severity = error # The first operand of an overloaded shift operator must have the same type as the containing type or its type parameter constrained to it
dotnet_diagnostic.cs8926.severity = error # A static virtual or abstract interface member can be accessed only on a type parameter.
dotnet_diagnostic.cs8927.severity = error # An expression tree may not contain an access of static virtual or abstract interface member
dotnet_diagnostic.cs8928.severity = error # '{0}' does not implement static interface member '{1}'. '{2}' cannot implement the interface member because it is not static.
dotnet_diagnostic.cs8929.severity = error # '{0}' cannot implement interface member '{1}' in type '{2}' because the target runtime doesn't support static abstract members in interfaces.
dotnet_diagnostic.cs8930.severity = error # Explicit implementation of a user-defined operator '{0}' must be declared static
dotnet_diagnostic.cs8931.severity = error # User-defined conversion in an interface must convert to or from a type parameter on the enclosing type constrained to the enclosing type
dotnet_diagnostic.cs8932.severity = error # 'UnmanagedCallersOnly' method '{0}' cannot implement interface member '{1}' in type '{2}'
dotnet_diagnostic.cs8933.severity = none # The using directive for '{0}' appeared previously as global using
dotnet_diagnostic.cs8934.severity = error # Cannot convert {0} to type '{1}' because the return type does not match the delegate return type
dotnet_diagnostic.cs8935.severity = error # The AsyncMethodBuilder attribute is disallowed on anonymous methods without an explicit return type.
dotnet_diagnostic.cs8936.severity = error # Feature '{0}' is not available in C# 10.0. Please use language version {1} or greater.
dotnet_diagnostic.cs8937.severity = error # At least one top-level statement must be non-empty.
dotnet_diagnostic.cs8938.severity = error # The #line directive value is missing or out of range
dotnet_diagnostic.cs8939.severity = error # The #line directive end position must be greater than or equal to the start position
dotnet_diagnostic.cs8940.severity = error # A generic task-like return type was expected, but the type '{0}' found in 'AsyncMethodBuilder' attribute was not suitable. It must be an unbound generic type of arity one, and its containing type (if any) must be non-generic.
dotnet_diagnostic.cs8941.severity = error # Interpolated string handler method '{0}' is malformed. It does not return 'void' or 'bool'.
dotnet_diagnostic.cs8942.severity = error # Interpolated string handler method '{0}' has inconsistent return type. Expected to return '{1}'.
dotnet_diagnostic.cs8943.severity = error # null is not a valid parameter name. To get access to the receiver of an instance method, use the empty string as the parameter name.
dotnet_diagnostic.cs8944.severity = error # '{0}' is not an instance method, the receiver cannot be an interpolated string handler argument.
dotnet_diagnostic.cs8945.severity = error # '{0}' is not a valid parameter name from '{1}'.
dotnet_diagnostic.cs8946.severity = error # '{0}' is not an interpolated string handler type.
dotnet_diagnostic.cs8947.severity = warning # Parameter '{0}' occurs after '{1}' in the parameter list, but is used as an argument for interpolated string handler conversions. This will require the caller to reorder parameters with named arguments at the call site. Consider putting the interpolated string handler parameter after all arguments involved.
dotnet_diagnostic.cs8948.severity = error # InterpolatedStringHandlerArgumentAttribute arguments cannot refer to the parameter the attribute is used on.
dotnet_diagnostic.cs8949.severity = error # The InterpolatedStringHandlerArgumentAttribute applied to parameter '{0}' is malformed and cannot be interpreted. Construct an instance of '{1}' manually.
dotnet_diagnostic.cs8950.severity = error # Parameter '{0}' is an argument to the interpolated string handler conversion on parameter '{1}', but the corresponding argument is specified after the interpolated string expression. Reorder the arguments to move '{0}' before '{1}'.
dotnet_diagnostic.cs8951.severity = error # Parameter '{0}' is not explicitly provided, but is used as an argument to the interpolated string handler conversion on parameter '{1}'. Specify the value of '{0}' before '{1}'.
dotnet_diagnostic.cs8952.severity = error # An expression tree may not contain an interpolated string handler conversion.
dotnet_diagnostic.cs8953.severity = error # An interpolated string handler construction cannot use dynamic. Manually construct an instance of '{0}'.
dotnet_diagnostic.cs8954.severity = error # Source file can only contain one file-scoped namespace declaration.
dotnet_diagnostic.cs8955.severity = error # Source file can not contain both file-scoped and normal namespace declarations.
dotnet_diagnostic.cs8956.severity = error # File-scoped namespace must precede all other members in a file.
dotnet_diagnostic.cs8957.severity = error # Conditional expression is not valid in language version {0} because a common type was not found between '{1}' and '{2}'. To use a target-typed conversion, upgrade to language version {3} or greater.
dotnet_diagnostic.cs8958.severity = error # The parameterless struct constructor must be 'public'.
dotnet_diagnostic.cs8959.severity = error # CallerArgumentExpressionAttribute cannot be applied because there are no standard conversions from type '{0}' to type '{1}'
dotnet_diagnostic.cs8960.severity = warning # The CallerArgumentExpressionAttribute applied to parameter '{0}' will have no effect. It is overridden by the CallerLineNumberAttribute.
dotnet_diagnostic.cs8961.severity = warning # The CallerArgumentExpressionAttribute applied to parameter '{0}' will have no effect. It is overridden by the CallerFilePathAttribute.
dotnet_diagnostic.cs8962.severity = warning # The CallerArgumentExpressionAttribute applied to parameter '{0}' will have no effect. It is overridden by the CallerMemberNameAttribute.
dotnet_diagnostic.cs8963.severity = warning # The CallerArgumentExpressionAttribute applied to parameter '{0}' will have no effect. It is applied with an invalid parameter name.
dotnet_diagnostic.cs8964.severity = error # The CallerArgumentExpressionAttribute may only be applied to parameters with default values
dotnet_diagnostic.cs8965.severity = warning # The CallerArgumentExpressionAttribute applied to parameter '{0}' will have no effect because it's self-referential.
dotnet_diagnostic.cs8966.severity = warning # The CallerArgumentExpressionAttribute applied to parameter '{0}' will have no effect because it applies to a member that is used in contexts that do not allow optional arguments
dotnet_diagnostic.cs8967.severity = error # Newlines inside a non-verbatim interpolated string are not supported in C# {0}. Please use language version {1} or greater.
dotnet_diagnostic.cs8968.severity = error # '{0}': an attribute type argument cannot use type parameters
dotnet_diagnostic.cs8970.severity = error # Type '{0}' cannot be used in this context because it cannot be represented in metadata.
dotnet_diagnostic.cs8971.severity = warning # InterpolatedStringHandlerArgument has no effect when applied to lambda parameters and will be ignored at the call site.
dotnet_diagnostic.cs8972.severity = error # A lambda expression with attributes cannot be converted to an expression tree
dotnet_diagnostic.cs8973.severity = warning # The operation may overflow '{0}' at runtime (use 'unchecked' syntax to override)
dotnet_diagnostic.cs8974.severity = warning # Converting method group '{0}' to non-delegate type '{1}'. Did you intend to invoke the method?
dotnet_diagnostic.cs8975.severity = error # The contextual keyword 'var' cannot be used as an explicit lambda return type
dotnet_diagnostic.cs8976.severity = error # Interpolated string handler conversions that reference the instance being indexed cannot be used in indexer member initializers.
dotnet_diagnostic.cs8977.severity = error # Cannot use 'ref', 'in', or 'out' in the signature of a method attributed with 'UnmanagedCallersOnly'.
dotnet_diagnostic.cs8978.severity = error # '{0}' cannot be made nullable.
dotnet_diagnostic.cs8979.severity = error # List patterns may not be used for a value of type '{0}'.
dotnet_diagnostic.cs8980.severity = error # Slice patterns may only be used once and directly inside a list pattern.
dotnet_diagnostic.cs8981.severity = warning # The type name '{0}' only contains lower-cased ascii characters. Such names may become reserved for the language.
dotnet_diagnostic.cs8982.severity = error # A constructor declared in a 'struct' with parameter list must have a 'this' initializer that calls the primary constructor or an explicitly declared constructor.
dotnet_diagnostic.cs8983.severity = error # A 'struct' with field initializers must include an explicitly declared constructor.
dotnet_diagnostic.cs8985.severity = error # List patterns may not be used for a value of type '{0}'. No suitable 'Length' or 'Count' property was found.
dotnet_diagnostic.cs8986.severity = error # The 'scoped' modifier of parameter '{0}' doesn't match target '{1}'.
dotnet_diagnostic.cs8987.severity = error # The 'scoped' modifier of parameter '{0}' doesn't match overridden or implemented member.
dotnet_diagnostic.cs8988.severity = error # The 'scoped' modifier of parameter '{0}' doesn't match partial method declaration.
dotnet_diagnostic.cs8989.severity = error # The 'parameter null-checking' feature is not supported.
dotnet_diagnostic.cs8996.severity = error # Raw string literals are not allowed in preprocessor directives.
dotnet_diagnostic.cs8997.severity = error # Unterminated raw string literal.
dotnet_diagnostic.cs8998.severity = error # The raw string literal does not start with enough quote characters to allow this many consecutive quote characters as content.
dotnet_diagnostic.cs8999.severity = error # Line does not start with the same whitespace as the closing line of the raw string literal.
dotnet_diagnostic.cs9000.severity = error # Raw string literal delimiter must be on its own line.
dotnet_diagnostic.cs9001.severity = error # Multi-line raw string literals are only allowed in verbatim interpolated strings.
dotnet_diagnostic.cs9002.severity = error # Multi-line raw string literals must contain at least one line of content.
dotnet_diagnostic.cs9003.severity = error # Line contains different whitespace than the closing line of the raw string literal: '{0}' versus '{1}'
dotnet_diagnostic.cs9004.severity = error # Not enough quotes for raw string literal.
dotnet_diagnostic.cs9005.severity = error # The interpolation must end with the same number of closing braces as the number of '$' characters that the raw string literal started with.
dotnet_diagnostic.cs9006.severity = error # The interpolated raw string literal does not start with enough '$' characters to allow this many consecutive opening braces as content.
dotnet_diagnostic.cs9007.severity = error # The interpolated raw string literal does not start with enough '$' characters to allow this many consecutive closing braces as content.
dotnet_diagnostic.cs9008.severity = error # Sequence of '@' characters is not allowed. A verbatim string or identifier can only have one '@' character and a raw string cannot have any.
dotnet_diagnostic.cs9009.severity = error # String must start with quote character: "
dotnet_diagnostic.cs9010.severity = error # Keyword 'enum' cannot be used as a constraint. Did you mean 'struct, System.Enum'?
dotnet_diagnostic.cs9011.severity = error # Keyword 'delegate' cannot be used as a constraint. Did you mean 'System.Delegate'?
dotnet_diagnostic.cs9012.severity = error # Unexpected keyword 'record'. Did you mean 'record struct' or 'record class'?
dotnet_diagnostic.cs9013.severity = error # A string 'null' constant is not supported as a pattern for '{0}'. Use an empty string instead.
dotnet_diagnostic.cs9014.severity = error # Use of possibly unassigned auto-implemented property '{0}'. Consider updating to language version '{1}' to auto-default the property.
dotnet_diagnostic.cs9015.severity = error # Use of possibly unassigned field '{0}'. Consider updating to language version '{1}' to auto-default the field.
dotnet_diagnostic.cs9016.severity = warning # Use of possibly unassigned auto-implemented property '{0}'. Consider updating to language version '{1}' to auto-default the property.
dotnet_diagnostic.cs9017.severity = warning # Use of possibly unassigned field '{0}'. Consider updating to language version '{1}' to auto-default the field.
dotnet_diagnostic.cs9018.severity = none # Auto-implemented property '{0}' is read before being explicitly assigned, causing a preceding implicit assignment of 'default'.
dotnet_diagnostic.cs9019.severity = warning # Field '{0}' is read before being explicitly assigned, causing a preceding implicit assignment of 'default'.
dotnet_diagnostic.cs9020.severity = warning # The 'this' object is read before all of its fields have been assigned, causing preceding implicit assignments of 'default' to non-explicitly assigned fields.
dotnet_diagnostic.cs9021.severity = none # Control is returned to caller before auto-implemented property '{0}' is explicitly assigned, causing a preceding implicit assignment of 'default'.
dotnet_diagnostic.cs9022.severity = warning # Control is returned to caller before field '{0}' is explicitly assigned, causing a preceding implicit assignment of 'default'.
dotnet_diagnostic.cs9023.severity = error # User-defined operator '{0}' cannot be declared checked
dotnet_diagnostic.cs9024.severity = error # An 'implicit' user-defined conversion operator cannot be declared checked
dotnet_diagnostic.cs9025.severity = error # The operator '{0}' requires a matching non-checked version of the operator to also be defined
dotnet_diagnostic.cs9026.severity = error # The input string cannot be converted into the equivalent UTF-8 byte representation. {0}
dotnet_diagnostic.cs9027.severity = error # Unexpected keyword 'unchecked'
dotnet_diagnostic.cs9028.severity = error # The #line span directive requires space before the first parenthesis, before the character offset, and before the file name
dotnet_diagnostic.cs9029.severity = error # Types and aliases cannot be named 'required'.
dotnet_diagnostic.cs9030.severity = error # '{0}' must be required because it overrides required member '{1}'
dotnet_diagnostic.cs9031.severity = error # Required member '{0}' cannot be hidden by '{1}'.
dotnet_diagnostic.cs9032.severity = error # Required member '{0}' cannot be less visible or have a setter less visible than the containing type '{1}'.
dotnet_diagnostic.cs9033.severity = error # Do not use 'System.Runtime.CompilerServices.RequiredMemberAttribute'. Use the 'required' keyword on required fields and properties instead.
dotnet_diagnostic.cs9034.severity = error # Required member '{0}' must be settable.
dotnet_diagnostic.cs9035.severity = error # Required member '{0}' must be set in the object initializer or attribute constructor.
dotnet_diagnostic.cs9036.severity = error # Required member '{0}' must be assigned a value, it cannot use a nested member or collection initializer.
dotnet_diagnostic.cs9037.severity = error # The required members list for '{0}' is malformed and cannot be interpreted.
dotnet_diagnostic.cs9038.severity = error # The required members list for the base type '{0}' is malformed and cannot be interpreted. To use this constructor, apply the 'SetsRequiredMembers' attribute.
dotnet_diagnostic.cs9039.severity = error # This constructor must add 'SetsRequiredMembers' because it chains to a constructor that has that attribute.
dotnet_diagnostic.cs9040.severity = error # '{2}' cannot satisfy the 'new()' constraint on parameter '{1}' in the generic type or or method '{0}' because '{2}' has required members.
dotnet_diagnostic.cs9041.severity = error # '{0}' requires compiler feature '{1}', which is not supported by this version of the C# compiler.
dotnet_diagnostic.cs9042.severity = warning # Required member '{0}' should not be attributed with 'ObsoleteAttribute' unless the containing type is obsolete or all constructors are obsolete.
dotnet_diagnostic.cs9043.severity = error # Ref returning properties cannot be required.
dotnet_diagnostic.cs9044.severity = error # '{0}' does not implement interface member '{1}'. '{2}' cannot implicitly implement an inaccessible member.
dotnet_diagnostic.cs9045.severity = error # Required members are not allowed on the top level of a script or submission.
dotnet_diagnostic.cs9046.severity = error # One of the parameters of an equality, or inequality operator declared in interface '{0}' must be a type parameter on '{0}' constrained to '{0}'
dotnet_diagnostic.cs9047.severity = error # Operator '{0}' cannot be applied to operands of type '{1}' and '{2}' that are not UTF-8 byte representations
dotnet_diagnostic.cs9048.severity = error # The 'scoped' modifier can be used for refs and ref struct values only.
dotnet_diagnostic.cs9049.severity = error # A fixed field must not be a ref field.
dotnet_diagnostic.cs9050.severity = error # A ref field cannot refer to a ref struct.
dotnet_diagnostic.cs9051.severity = error # File-local type '{0}' cannot be used in a member signature in non-file-local type '{1}'.
dotnet_diagnostic.cs9052.severity = error # File-local type '{0}' cannot use accessibility modifiers.
dotnet_diagnostic.cs9053.severity = error # File-local type '{0}' cannot be used as a base type of non-file-local type '{1}'.
dotnet_diagnostic.cs9054.severity = error # File-local type '{0}' must be defined in a top level type; '{0}' is a nested type.
dotnet_diagnostic.cs9055.severity = error # File-local type '{0}' cannot be used in a 'global using static' directive.
dotnet_diagnostic.cs9056.severity = error # Types and aliases cannot be named 'file'.
dotnet_diagnostic.cs9057.severity = warning # The analyzer assembly '{0}' references version '{1}' of the compiler, which is newer than the currently running version '{2}'.
dotnet_diagnostic.cs9058.severity = error # Feature '{0}' is not available in C# 11.0. Please use language version {1} or greater.
dotnet_diagnostic.cs9059.severity = error # A ref field can only be declared in a ref struct.
dotnet_diagnostic.cs9060.severity = error # Cannot use a numeric constant or relational pattern on '{0}' because it inherits from or extends 'INumberBase<T>'. Consider using a type pattern to narrow to a specifc numeric type.
dotnet_diagnostic.cs9061.severity = error # The 'scoped' modifier cannot be used with discard.
dotnet_diagnostic.cs9062.severity = error # Types and aliases cannot be named 'scoped'.
dotnet_diagnostic.cs9063.severity = error # UnscopedRefAttribute cannot be applied to this parameter because it is unscoped by default.
dotnet_diagnostic.cs9064.severity = error # Target runtime doesn't support ref fields.
dotnet_diagnostic.cs9065.severity = error # Do not use 'System.Runtime.CompilerServices.ScopedRefAttribute'. Use the 'scoped' keyword instead.
dotnet_diagnostic.cs9066.severity = error # UnscopedRefAttribute cannot be applied to parameters that have a 'scoped' modifier.
dotnet_diagnostic.cs9067.severity = warning # Analyzer reference '{0}' specified multiple times
dotnet_diagnostic.cs9068.severity = error # File-local type '{0}' must be declared in a file with a unique path. Path '{1}' is used in multiple files.
dotnet_diagnostic.cs9069.severity = error # File-local type '{0}' cannot be used because the containing file path cannot be converted into the equivalent UTF-8 byte representation. {1}
dotnet_diagnostic.cs9071.severity = error # The namespace '{1}' already contains a definition for '{0}' in this file.
dotnet_diagnostic.cs9072.severity = error # A deconstruction variable cannot be declared as a ref local
dotnet_diagnostic.cs9073.severity = warning # The 'scoped' modifier of parameter '{0}' doesn't match target '{1}'.
dotnet_diagnostic.cs9074.severity = warning # The 'scoped' modifier of parameter '{0}' doesn't match overridden or implemented member.
dotnet_diagnostic.cs9075.severity = error # Cannot return a parameter by reference '{0}' because it is scoped to the current method
dotnet_diagnostic.cs9076.severity = error # Cannot return by reference a member of parameter '{0}' because it is scoped to the current method
dotnet_diagnostic.cs9077.severity = error # Cannot return a parameter by reference '{0}' through a ref parameter; it can only be returned in a return statement
dotnet_diagnostic.cs9078.severity = error # Cannot return by reference a member of parameter '{0}' through a ref parameter; it can only be returned in a return statement
dotnet_diagnostic.cs9079.severity = error # Cannot ref-assign '{1}' to '{0}' because '{1}' can only escape the current method through a return statement.
dotnet_diagnostic.cs9080.severity = warning # Use of variable '{0}' in this context may expose referenced variables outside of their declaration scope
dotnet_diagnostic.cs9081.severity = warning # A result of a stackalloc expression of type '{0}' in this context may be exposed outside of the containing method
dotnet_diagnostic.cs9082.severity = warning # Local '{0}' is returned by reference but was initialized to a value that cannot be returned by reference
dotnet_diagnostic.cs9083.severity = warning # A member of '{0}' is returned by reference but was initialized to a value that cannot be returned by reference
dotnet_diagnostic.cs9084.severity = warning # Struct member returns 'this' or other instance members by reference
dotnet_diagnostic.cs9085.severity = warning # This ref-assigns '{1}' to '{0}' but '{1}' has a narrower escape scope than '{0}'.
dotnet_diagnostic.cs9086.severity = warning # The branches of the ref conditional operator refer to variables with incompatible declaration scopes
dotnet_diagnostic.cs9087.severity = warning # This returns a parameter by reference '{0}' but it is not a ref parameter
dotnet_diagnostic.cs9088.severity = warning # This returns a parameter by reference '{0}' but it is scoped to the current method
dotnet_diagnostic.cs9089.severity = warning # This returns by reference a member of parameter '{0}' that is not a ref or out parameter
dotnet_diagnostic.cs9090.severity = warning # This returns by reference a member of parameter '{0}' that is scoped to the current method
dotnet_diagnostic.cs9091.severity = warning # This returns local '{0}' by reference but it is not a ref local
dotnet_diagnostic.cs9092.severity = warning # This returns a member of local '{0}' by reference but it is not a ref local
dotnet_diagnostic.cs9093.severity = warning # This ref-assigns '{1}' to '{0}' but '{1}' can only escape the current method through a return statement.
dotnet_diagnostic.cs9094.severity = warning # This returns a parameter by reference '{0}' through a ref parameter; but it can only safely be returned in a return statement
dotnet_diagnostic.cs9095.severity = warning # This returns by reference a member of parameter '{0}' through a ref parameter; but it can only safely be returned in a return statement
dotnet_diagnostic.cs9096.severity = error # Cannot ref-assign '{1}' to '{0}' because '{1}' has a wider value escape scope than '{0}' allowing assignment through '{0}' of values with narrower escapes scopes than '{1}'.
dotnet_diagnostic.cs9097.severity = warning # This ref-assigns '{1}' to '{0}' but '{1}' has a wider value escape scope than '{0}' allowing assignment through '{0}' of values with narrower escapes scopes than '{1}'.
dotnet_diagnostic.cs9098.severity = error # Implicitly typed lambda parameter '{0}' cannot have a default value.
dotnet_diagnostic.cs9099.severity = warning # Parameter {0} has default value '{1:10}' in lambda but '{2:10}' in the target delegate type.
dotnet_diagnostic.cs9100.severity = warning # Parameter {0} has params modifier in lambda but not in target delegate type.
dotnet_diagnostic.cs9101.severity = error # UnscopedRefAttribute can only be applied to struct instance methods and properties, and cannot be applied to constructors or init-only members.
dotnet_diagnostic.cs9102.severity = error # UnscopedRefAttribute cannot be applied to an interface implementation.
dotnet_diagnostic.cs9103.severity = error # '{0}' is defined in a module with an unrecognized RefSafetyRulesAttribute version, expecting '11'.
dotnet_diagnostic.cs9104.severity = error # A using statement resource of type '{0}' cannot be used in async methods or async lambda expressions.
dotnet_diagnostic.cs9105.severity = error # Cannot use primary constructor parameter '{0}' in this context.
dotnet_diagnostic.cs9106.severity = error # Identifier '{0}' is ambiguous between type '{1}' and parameter '{2}' in this context.
dotnet_diagnostic.cs9107.severity = warning # Parameter '{0}' is captured into the state of the enclosing type and its value is also passed to the base constructor. The value might be captured by the base class as well.
dotnet_diagnostic.cs9108.severity = error # Cannot use parameter '{0}' that has ref-like type inside an anonymous method, lambda expression, query expression, or local function
dotnet_diagnostic.cs9109.severity = error # Cannot use ref, out, or in primary constructor parameter '{0}' inside an instance member
dotnet_diagnostic.cs9110.severity = error # Cannot use primary constructor parameter '{0}' that has ref-like type inside an instance member
dotnet_diagnostic.cs9111.severity = error # Anonymous methods, lambda expressions, query expressions, and local functions inside an instance member of a struct cannot access primary constructor parameter
dotnet_diagnostic.cs9112.severity = error # Anonymous methods, lambda expressions, query expressions, and local functions inside a struct cannot access primary constructor parameter also used inside an instance member
dotnet_diagnostic.cs9113.severity = warning # Parameter '{0}' is unread.
dotnet_diagnostic.cs9114.severity = error # A primary constructor parameter of a readonly type cannot be assigned to (except in init-only setter of the type or a variable initializer)
dotnet_diagnostic.cs9115.severity = error # A primary constructor parameter of a readonly type cannot be returned by writable reference
dotnet_diagnostic.cs9116.severity = error # A primary constructor parameter of a readonly type cannot be used as a ref or out value (except in init-only setter of the type or a variable initializer)
dotnet_diagnostic.cs9117.severity = error # Members of primary constructor parameter '{0}' of a readonly type cannot be modified (except in init-only setter of the type or a variable initializer)
dotnet_diagnostic.cs9118.severity = error # Members of primary constructor parameter '{0}' of a readonly type cannot be returned by writable reference
dotnet_diagnostic.cs9119.severity = error # Members of primary constructor parameter '{0}' of a readonly type cannot be used as a ref or out value (except in init-only setter of the type or a variable initializer)
dotnet_diagnostic.cs9120.severity = error # Cannot return primary constructor parameter '{0}' by reference.
dotnet_diagnostic.cs9121.severity = error # Struct primary constructor parameter '{0}' of type '{1}' causes a cycle in the struct layout
dotnet_diagnostic.cs9122.severity = error # Unexpected parameter list.
dotnet_diagnostic.cs9123.severity = warning # The '&' operator should not be used on parameters or local variables in async methods.
dotnet_diagnostic.cs9124.severity = warning # Parameter '{0}' is captured into the state of the enclosing type and its value is also used to initialize a field, property, or event.
dotnet_diagnostic.cs9125.severity = warning # Attribute parameter 'SizeConst' must be specified.
dotnet_diagnostic.cs9130.severity = error # Using alias cannot be a 'ref' type.
dotnet_diagnostic.cs9131.severity = error # Only a 'using static' or 'using alias' can be 'unsafe'.
dotnet_diagnostic.cs9132.severity = error # Using alias cannot be a nullable reference type.
dotnet_diagnostic.cs9133.severity = error # 'static' modifier must precede 'unsafe' modifier.
dotnet_diagnostic.cs9134.severity = error # A switch expression arm does not begin with a 'case' keyword.
dotnet_diagnostic.cs9135.severity = error # A constant value of type '{0}' is expected
dotnet_diagnostic.cs9136.severity = error # Cannot use primary constructor parameter of type '{0}' inside an instance member
dotnet_diagnostic.cs9137.severity = error # The 'interceptors' experimental feature is not enabled in this namespace. Add '{0}' to your project.
dotnet_diagnostic.cs9138.severity = error # Method '{0}' cannot be used as an interceptor because its containing type has type parameters.
dotnet_diagnostic.cs9139.severity = error # Cannot intercept: compilation does not contain a file with path '{0}'.
dotnet_diagnostic.cs9140.severity = error # Cannot intercept: compilation does not contain a file with path '{0}'. Did you mean to use path '{1}'?
dotnet_diagnostic.cs9141.severity = error # The provided line and character number does not refer to an interceptable method name, but rather to token '{0}'.
dotnet_diagnostic.cs9142.severity = error # The given file has '{0}' lines, which is fewer than the provided line number '{1}'.
dotnet_diagnostic.cs9143.severity = error # The given line is '{0}' characters long, which is fewer than the provided character number '{1}'.
dotnet_diagnostic.cs9144.severity = error # Cannot intercept method '{0}' with interceptor '{1}' because the signatures do not match.
dotnet_diagnostic.cs9146.severity = error # An interceptor method must be an ordinary member method.
dotnet_diagnostic.cs9147.severity = error # The provided line and character number does not refer to the start of token '{0}'. Did you mean to use line '{1}' and character '{2}'?
dotnet_diagnostic.cs9148.severity = error # Interceptor must have a 'this' parameter matching parameter '{0}' on '{1}'.
dotnet_diagnostic.cs9149.severity = error # Interceptor must not have a 'this' parameter because '{0}' does not have a 'this' parameter.
dotnet_diagnostic.cs9150.severity = error # Interceptor cannot have a 'null' file path.
dotnet_diagnostic.cs9151.severity = error # Possible method name '{0}' cannot be intercepted because it is not being invoked.
dotnet_diagnostic.cs9152.severity = error # Cannot intercept a call in file with path '{0}' because multiple files in the compilation have this path.
dotnet_diagnostic.cs9153.severity = error # The indicated call is intercepted multiple times.
dotnet_diagnostic.cs9154.severity = warning # Intercepting a call to '{0}' with interceptor '{1}', but the signatures do not match.
dotnet_diagnostic.cs9155.severity = error # Cannot intercept call with '{0}' because it is not accessible within '{1}'.
dotnet_diagnostic.cs9156.severity = error # Cannot intercept call to '{0}' with '{1}' because of a difference in 'scoped' modifiers or '[UnscopedRef]' attributes.
dotnet_diagnostic.cs9157.severity = error # Line and character numbers provided to InterceptsLocationAttribute must be positive.
dotnet_diagnostic.cs9158.severity = warning # Nullability of reference types in return type doesn't match interceptable method '{0}'.
dotnet_diagnostic.cs9159.severity = warning # Nullability of reference types in type of parameter '{0}' doesn't match interceptable method '{1}'.
dotnet_diagnostic.cs9160.severity = error # A nameof operator cannot be intercepted.
dotnet_diagnostic.cs9161.severity = error # An interceptor cannot be marked with 'UnmanagedCallersOnlyAttribute'.
dotnet_diagnostic.cs9162.severity = error # '{0}' type is not valid for 'using static'. Only a class, struct, interface, enum, delegate, or namespace can be used.
dotnet_diagnostic.cs9163.severity = error # '{0}' is defined in assembly '{1}'.
dotnet_diagnostic.cs9164.severity = error # Cannot convert expression to '{0}' because it is not an assignable variable
dotnet_diagnostic.cs9165.severity = error # Cannot convert expression to '{0}' because it may not be passed or returned by reference
dotnet_diagnostic.cs9166.severity = error # Index is outside the bounds of the inline array
dotnet_diagnostic.cs9167.severity = error # Inline array length must be greater than 0.
dotnet_diagnostic.cs9168.severity = error # Inline array struct must not have explicit layout.
dotnet_diagnostic.cs9169.severity = error # Inline array struct must declare one and only one instance field.
dotnet_diagnostic.cs9170.severity = error # An expression tree may not contain an inline array access or conversion
dotnet_diagnostic.cs9171.severity = error # Target runtime doesn't support inline array types.
dotnet_diagnostic.cs9172.severity = error # Elements of an inline array type can be accessed only with a single argument implicitly convertible to 'int', 'System.Index', or 'System.Range'.
dotnet_diagnostic.cs9173.severity = error # An inline array access may not have a named argument specifier
dotnet_diagnostic.cs9174.severity = error # Cannot initialize type '{0}' with a collection expression because the type is not constructible.
dotnet_diagnostic.cs9175.severity = error # An expression tree may not contain a collection expression.
dotnet_diagnostic.cs9176.severity = error # There is no target type for the collection expression.
dotnet_diagnostic.cs9177.severity = error # Method '{0}' must be non-generic or have arity {1} to match '{2}'.
dotnet_diagnostic.cs9178.severity = error # Method '{0}' must be non-generic to match '{1}'.
dotnet_diagnostic.cs9179.severity = warning # Primary constructor parameter '{0}' is shadowed by a member from base.
dotnet_diagnostic.cs9180.severity = error # Inline array element field cannot be declared as required, readonly, volatile, or as a fixed size buffer.
dotnet_diagnostic.cs9181.severity = warning # Inline array indexer will not be used for element access expression.
dotnet_diagnostic.cs9182.severity = warning # Inline array 'Slice' method will not be used for element access expression.
dotnet_diagnostic.cs9183.severity = warning # Inline array conversion operator will not be used for conversion from expression of the declaring type.
dotnet_diagnostic.cs9184.severity = warning # 'Inline arrays' language feature is not supported for an inline array type that is not valid as a type argument, or has element type that is not valid as a type argument.
dotnet_diagnostic.cs9185.severity = error # The CollectionBuilderAttribute builder type must be a non-generic class or struct.
dotnet_diagnostic.cs9186.severity = error # The CollectionBuilderAttribute method name is invalid.
dotnet_diagnostic.cs9187.severity = error # Could not find an accessible '{0}' method with the expected signature: a static method with a single parameter of type 'ReadOnlySpan<{1}>' and return type '{2}'.
dotnet_diagnostic.cs9188.severity = error # '{0}' has a CollectionBuilderAttribute but no element type.
dotnet_diagnostic.cs9189.severity = error # foreach statement on an inline array of type '{0}' is not supported
dotnet_diagnostic.cs9190.severity = error # 'readonly' modifier must be specified after 'ref'.
dotnet_diagnostic.cs9191.severity = warning # The 'ref' modifier for argument {0} corresponding to 'in' parameter is equivalent to 'in'. Consider using 'in' instead.
dotnet_diagnostic.cs9192.severity = warning # Argument {0} should be passed with 'ref' or 'in' keyword
dotnet_diagnostic.cs9193.severity = warning # Argument {0} should be a variable because it is passed to a 'ref readonly' parameter
dotnet_diagnostic.cs9194.severity = error # Argument {0} may not be passed with the 'ref' keyword in language version {1}. To pass 'ref' arguments to 'in' parameters, upgrade to language version {2} or greater.
dotnet_diagnostic.cs9195.severity = warning # Argument {0} should be passed with the 'in' keyword
dotnet_diagnostic.cs9196.severity = warning # Reference kind modifier of parameter '{0}' doesn't match the corresponding parameter '{1}' in overridden or implemented member.
dotnet_diagnostic.cs9197.severity = warning # Reference kind modifier of parameter '{0}' doesn't match the corresponding parameter '{1}' in hidden member.
dotnet_diagnostic.cs9198.severity = warning # Reference kind modifier of parameter '{0}' doesn't match the corresponding parameter '{1}' in target.
dotnet_diagnostic.cs9199.severity = error # A ref readonly parameter cannot have the Out attribute.
dotnet_diagnostic.cs9200.severity = warning # A default value is specified for 'ref readonly' parameter '{0}', but 'ref readonly' should be used only for references. Consider declaring the parameter as 'in'.
dotnet_diagnostic.cs9201.severity = warning # Ref field '{0}' should be ref-assigned before use.
dotnet_diagnostic.cs9202.severity = error # Feature '{0}' is not available in C# 12.0. Please use language version {1} or greater.
dotnet_diagnostic.cs9203.severity = error # A collection expression of type '{0}' cannot be used in this context because it may be exposed outside of the current scope.
dotnet_diagnostic.cs9204.severity = warning # '{0}' is for evaluation purposes only and is subject to change or removal in future updates. Suppress this diagnostic to proceed.
dotnet_diagnostic.cs9205.severity = error # Expected interpolated string
dotnet_diagnostic.cs9206.severity = error # An interceptor cannot be declared in the global namespace.
dotnet_diagnostic.cs9207.severity = error # Cannot intercept '{0}' because it is not an invocation of an ordinary member method.
dotnet_diagnostic.cs9208.severity = warning # Collection expression of type '{0}' may incur unexpected heap allocations. Consider explicitly creating an array, then converting to '{0}' to make the allocation explicit.
dotnet_diagnostic.cs9209.severity = warning # Collection expression of type '{0}' may incur unexpected heap allocations due to the use of '..' spreads. Consider explicitly creating an array, then converting to '{0}' to make the allocation explicit.
dotnet_diagnostic.cs9210.severity = error # This version of '{0}' cannot be used with collection expressions.
dotnet_diagnostic.cs9211.severity = error # The diagnosticId argument to the 'Experimental' attribute must be a valid identifier
dotnet_diagnostic.cs9212.severity = error # Spread operator '..' cannot operate on variables of type '{0}' because '{0}' does not contain a public instance or extension definition for '{1}'
dotnet_diagnostic.cs9213.severity = error # Collection expression target '{0}' has no element type.
dotnet_diagnostic.cs9214.severity = error # Collection expression type must have an applicable constructor that can be called with no arguments.
dotnet_diagnostic.cs9215.severity = error # Collection expression type '{0}' must have an instance or extension method 'Add' that can be called with a single argument.
dotnet_diagnostic.cs9216.severity = warning # A value of type 'System.Threading.Lock' converted to a different type will use likely unintended monitor-based locking in 'lock' statement.
dotnet_diagnostic.cs9217.severity = error # A lock statement on a value of type 'System.Threading.Lock' cannot be used in async methods or async lambda expressions.
dotnet_diagnostic.cs9218.severity = error # The type arguments for method '{0}' cannot be inferred from the usage because an argument with dynamic type is used and the method has a non-array params collection parameter. Try specifying the type arguments explicitly.
dotnet_diagnostic.cs9219.severity = error # Ambiguity between expanded and normal forms of non-array params collection parameter of '{0}', the only corresponding argument has the type 'dynamic'. Consider casting the dynamic argument.
dotnet_diagnostic.cs9220.severity = warning # One or more overloads of method '{0}' having non-array params collection parameter might be applicable only in expanded form which is not supported during dynamic dispatch.
dotnet_diagnostic.cs9221.severity = warning # One or more indexer overloads having non-array params collection parameter might be applicable only in expanded form which is not supported during dynamic dispatch.
dotnet_diagnostic.cs9222.severity = warning # One or more constructor overloads having non-array params collection parameter might be applicable only in expanded form which is not supported during dynamic dispatch.
dotnet_diagnostic.cs9223.severity = error # Creation of params collection '{0}' results in an infinite chain of invocation of constructor '{1}'.
dotnet_diagnostic.cs9224.severity = error # Method '{0}' cannot be less visible than the member with params collection '{1}'.
dotnet_diagnostic.cs9225.severity = error # Constructor '{0}' leaves required member '{1}' uninitialized.
dotnet_diagnostic.cs9226.severity = error # An expression tree may not contain an expanded form of non-array params collection parameter.
dotnet_diagnostic.cs9227.severity = error # '{0}' does not contain a definition for a suitable instance 'Add' method
dotnet_diagnostic.cs9228.severity = error # Non-array params collection type must have an applicable constructor that can be called with no arguments.
dotnet_diagnostic.cs9229.severity = error # Modifiers cannot be placed on using declarations
dotnet_diagnostic.cs9230.severity = error # Cannot perform a dynamic invocation on an expression with type '{0}'.

# naming rules
dotnet_naming_rule.constants_rule.import_to_resharper = as_predefined
dotnet_naming_rule.constants_rule.severity = none
dotnet_naming_rule.constants_rule.style = all_upper_style
dotnet_naming_rule.constants_rule.symbols = constants_symbols
dotnet_naming_rule.event_rule.import_to_resharper = as_predefined
dotnet_naming_rule.event_rule.resharper_style = AaBb_aaBb
dotnet_naming_rule.event_rule.severity = none
dotnet_naming_rule.event_rule.style = upper_camel_case_underscore_tolerant_style
dotnet_naming_rule.event_rule.symbols = event_symbols
dotnet_naming_rule.interfaces_rule.import_to_resharper = as_predefined
dotnet_naming_rule.interfaces_rule.resharper_style = I + AaBb_aaBb
dotnet_naming_rule.interfaces_rule.severity = none
dotnet_naming_rule.interfaces_rule.style = i_upper_camel_case_underscore_tolerant_style
dotnet_naming_rule.interfaces_rule.symbols = interfaces_symbols
dotnet_naming_rule.locals_rule.import_to_resharper = as_predefined
dotnet_naming_rule.locals_rule.resharper_style = aaBb_aaBb
dotnet_naming_rule.locals_rule.severity = none
dotnet_naming_rule.locals_rule.style = lower_camel_case_underscore_tolerant_style
dotnet_naming_rule.locals_rule.symbols = locals_symbols
dotnet_naming_rule.local_constants_rule.import_to_resharper = as_predefined
dotnet_naming_rule.local_constants_rule.severity = none
dotnet_naming_rule.local_constants_rule.style = all_upper_style
dotnet_naming_rule.local_constants_rule.symbols = local_constants_symbols
dotnet_naming_rule.local_functions_rule.import_to_resharper = as_predefined
dotnet_naming_rule.local_functions_rule.resharper_style = AaBb_aaBb
dotnet_naming_rule.local_functions_rule.severity = none
dotnet_naming_rule.local_functions_rule.style = upper_camel_case_underscore_tolerant_style
dotnet_naming_rule.local_functions_rule.symbols = local_functions_symbols
dotnet_naming_rule.method_rule.import_to_resharper = as_predefined
dotnet_naming_rule.method_rule.resharper_style = AaBb_aaBb
dotnet_naming_rule.method_rule.severity = none
dotnet_naming_rule.method_rule.style = upper_camel_case_underscore_tolerant_style
dotnet_naming_rule.method_rule.symbols = method_symbols
dotnet_naming_rule.parameters_rule.import_to_resharper = as_predefined
dotnet_naming_rule.parameters_rule.resharper_style = aaBb_aaBb
dotnet_naming_rule.parameters_rule.severity = none
dotnet_naming_rule.parameters_rule.style = lower_camel_case_underscore_tolerant_style
dotnet_naming_rule.parameters_rule.symbols = parameters_symbols
dotnet_naming_rule.private_constants_rule.import_to_resharper = as_predefined
dotnet_naming_rule.private_constants_rule.severity = none
dotnet_naming_rule.private_constants_rule.style = all_upper_style
dotnet_naming_rule.private_constants_rule.symbols = private_constants_symbols
dotnet_naming_rule.private_instance_fields_rule.import_to_resharper = as_predefined
dotnet_naming_rule.private_instance_fields_rule.resharper_style = AaBb_aaBb
dotnet_naming_rule.private_instance_fields_rule.severity = none
dotnet_naming_rule.private_instance_fields_rule.style = upper_camel_case_underscore_tolerant_style
dotnet_naming_rule.private_instance_fields_rule.symbols = private_instance_fields_symbols
dotnet_naming_rule.private_static_fields_rule.import_to_resharper = as_predefined
dotnet_naming_rule.private_static_fields_rule.resharper_style = AaBb_aaBb
dotnet_naming_rule.private_static_fields_rule.severity = none
dotnet_naming_rule.private_static_fields_rule.style = upper_camel_case_underscore_tolerant_style
dotnet_naming_rule.private_static_fields_rule.symbols = private_static_fields_symbols
dotnet_naming_rule.private_static_readonly_rule.import_to_resharper = as_predefined
dotnet_naming_rule.private_static_readonly_rule.resharper_style = AaBb_aaBb
dotnet_naming_rule.private_static_readonly_rule.severity = none
dotnet_naming_rule.private_static_readonly_rule.style = upper_camel_case_underscore_tolerant_style
dotnet_naming_rule.private_static_readonly_rule.symbols = private_static_readonly_symbols
dotnet_naming_rule.property_rule.import_to_resharper = as_predefined
dotnet_naming_rule.property_rule.resharper_style = AaBb_aaBb
dotnet_naming_rule.property_rule.severity = none
dotnet_naming_rule.property_rule.style = upper_camel_case_underscore_tolerant_style
dotnet_naming_rule.property_rule.symbols = property_symbols
dotnet_naming_rule.public_fields_rule.import_to_resharper = as_predefined
dotnet_naming_rule.public_fields_rule.resharper_style = AaBb_aaBb
dotnet_naming_rule.public_fields_rule.severity = none
dotnet_naming_rule.public_fields_rule.style = upper_camel_case_underscore_tolerant_style
dotnet_naming_rule.public_fields_rule.symbols = public_fields_symbols
dotnet_naming_rule.static_readonly_rule.import_to_resharper = as_predefined
dotnet_naming_rule.static_readonly_rule.resharper_style = AaBb_aaBb
dotnet_naming_rule.static_readonly_rule.severity = none
dotnet_naming_rule.static_readonly_rule.style = upper_camel_case_underscore_tolerant_style
dotnet_naming_rule.static_readonly_rule.symbols = static_readonly_symbols
dotnet_naming_rule.types_and_namespaces_rule.import_to_resharper = as_predefined
dotnet_naming_rule.types_and_namespaces_rule.resharper_style = AaBb_aaBb
dotnet_naming_rule.types_and_namespaces_rule.severity = none
dotnet_naming_rule.types_and_namespaces_rule.style = upper_camel_case_underscore_tolerant_style
dotnet_naming_rule.types_and_namespaces_rule.symbols = types_and_namespaces_symbols
dotnet_naming_rule.type_parameters_rule.import_to_resharper = as_predefined
dotnet_naming_rule.type_parameters_rule.resharper_style = T + AaBb_aaBb
dotnet_naming_rule.type_parameters_rule.severity = none
dotnet_naming_rule.type_parameters_rule.style = t_upper_camel_case_underscore_tolerant_style
dotnet_naming_rule.type_parameters_rule.symbols = type_parameters_symbols
dotnet_naming_style.all_upper_style.capitalization = all_upper
dotnet_naming_style.all_upper_style.word_separator = _
dotnet_naming_style.i_upper_camel_case_underscore_tolerant_style.capitalization = first_word_upper
dotnet_naming_style.i_upper_camel_case_underscore_tolerant_style.required_prefix = I
dotnet_naming_style.i_upper_camel_case_underscore_tolerant_style.word_separator = _
dotnet_naming_style.lower_camel_case_style.capitalization = camel_case
dotnet_naming_style.lower_camel_case_underscore_tolerant_style.capitalization = camel_case
dotnet_naming_style.lower_camel_case_underscore_tolerant_style.word_separator = _
dotnet_naming_style.t_upper_camel_case_underscore_tolerant_style.capitalization = first_word_upper
dotnet_naming_style.t_upper_camel_case_underscore_tolerant_style.required_prefix = T
dotnet_naming_style.t_upper_camel_case_underscore_tolerant_style.word_separator = _
dotnet_naming_style.upper_camel_case_underscore_tolerant_style.capitalization = first_word_upper
dotnet_naming_style.upper_camel_case_underscore_tolerant_style.word_separator = _
dotnet_naming_symbols.constants_symbols.applicable_accessibilities = public, internal, protected, protected_internal, private_protected
dotnet_naming_symbols.constants_symbols.applicable_kinds = field
dotnet_naming_symbols.constants_symbols.required_modifiers = const
dotnet_naming_symbols.event_symbols.applicable_accessibilities = *
dotnet_naming_symbols.event_symbols.applicable_kinds = event
dotnet_naming_symbols.interfaces_symbols.applicable_accessibilities = *
dotnet_naming_symbols.interfaces_symbols.applicable_kinds = interface
dotnet_naming_symbols.locals_symbols.applicable_accessibilities = *
dotnet_naming_symbols.locals_symbols.applicable_kinds = local
dotnet_naming_symbols.local_constants_symbols.applicable_accessibilities = *
dotnet_naming_symbols.local_constants_symbols.applicable_kinds = local
dotnet_naming_symbols.local_constants_symbols.required_modifiers = const
dotnet_naming_symbols.local_functions_symbols.applicable_accessibilities = *
dotnet_naming_symbols.local_functions_symbols.applicable_kinds = local_function
dotnet_naming_symbols.method_symbols.applicable_accessibilities = *
dotnet_naming_symbols.method_symbols.applicable_kinds = method
dotnet_naming_symbols.parameters_symbols.applicable_accessibilities = *
dotnet_naming_symbols.parameters_symbols.applicable_kinds = parameter
dotnet_naming_symbols.private_constants_symbols.applicable_accessibilities = private
dotnet_naming_symbols.private_constants_symbols.applicable_kinds = field
dotnet_naming_symbols.private_constants_symbols.required_modifiers = const
dotnet_naming_symbols.private_instance_fields_symbols.applicable_accessibilities = private
dotnet_naming_symbols.private_instance_fields_symbols.applicable_kinds = field
dotnet_naming_symbols.private_static_fields_symbols.applicable_accessibilities = private
dotnet_naming_symbols.private_static_fields_symbols.applicable_kinds = field
dotnet_naming_symbols.private_static_fields_symbols.required_modifiers = static
dotnet_naming_symbols.private_static_readonly_symbols.applicable_accessibilities = private
dotnet_naming_symbols.private_static_readonly_symbols.applicable_kinds = field
dotnet_naming_symbols.private_static_readonly_symbols.required_modifiers = static, readonly
dotnet_naming_symbols.property_symbols.applicable_accessibilities = *
dotnet_naming_symbols.property_symbols.applicable_kinds = property
dotnet_naming_symbols.public_fields_symbols.applicable_accessibilities = public, internal, protected, protected_internal, private_protected
dotnet_naming_symbols.public_fields_symbols.applicable_kinds = field
dotnet_naming_symbols.static_readonly_symbols.applicable_accessibilities = public, internal, protected, protected_internal, private_protected
dotnet_naming_symbols.static_readonly_symbols.applicable_kinds = field
dotnet_naming_symbols.static_readonly_symbols.required_modifiers = static, readonly
dotnet_naming_symbols.types_and_namespaces_symbols.applicable_accessibilities = *
dotnet_naming_symbols.types_and_namespaces_symbols.applicable_kinds = namespace, class, struct, enum, delegate
dotnet_naming_symbols.type_parameters_symbols.applicable_accessibilities = *
dotnet_naming_symbols.type_parameters_symbols.applicable_kinds = type_parameter
dotnet_naming_symbols.unity_serialized_field_symbols.applicable_accessibilities = *
dotnet_naming_symbols.unity_serialized_field_symbols.applicable_kinds =
dotnet_naming_symbols.unity_serialized_field_symbols.resharper_applicable_kinds = unity_serialised_field
dotnet_naming_symbols.unity_serialized_field_symbols.resharper_required_modifiers = instance
dotnet_separate_import_directive_groups = false
dotnet_sort_system_directives_first = true
dotnet_style_parentheses_in_arithmetic_binary_operators = never_if_unnecessary:none
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:none
dotnet_style_parentheses_in_relational_binary_operators = never_if_unnecessary:none
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
dotnet_style_predefined_type_for_member_access = true:suggestion
dotnet_style_qualification_for_event = false:suggestion
dotnet_style_qualification_for_field = false:suggestion
dotnet_style_qualification_for_method = false:suggestion
dotnet_style_qualification_for_property = false:suggestion
dotnet_style_require_accessibility_modifiers = for_non_interface_members:suggestion

# ReSharper properties
resharper_accessor_owner_body = expression_body
resharper_alignment_tab_fill_style = use_spaces
resharper_align_first_arg_by_paren = false
resharper_align_linq_query = true
resharper_align_multiline_argument = true
resharper_align_multiline_array_and_object_initializer = false
resharper_align_multiline_array_initializer = true
resharper_align_multiline_binary_patterns = true
resharper_align_multiline_calls_chain = true
resharper_align_multiline_ctor_init = true
resharper_align_multiline_expression_braces = false
resharper_align_multiline_extends_list = true
resharper_align_multiline_implements_list = true
resharper_align_multiline_list_pattern = false
resharper_align_multiline_parameter = true
resharper_align_multiline_property_pattern = false
resharper_align_multiline_statement_conditions = true
resharper_align_multiline_switch_expression = true
resharper_align_multiline_type_argument = true
resharper_align_multiline_type_parameter = true
resharper_align_multiple_declaration = true
resharper_align_multline_type_parameter_constrains = true
resharper_align_multline_type_parameter_list = false
resharper_align_ternary = align_not_nested
resharper_align_tuple_components = false
resharper_allow_alias = true
resharper_allow_comment_after_lbrace = true
resharper_allow_high_precedence_app_parens = true
resharper_always_use_end_of_line_brace_style = false
resharper_apply_auto_detected_rules = true
resharper_apply_on_completion = false
resharper_arguments_anonymous_function = positional
resharper_arguments_literal = positional
resharper_arguments_named = positional
resharper_arguments_other = positional
resharper_arguments_skip_single = false
resharper_arguments_string_literal = positional
resharper_attribute_style = do_not_touch
resharper_autodetect_indent_settings = true
resharper_blank_lines_after_access_specifier = 0
resharper_blank_lines_after_block_statements = 1
resharper_blank_lines_after_case = 0
resharper_blank_lines_after_control_transfer_statements = 1
resharper_blank_lines_after_file_scoped_namespace_directive = 1
resharper_blank_lines_after_imports = 1
resharper_blank_lines_after_multiline_statements = 0
resharper_blank_lines_after_options = 1
resharper_blank_lines_after_start_comment = 1
resharper_blank_lines_after_using_list = 1
resharper_blank_lines_around_accessor = 0
resharper_blank_lines_around_auto_property = 1
resharper_blank_lines_around_block_case_section = 0
resharper_blank_lines_around_class_definition = 1
resharper_blank_lines_around_different_module_member_kinds = 1
resharper_blank_lines_around_field = 1
resharper_blank_lines_around_function_declaration = 0
resharper_blank_lines_around_function_definition = 1
resharper_blank_lines_around_global_attribute = 0
resharper_blank_lines_around_invocable = 1
resharper_blank_lines_around_local_method = 1
resharper_blank_lines_around_multiline_case_section = 0
resharper_blank_lines_around_multiline_module_members = 1
resharper_blank_lines_around_namespace = 1
resharper_blank_lines_around_other_declaration = 0
resharper_blank_lines_around_property = 1
resharper_blank_lines_around_razor_functions = 1
resharper_blank_lines_around_razor_helpers = 1
resharper_blank_lines_around_razor_sections = 1
resharper_blank_lines_around_region = 1
resharper_blank_lines_around_single_line_accessor = 0
resharper_blank_lines_around_single_line_auto_property = 0
resharper_blank_lines_around_single_line_field = 0
resharper_blank_lines_around_single_line_function_definition = 0
resharper_blank_lines_around_single_line_invocable = 0
resharper_blank_lines_around_single_line_local_method = 0
resharper_blank_lines_around_single_line_module_member = 0
resharper_blank_lines_around_single_line_property = 0
resharper_blank_lines_around_single_line_type = 1
resharper_blank_lines_around_type = 1
resharper_blank_lines_before_access_specifier = 1
resharper_blank_lines_before_block_statements = 0
resharper_blank_lines_before_case = 0
resharper_blank_lines_before_control_transfer_statements = 0
resharper_blank_lines_before_first_module_member_in_nested_module = 0
resharper_blank_lines_before_first_module_member_in_top_level_module = 1
resharper_blank_lines_before_multiline_statements = 0
resharper_blank_lines_before_single_line_comment = 0
resharper_blank_lines_inside_namespace = 0
resharper_blank_lines_inside_region = 1
resharper_blank_lines_inside_type = 0
resharper_blank_line_after_pi = true
resharper_blank_line_around_top_level_modules = 2
resharper_braces_redundant = true
resharper_break_template_declaration = line_break
resharper_can_use_global_alias = true
resharper_configure_await_analysis_mode = disabled
resharper_constructor_or_destructor_body = expression_body
resharper_continuous_indent_multiplier = 1
resharper_continuous_line_indent = single
resharper_csharp_align_multiline_binary_expressions_chain = true
resharper_csharp_align_multiline_expression = false
resharper_csharp_align_multiline_for_stmt = false
resharper_csharp_allow_far_alignment = true
resharper_csharp_empty_block_style = together
resharper_csharp_insert_final_newline = true
resharper_csharp_keep_blank_lines_in_code = 1
resharper_csharp_max_line_length = 500
resharper_csharp_naming_rule.enum_member = AaBb_aaBb
resharper_csharp_naming_rule.method_property_event = AaBb
resharper_csharp_naming_rule.other = AaBb_aaBb
resharper_csharp_new_line_before_while = false
resharper_csharp_outdent_dots = true
resharper_csharp_prefer_qualified_reference = false
resharper_csharp_space_after_unary_operator = false
resharper_csharp_wrap_lines = false
resharper_declaration_body_on_the_same_line = if_owner_is_single_line
resharper_default_exception_variable_name = e
resharper_default_value_when_type_evident = default_literal
resharper_default_value_when_type_not_evident = default_literal
resharper_delete_quotes_from_solid_values = false
resharper_disable_blank_line_changes = false
resharper_disable_formatter = false
resharper_disable_indenter = false
resharper_disable_int_align = false
resharper_disable_line_break_changes = false
resharper_disable_line_break_removal = false
resharper_disable_space_changes = false
resharper_disable_space_changes_before_trailing_comment = false
resharper_dont_remove_extra_blank_lines = false
resharper_enable_wrapping = false
resharper_enforce_line_ending_style = false
resharper_event_handler_pattern_long = $object$On$event$
resharper_event_handler_pattern_short = On$event$
resharper_expression_braces = inside
resharper_expression_pars = inside
resharper_extra_spaces = remove_all
resharper_force_attribute_style = separate
resharper_force_chop_compound_do_expression = false
resharper_force_chop_compound_if_expression = false
resharper_force_chop_compound_while_expression = false
resharper_format_leading_spaces_decl = false
resharper_free_block_braces = next_line
resharper_function_declaration_return_type_style = do_not_change
resharper_function_definition_return_type_style = do_not_change
resharper_generator_mode = false
resharper_ignore_space_preservation = false
resharper_include_prefix_comment_in_indent = false
resharper_indent_access_specifiers_from_class = false
resharper_indent_aligned_ternary = true
resharper_indent_anonymous_method_block = false
resharper_indent_braces_inside_statement_conditions = true
resharper_indent_case_from_select = true
resharper_indent_child_elements = OneIndent
resharper_indent_class_members_from_access_specifiers = false
resharper_indent_comment = true
resharper_indent_inside_namespace = true
resharper_indent_invocation_pars = inside
resharper_indent_method_decl_pars = inside
resharper_indent_nested_fixed_stmt = false
resharper_indent_nested_foreach_stmt = false
resharper_indent_nested_for_stmt = false
resharper_indent_nested_lock_stmt = false
resharper_indent_nested_usings_stmt = false
resharper_indent_nested_while_stmt = false
resharper_indent_pars = inside
resharper_indent_preprocessor_directives = none
resharper_indent_preprocessor_if = outdent
resharper_indent_preprocessor_other = outdent
resharper_indent_preprocessor_region = outdent
resharper_indent_statement_pars = inside
resharper_indent_text = OneIndent
resharper_indent_typearg_angles = inside
resharper_indent_typeparam_angles = inside
resharper_indent_type_constraints = true
resharper_indent_wrapped_function_names = false
resharper_instance_members_qualify_declared_in = this_class, base_class
resharper_int_align_assignments = false
resharper_int_align_binary_expressions = false
resharper_int_align_comments = false
resharper_int_align_declaration_names = false
resharper_int_align_enum_initializers = false
resharper_int_align_eq = false
resharper_int_align_fields = false
resharper_int_align_fix_in_adjacent = true
resharper_int_align_invocations = false
resharper_int_align_methods = false
resharper_int_align_nested_ternary = false
resharper_int_align_parameters = false
resharper_int_align_properties = false
resharper_int_align_property_patterns = false
resharper_int_align_switch_expressions = false
resharper_int_align_switch_sections = false
resharper_int_align_variables = false
resharper_keep_blank_lines_in_declarations = 2
resharper_keep_existing_attribute_arrangement = true
resharper_keep_existing_declaration_block_arrangement = true
resharper_keep_existing_declaration_parens_arrangement = true
resharper_keep_existing_embedded_arrangement = true
resharper_keep_existing_embedded_block_arrangement = true
resharper_keep_existing_enum_arrangement = true
resharper_keep_existing_expr_member_arrangement = true
resharper_keep_existing_invocation_parens_arrangement = true
resharper_keep_existing_linebreaks = true
resharper_keep_existing_line_break_before_declaration_body = true
resharper_keep_existing_list_patterns_arrangement = true
resharper_keep_existing_property_patterns_arrangement = true
resharper_keep_existing_switch_expression_arrangement = true
resharper_keep_max_blank_line_around_module_members = 2
resharper_keep_nontrivial_alias = true
resharper_keep_user_wrapping = true
resharper_linebreaks_around_razor_statements = true
resharper_linebreaks_inside_tags_for_elements_longer_than = 2147483647
resharper_linebreaks_inside_tags_for_elements_with_child_elements = true
resharper_linebreaks_inside_tags_for_multiline_elements = true
resharper_linebreak_before_all_elements = false
resharper_linebreak_before_multiline_elements = true
resharper_linebreak_before_singleline_elements = false
resharper_line_break_after_colon_in_member_initializer_lists = do_not_change
resharper_line_break_after_comma_in_member_initializer_lists = false
resharper_line_break_after_type_repr_access_modifier = true
resharper_line_break_before_comma_in_member_initializer_lists = false
resharper_line_break_before_requires_clause = do_not_change
resharper_linkage_specification_braces = end_of_line
resharper_linkage_specification_indentation = none
resharper_local_function_body = expression_body
resharper_macro_block_begin =
resharper_macro_block_end =
resharper_max_array_initializer_elements_on_line = 256
resharper_max_attribute_length_for_same_line = 10000
resharper_max_enum_members_on_line = 1
resharper_max_formal_parameters_on_line = 10000
resharper_max_initializer_elements_on_line = 1
resharper_max_invocation_arguments_on_line = 10000
resharper_member_initializer_list_style = do_not_change
resharper_method_or_operator_body = expression_body
resharper_namespace_declaration_braces = next_line
resharper_namespace_indentation = all
resharper_nested_ternary_style = autodetect
resharper_never_outdent_pipe_operators = true
resharper_new_line_before_enumerators = true
resharper_normalize_tag_names = false
resharper_no_indent_inside_elements = html, body, thead, tbody, tfoot
resharper_no_indent_inside_if_element_longer_than = 200
resharper_object_creation_when_type_evident = target_typed
resharper_object_creation_when_type_not_evident = explicitly_typed
resharper_old_engine = false
resharper_outdent_binary_operators = true
resharper_outdent_binary_ops = false
resharper_outdent_binary_pattern_ops = false
resharper_outdent_commas = false
resharper_outdent_namespace_member = false
resharper_outdent_statement_labels = true
resharper_outdent_ternary_ops = false
resharper_parentheses_non_obvious_operations = none, shift, bitwise_and, bitwise_exclusive_or, bitwise_inclusive_or, bitwise
resharper_parentheses_redundancy_style = remove_if_not_clarifies_precedence
resharper_parentheses_same_type_operations = false
resharper_pi_attributes_indent = align_by_first_attribute
resharper_place_attribute_on_same_line = if_owner_is_single_line
resharper_place_comments_at_first_column = false
resharper_place_constructor_initializer_on_same_line = true
resharper_place_event_attribute_on_same_line = false
resharper_place_expr_accessor_on_single_line = if_owner_is_single_line
resharper_place_expr_method_on_single_line = if_owner_is_single_line
resharper_place_expr_property_on_single_line = if_owner_is_single_line
resharper_place_linq_into_on_new_line = true
resharper_place_namespace_definitions_on_same_line = false
resharper_place_property_attribute_on_same_line = false
resharper_place_simple_case_statement_on_same_line = if_owner_is_single_line
resharper_place_simple_embedded_statement_on_same_line = if_owner_is_single_line
resharper_place_simple_initializer_on_single_line = true
resharper_place_simple_list_pattern_on_single_line = true
resharper_place_simple_property_pattern_on_single_line = false
resharper_place_simple_switch_expression_on_single_line = false
resharper_place_type_constraints_on_same_line = true
resharper_prefer_explicit_discard_declaration = false
resharper_prefer_separate_deconstructed_variables_declaration = false
resharper_preserve_spaces_inside_tags = pre, textarea
resharper_qualified_using_at_nested_scope = false
resharper_quote_style = doublequoted
resharper_razor_prefer_qualified_reference = true
resharper_remove_blank_lines_near_braces = false
resharper_remove_blank_lines_near_braces_in_code = true
resharper_remove_blank_lines_near_braces_in_declarations = true
resharper_remove_this_qualifier = true
resharper_requires_expression_braces = next_line
resharper_show_autodetect_configure_formatting_tip = false
resharper_simple_block_style = do_not_change
resharper_simple_case_statement_style = do_not_change
resharper_simple_embedded_statement_style = do_not_change
resharper_sort_attributes = false
resharper_sort_class_selectors = false
resharper_sort_usings = true
resharper_sort_usings_lowercase_first = false
resharper_spaces_around_eq_in_attribute = false
resharper_spaces_around_eq_in_pi_attribute = false
resharper_spaces_inside_tags = false
resharper_space_after_attributes = true
resharper_space_after_attribute_target_colon = true
resharper_space_after_colon = true
resharper_space_after_colon_in_case = true
resharper_space_after_colon_in_inheritance_clause = true
resharper_space_after_comma = true
resharper_space_after_ellipsis_in_parameter_pack = true
resharper_space_after_for_colon = true
resharper_space_after_keywords_in_control_flow_statements = true
resharper_space_after_last_attribute = false
resharper_space_after_last_pi_attribute = false
resharper_space_after_operator_keyword = true
resharper_space_after_ptr_in_data_member = true
resharper_space_after_ptr_in_data_members = false
resharper_space_after_ptr_in_method = true
resharper_space_after_ref_in_data_member = true
resharper_space_after_ref_in_data_members = false
resharper_space_after_ref_in_method = true
resharper_space_after_semicolon_in_for_statement = true
resharper_space_after_ternary_colon = true
resharper_space_after_ternary_quest = true
resharper_space_after_triple_slash = true
resharper_space_after_type_parameter_constraint_colon = true
resharper_space_around_additive_op = true
resharper_space_around_alias_eq = true
resharper_space_around_assignment_op = true
resharper_space_around_assignment_operator = true
resharper_space_around_deref_in_trailing_return_type = true
resharper_space_around_lambda_arrow = true
resharper_space_around_member_access_operator = false
resharper_space_around_relational_op = true
resharper_space_around_shift_op = true
resharper_space_around_stmt_colon = true
resharper_space_around_ternary_operator = true
resharper_space_before_array_rank_parentheses = false
resharper_space_before_attribute_target_colon = false
resharper_space_before_checked_parentheses = false
resharper_space_before_colon = false
resharper_space_before_colon_in_case = false
resharper_space_before_colon_in_inheritance_clause = true
resharper_space_before_comma = false
resharper_space_before_default_parentheses = false
resharper_space_before_ellipsis_in_parameter_pack = false
resharper_space_before_empty_invocation_parentheses = false
resharper_space_before_empty_method_parentheses = false
resharper_space_before_for_colon = true
resharper_space_before_initializer_braces = false
resharper_space_before_invocation_parentheses = false
resharper_space_before_label_colon = false
resharper_space_before_lambda_parentheses = false
resharper_space_before_method_parentheses = false
resharper_space_before_nameof_parentheses = false
resharper_space_before_new_parentheses = false
resharper_space_before_nullable_mark = false
resharper_space_before_open_square_brackets = false
resharper_space_before_pointer_asterik_declaration = false
resharper_space_before_ptr_in_abstract_decl = false
resharper_space_before_ptr_in_data_member = false
resharper_space_before_ptr_in_data_members = true
resharper_space_before_ptr_in_method = false
resharper_space_before_ref_in_abstract_decl = false
resharper_space_before_ref_in_data_member = false
resharper_space_before_ref_in_data_members = true
resharper_space_before_ref_in_method = false
resharper_space_before_semicolon = false
resharper_space_before_semicolon_in_for_statement = false
resharper_space_before_singleline_accessorholder = true
resharper_space_before_sizeof_parentheses = false
resharper_space_before_template_args = false
resharper_space_before_template_params = true
resharper_space_before_ternary_colon = true
resharper_space_before_ternary_quest = true
resharper_space_before_trailing_comment = true
resharper_space_before_typeof_parentheses = false
resharper_space_before_type_argument_angle = false
resharper_space_before_type_parameter_angle = false
resharper_space_before_type_parameter_constraint_colon = true
resharper_space_before_type_parameter_parentheses = true
resharper_space_between_accessors_in_singleline_property = true
resharper_space_between_attribute_sections = true
resharper_space_between_closing_angle_brackets_in_template_args = false
resharper_space_between_keyword_and_expression = true
resharper_space_between_keyword_and_type = true
resharper_space_between_method_call_empty_parameter_list_parentheses = false
resharper_space_between_method_call_name_and_opening_parenthesis = false
resharper_space_between_method_call_parameter_list_parentheses = false
resharper_space_between_method_declaration_empty_parameter_list_parentheses = false
resharper_space_between_method_declaration_name_and_open_parenthesis = false
resharper_space_between_method_declaration_parameter_list_parentheses = false
resharper_space_between_parentheses_of_control_flow_statements = false
resharper_space_between_square_brackets = false
resharper_space_between_typecast_parentheses = false
resharper_space_in_singleline_accessorholder = true
resharper_space_in_singleline_anonymous_method = true
resharper_space_in_singleline_method = true
resharper_space_near_postfix_and_prefix_op = false
resharper_space_within_array_initialization_braces = false
resharper_space_within_array_rank_empty_parentheses = false
resharper_space_within_array_rank_parentheses = false
resharper_space_within_attribute_angles = false
resharper_space_within_checked_parentheses = false
resharper_space_within_default_parentheses = false
resharper_space_within_empty_braces = true
resharper_space_within_empty_initializer_braces = false
resharper_space_within_empty_invocation_parentheses = false
resharper_space_within_empty_method_parentheses = false
resharper_space_within_empty_template_params = false
resharper_space_within_expression_parentheses = false
resharper_space_within_initializer_braces = false
resharper_space_within_invocation_parentheses = false
resharper_space_within_method_parentheses = false
resharper_space_within_nameof_parentheses = false
resharper_space_within_new_parentheses = false
resharper_space_within_parentheses = false
resharper_space_within_single_line_array_initializer_braces = true
resharper_space_within_sizeof_parentheses = false
resharper_space_within_template_args = false
resharper_space_within_template_params = false
resharper_space_within_tuple_parentheses = false
resharper_space_within_typeof_parentheses = false
resharper_space_within_type_argument_angles = false
resharper_space_within_type_parameter_angles = false
resharper_space_within_type_parameter_parentheses = false
resharper_special_else_if_treatment = true
resharper_static_members_qualify_members = none
resharper_static_members_qualify_with = declared_type
resharper_stick_comment = true
resharper_support_vs_event_naming_pattern = true
resharper_toplevel_function_declaration_return_type_style = do_not_change
resharper_toplevel_function_definition_return_type_style = do_not_change
resharper_trailing_comma_in_multiline_lists = true
resharper_trailing_comma_in_singleline_lists = false
resharper_use_continuous_indent_inside_initializer_braces = true
resharper_use_continuous_indent_inside_parens = true
resharper_use_continuous_line_indent_in_expression_braces = false
resharper_use_continuous_line_indent_in_method_pars = false
resharper_use_heuristics_for_body_style = true
resharper_use_indents_from_main_language_in_file = true
resharper_use_indent_from_previous_element = true
resharper_use_indent_from_vs = false
resharper_use_roslyn_logic_for_evident_types = false
resharper_wrap_after_binary_opsign = true
resharper_wrap_after_declaration_lpar = false
resharper_wrap_after_dot = false
resharper_wrap_after_dot_in_method_calls = false
resharper_wrap_after_expression_lbrace = true
resharper_wrap_after_invocation_lpar = false
resharper_wrap_arguments_style = wrap_if_long
resharper_wrap_around_elements = true
resharper_wrap_array_initializer_style = wrap_if_long
resharper_wrap_base_clause_style = wrap_if_long
resharper_wrap_before_arrow_with_expressions = false
resharper_wrap_before_binary_opsign = false
resharper_wrap_before_binary_pattern_op = true
resharper_wrap_before_colon = false
resharper_wrap_before_comma = false
resharper_wrap_before_comma_in_base_clause = false
resharper_wrap_before_declaration_lpar = false
resharper_wrap_before_declaration_rpar = false
resharper_wrap_before_eq = false
resharper_wrap_before_expression_rbrace = true
resharper_wrap_before_extends_colon = false
resharper_wrap_before_first_type_parameter_constraint = false
resharper_wrap_before_invocation_lpar = false
resharper_wrap_before_invocation_rpar = false
resharper_wrap_before_linq_expression = false
resharper_wrap_before_ternary_opsigns = true
resharper_wrap_before_type_parameter_langle = false
resharper_wrap_braced_init_list_style = wrap_if_long
resharper_wrap_chained_binary_expressions = wrap_if_long
resharper_wrap_chained_binary_patterns = wrap_if_long
resharper_wrap_chained_method_calls = wrap_if_long
resharper_wrap_ctor_initializer_style = wrap_if_long
resharper_wrap_enumeration_style = chop_if_long
resharper_wrap_enum_declaration = chop_always
resharper_wrap_extends_list_style = wrap_if_long
resharper_wrap_for_stmt_header_style = chop_if_long
resharper_wrap_list_pattern = wrap_if_long
resharper_wrap_multiple_declaration_style = chop_if_long
resharper_wrap_multiple_type_parameter_constraints_style = chop_if_long
resharper_wrap_object_and_collection_initializer_style = chop_always
resharper_wrap_parameters_style = wrap_if_long
resharper_wrap_property_pattern = chop_if_long
resharper_wrap_switch_expression = chop_always
resharper_wrap_ternary_expr_style = chop_if_long
resharper_wrap_verbatim_interpolated_strings = no_wrap

# ReSharper inspection severities
resharper_access_rights_in_text_highlighting = warning
resharper_access_to_disposed_closure_highlighting = warning
resharper_access_to_for_each_variable_in_closure_highlighting = warning
resharper_access_to_modified_closure_highlighting = warning
resharper_access_to_static_member_via_derived_type_highlighting = warning
resharper_address_of_marshal_by_ref_object_highlighting = warning
resharper_angular_html_banana_highlighting = warning
resharper_annotate_can_be_null_parameter_highlighting = none
resharper_annotate_can_be_null_type_member_highlighting = none
resharper_annotate_not_null_parameter_highlighting = none
resharper_annotate_not_null_type_member_highlighting = none
resharper_annotation_conflict_in_hierarchy_highlighting = warning
resharper_annotation_redundancy_at_value_type_highlighting = warning
resharper_annotation_redundancy_in_hierarchy_highlighting = warning
resharper_anonymous_object_destructuring_problem_highlighting = warning
resharper_arguments_style_anonymous_function_highlighting = none
resharper_arguments_style_literal_highlighting = none
resharper_arguments_style_named_expression_highlighting = none
resharper_arguments_style_other_highlighting = none
resharper_arguments_style_string_literal_highlighting = none
resharper_arrange_accessor_owner_body_highlighting = suggestion
resharper_arrange_attributes_highlighting = none
resharper_arrange_constructor_or_destructor_body_highlighting = none
resharper_arrange_default_value_when_type_evident_highlighting = suggestion
resharper_arrange_default_value_when_type_not_evident_highlighting = hint
resharper_arrange_local_function_body_highlighting = none
resharper_arrange_method_or_operator_body_highlighting = none
resharper_arrange_namespace_body_highlighting = hint
resharper_arrange_object_creation_when_type_evident_highlighting = suggestion
resharper_arrange_object_creation_when_type_not_evident_highlighting = hint
resharper_arrange_redundant_parentheses_highlighting = hint
resharper_arrange_static_member_qualifier_highlighting = hint
resharper_arrange_this_qualifier_highlighting = hint
resharper_arrange_trailing_comma_in_multiline_lists_highlighting = hint
resharper_arrange_trailing_comma_in_singleline_lists_highlighting = none
resharper_arrange_type_member_modifiers_highlighting = hint
resharper_arrange_type_modifiers_highlighting = hint
resharper_arrange_var_keywords_in_deconstructing_declaration_highlighting = suggestion
resharper_asp_content_placeholder_not_resolved_highlighting = error
resharper_asp_custom_page_parser_filter_type_highlighting = warning
resharper_asp_dead_code_highlighting = warning
resharper_asp_entity_highlighting = warning
resharper_asp_image_highlighting = warning
resharper_asp_invalid_control_type_highlighting = error
resharper_asp_not_resolved_highlighting = error
resharper_asp_ods_method_reference_resolve_error_highlighting = error
resharper_asp_resolve_warning_highlighting = warning
resharper_asp_skin_not_resolved_highlighting = error
resharper_asp_tag_attribute_with_optional_value_highlighting = warning
resharper_asp_theme_not_resolved_highlighting = error
resharper_asp_unused_register_directive_highlighting_highlighting = warning
resharper_asp_warning_highlighting = warning
resharper_assignment_in_conditional_expression_highlighting = warning
resharper_assignment_is_fully_discarded_highlighting = warning
resharper_assign_null_to_not_null_attribute_highlighting = warning
resharper_asxx_path_error_highlighting = warning
resharper_async_iterator_invocation_without_await_foreach_highlighting = warning
resharper_async_void_lambda_highlighting = warning
resharper_async_void_method_highlighting = none
resharper_auto_property_can_be_made_get_only_global_highlighting = none
resharper_auto_property_can_be_made_get_only_local_highlighting = suggestion
resharper_bad_attribute_brackets_spaces_highlighting = none
resharper_bad_braces_spaces_highlighting = none
resharper_bad_child_statement_indent_highlighting = warning
resharper_bad_colon_spaces_highlighting = none
resharper_bad_comma_spaces_highlighting = none
resharper_bad_control_braces_indent_highlighting = suggestion
resharper_bad_control_braces_line_breaks_highlighting = none
resharper_bad_declaration_braces_indent_highlighting = none
resharper_bad_declaration_braces_line_breaks_highlighting = none
resharper_bad_empty_braces_line_breaks_highlighting = none
resharper_bad_expression_braces_indent_highlighting = none
resharper_bad_expression_braces_line_breaks_highlighting = none
resharper_bad_generic_brackets_spaces_highlighting = none
resharper_bad_indent_highlighting = none
resharper_bad_linq_line_breaks_highlighting = none
resharper_bad_list_line_breaks_highlighting = none
resharper_bad_member_access_spaces_highlighting = none
resharper_bad_namespace_braces_indent_highlighting = none
resharper_bad_parens_line_breaks_highlighting = none
resharper_bad_parens_spaces_highlighting = none
resharper_bad_preprocessor_indent_highlighting = none
resharper_bad_semicolon_spaces_highlighting = none
resharper_bad_spaces_after_keyword_highlighting = none
resharper_bad_square_brackets_spaces_highlighting = none
resharper_bad_switch_braces_indent_highlighting = none
resharper_bad_symbol_spaces_highlighting = none
resharper_base_member_has_params_highlighting = warning
resharper_base_method_call_with_default_parameter_highlighting = warning
resharper_base_object_equals_is_object_equals_highlighting = warning
resharper_base_object_get_hash_code_call_in_get_hash_code_highlighting = warning
resharper_bitwise_operator_on_enum_without_flags_highlighting = warning
resharper_blazor_editor_required_highlighting = warning
resharper_built_in_type_reference_style_for_member_access_highlighting = hint
resharper_built_in_type_reference_style_highlighting = hint
resharper_by_ref_argument_is_volatile_field_highlighting = warning
resharper_cannot_apply_equality_operator_to_type_highlighting = warning
resharper_center_tag_is_obsolete_highlighting = warning
resharper_check_for_reference_equality_instead_1_highlighting = suggestion
resharper_check_for_reference_equality_instead_2_highlighting = suggestion
resharper_check_for_reference_equality_instead_3_highlighting = suggestion
resharper_check_for_reference_equality_instead_4_highlighting = suggestion
resharper_check_namespace_highlighting = warning
resharper_class_cannot_be_instantiated_highlighting = warning
resharper_class_can_be_sealed_global_highlighting = none
resharper_class_can_be_sealed_local_highlighting = none
resharper_class_never_instantiated_global_highlighting = none
resharper_class_never_instantiated_local_highlighting = suggestion
resharper_class_with_virtual_members_never_inherited_global_highlighting = none
resharper_class_with_virtual_members_never_inherited_local_highlighting = suggestion
resharper_clear_attribute_is_obsolete_all_highlighting = warning
resharper_clear_attribute_is_obsolete_highlighting = warning
resharper_collection_never_queried_global_highlighting = none
resharper_collection_never_queried_local_highlighting = warning
resharper_collection_never_updated_global_highlighting = none
resharper_collection_never_updated_local_highlighting = warning
resharper_comment_typo_highlighting = none
resharper_compare_non_constrained_generic_with_null_highlighting = none
resharper_compare_of_floats_by_equality_operator_highlighting = warning
resharper_complex_object_destructuring_problem_highlighting = warning
resharper_complex_object_in_context_destructuring_problem_highlighting = warning
resharper_conditional_access_qualifier_is_non_nullable_according_to_api_contract_highlighting = warning
resharper_conditional_ternary_equal_branch_highlighting = warning
resharper_condition_is_always_true_or_false_according_to_nullable_api_contract_highlighting = warning
resharper_condition_is_always_true_or_false_highlighting = warning
resharper_confusing_char_as_integer_in_constructor_highlighting = warning
resharper_constant_conditional_access_qualifier_highlighting = warning
resharper_constant_null_coalescing_condition_highlighting = warning
resharper_constructor_initializer_loop_highlighting = warning
resharper_container_annotation_redundancy_highlighting = warning
resharper_contextual_logger_problem_highlighting = warning
resharper_context_value_is_provided_highlighting = none
resharper_contract_annotation_not_parsed_highlighting = warning
resharper_convert_closure_to_method_group_highlighting = suggestion
resharper_convert_conditional_ternary_expression_to_switch_expression_highlighting = hint
resharper_convert_if_do_to_while_highlighting = suggestion
resharper_convert_if_statement_to_conditional_ternary_expression_highlighting = suggestion
resharper_convert_if_statement_to_null_coalescing_assignment_highlighting = suggestion
resharper_convert_if_statement_to_null_coalescing_expression_highlighting = suggestion
resharper_convert_if_statement_to_return_statement_highlighting = hint
resharper_convert_if_statement_to_switch_statement_highlighting = hint
resharper_convert_if_to_or_expression_highlighting = suggestion
resharper_convert_nullable_to_short_form_highlighting = suggestion
resharper_convert_switch_statement_to_switch_expression_highlighting = hint
resharper_convert_to_auto_property_highlighting = suggestion
resharper_convert_to_auto_property_when_possible_highlighting = hint
resharper_convert_to_auto_property_with_private_setter_highlighting = hint
resharper_convert_to_compound_assignment_highlighting = hint
resharper_convert_to_constant_global_highlighting = hint
resharper_convert_to_constant_local_highlighting = hint
resharper_convert_to_lambda_expression_highlighting = suggestion
resharper_convert_to_local_function_highlighting = suggestion
resharper_convert_to_null_coalescing_compound_assignment_highlighting = suggestion
resharper_convert_to_primary_constructor_highlighting = suggestion
resharper_convert_to_static_class_highlighting = suggestion
resharper_convert_to_using_declaration_highlighting = suggestion
resharper_convert_type_check_pattern_to_null_check_highlighting = warning
resharper_convert_type_check_to_null_check_highlighting = warning
resharper_co_variant_array_conversion_highlighting = warning
resharper_c_declaration_with_implicit_int_type_highlighting = warning
resharper_c_sharp_build_cs_invalid_module_name_highlighting = warning
resharper_c_sharp_missing_plugin_dependency_highlighting = warning
resharper_default_value_attribute_for_optional_parameter_highlighting = warning
resharper_dl_tag_contains_non_dt_or_dd_elements_highlighting = hint
resharper_double_negation_in_pattern_highlighting = suggestion
resharper_double_negation_operator_highlighting = suggestion
resharper_duplicate_resource_highlighting = warning
resharper_empty_constructor_highlighting = warning
resharper_empty_destructor_highlighting = warning
resharper_empty_embedded_statement_highlighting = warning
resharper_empty_for_statement_highlighting = warning
resharper_empty_general_catch_clause_highlighting = warning
resharper_empty_namespace_highlighting = warning
resharper_empty_statement_highlighting = warning
resharper_empty_title_tag_highlighting = hint
resharper_entity_name_captured_only_global_highlighting = none
resharper_entity_name_captured_only_local_highlighting = warning
resharper_enumerable_sum_in_explicit_unchecked_context_highlighting = warning
resharper_enum_underlying_type_is_int_highlighting = warning
resharper_equal_expression_comparison_highlighting = warning
resharper_escaped_keyword_highlighting = warning
resharper_event_never_invoked_global_highlighting = none
resharper_event_never_subscribed_to_global_highlighting = none
resharper_event_never_subscribed_to_local_highlighting = suggestion
resharper_event_unsubscription_via_anonymous_delegate_highlighting = warning
resharper_exception_passed_as_template_argument_problem_highlighting = warning
resharper_explicit_caller_info_argument_highlighting = warning
resharper_expression_is_always_null_highlighting = warning
resharper_field_can_be_made_read_only_global_highlighting = none
resharper_field_can_be_made_read_only_local_highlighting = suggestion
resharper_field_hides_interface_property_with_default_implementation_highlighting = warning
resharper_foreach_can_be_converted_to_query_using_another_get_enumerator_highlighting = none
resharper_foreach_can_be_partly_converted_to_query_using_another_get_enumerator_highlighting = none
resharper_format_string_placeholders_mismatch_highlighting = warning
resharper_format_string_problem_highlighting = warning
resharper_for_can_be_converted_to_foreach_highlighting = suggestion
resharper_for_statement_condition_is_true_highlighting = warning
resharper_function_complexity_overflow_highlighting = none
resharper_function_never_returns_highlighting = warning
resharper_function_recursive_on_all_paths_highlighting = warning
resharper_gc_suppress_finalize_for_type_without_destructor_highlighting = warning
resharper_generic_enumerator_not_disposed_highlighting = warning
resharper_heap_view_boxing_allocation_highlighting = hint
resharper_heap_view_can_avoid_closure_highlighting = suggestion
resharper_heap_view_closure_allocation_highlighting = hint
resharper_heap_view_delegate_allocation_highlighting = hint
resharper_heap_view_object_allocation_evident_highlighting = hint
resharper_heap_view_object_allocation_highlighting = hint
resharper_heap_view_object_allocation_possible_highlighting = hint
resharper_heap_view_possible_boxing_allocation_highlighting = hint
resharper_heuristic_unreachable_code_highlighting = warning
resharper_identifier_typo_highlighting = none
resharper_ignored_directive_highlighting = warning
resharper_inactive_preprocessor_branch_highlighting = warning
resharper_inconsistently_synchronized_field_highlighting = warning
resharper_inconsistent_context_log_property_naming_highlighting = warning
resharper_inconsistent_log_property_naming_highlighting = warning
resharper_inconsistent_naming_highlighting = none
resharper_inconsistent_order_of_locks_highlighting = warning
resharper_incorrect_blank_lines_near_braces_highlighting = none
resharper_indexing_by_invalid_range_highlighting = warning
resharper_inheritdoc_consider_usage_highlighting = none
resharper_inheritdoc_invalid_usage_highlighting = warning
resharper_inline_out_variable_declaration_highlighting = suggestion
resharper_inline_temporary_variable_highlighting = hint
resharper_internal_or_private_member_not_documented_highlighting = none
resharper_interpolated_string_expression_is_not_i_formattable_highlighting = warning
resharper_introduce_optional_parameters_global_highlighting = suggestion
resharper_introduce_optional_parameters_local_highlighting = suggestion
resharper_int_division_by_zero_highlighting = warning
resharper_int_variable_overflow_highlighting = warning
resharper_int_variable_overflow_in_checked_context_highlighting = warning
resharper_int_variable_overflow_in_unchecked_context_highlighting = warning
resharper_invalid_value_type_highlighting = warning
resharper_invalid_xml_doc_comment_highlighting = warning
resharper_invert_condition_1_highlighting = hint
resharper_invert_if_highlighting = none
resharper_invocation_is_skipped_highlighting = hint
resharper_invoke_as_extension_method_highlighting = suggestion
resharper_is_expression_always_false_highlighting = warning
resharper_is_expression_always_true_highlighting = warning
resharper_iterator_method_result_is_ignored_highlighting = warning
resharper_iterator_never_returns_highlighting = warning
resharper_join_declaration_and_initializer_highlighting = suggestion
resharper_join_null_check_with_usage_highlighting = suggestion
resharper_lambda_expression_can_be_made_static_highlighting = none
resharper_lambda_expression_must_be_static_highlighting = suggestion
resharper_lambda_should_not_capture_context_highlighting = warning
resharper_localizable_element_highlighting = warning
resharper_local_function_can_be_made_static_highlighting = none
resharper_local_function_hides_method_highlighting = warning
resharper_local_variable_hides_member_highlighting = warning
resharper_log_message_is_sentence_problem_highlighting = warning
resharper_long_literal_ending_lower_l_highlighting = warning
resharper_loop_can_be_converted_to_query_highlighting = none
resharper_loop_can_be_partly_converted_to_query_highlighting = none
resharper_loop_variable_is_never_changed_inside_loop_highlighting = warning
resharper_markup_attribute_typo_highlighting = none
resharper_markup_text_typo_highlighting = none
resharper_math_abs_method_is_redundant_highlighting = warning
resharper_math_clamp_min_greater_than_max_highlighting = warning
resharper_meaningless_default_parameter_value_highlighting = warning
resharper_member_can_be_file_local_highlighting = none
resharper_member_can_be_internal_highlighting = none
resharper_member_can_be_made_static_global_highlighting = hint
resharper_member_can_be_made_static_local_highlighting = hint
resharper_member_can_be_private_global_highlighting = none
resharper_member_can_be_private_local_highlighting = suggestion
resharper_member_can_be_protected_global_highlighting = hint
resharper_member_can_be_protected_local_highlighting = suggestion
resharper_member_hides_interface_member_with_default_implementation_highlighting = warning
resharper_member_hides_static_from_outer_class_highlighting = warning
resharper_member_initializer_value_ignored_highlighting = warning
resharper_merge_and_pattern_highlighting = suggestion
resharper_merge_cast_with_type_check_highlighting = suggestion
resharper_merge_conditional_expression_highlighting = suggestion
resharper_merge_into_logical_pattern_highlighting = hint
resharper_merge_into_negated_pattern_highlighting = hint
resharper_merge_into_pattern_highlighting = suggestion
resharper_merge_nested_property_patterns_highlighting = suggestion
resharper_merge_sequential_checks_highlighting = hint
resharper_method_has_async_overload_highlighting = suggestion
resharper_method_has_async_overload_with_cancellation_highlighting = suggestion
resharper_method_overload_with_optional_parameter_highlighting = warning
resharper_method_supports_cancellation_highlighting = suggestion
resharper_mismatched_asmdef_filename_highlighting = suggestion
resharper_missing_alt_attribute_in_img_tag_highlighting = hint
resharper_missing_blank_lines_highlighting = none
resharper_missing_body_tag_highlighting = warning
resharper_missing_head_and_body_tags_highlighting = warning
resharper_missing_head_tag_highlighting = warning
resharper_missing_indent_highlighting = none
resharper_missing_linebreak_highlighting = none
resharper_missing_space_highlighting = none
resharper_missing_title_tag_highlighting = hint
resharper_more_specific_foreach_variable_type_available_highlighting = suggestion
resharper_move_to_existing_positional_deconstruction_pattern_highlighting = hint
resharper_move_variable_declaration_inside_loop_condition_highlighting = suggestion
resharper_multiple_nullable_attributes_usage_highlighting = warning
resharper_multiple_order_by_highlighting = warning
resharper_multiple_resolve_candidates_in_text_highlighting = warning
resharper_multiple_spaces_highlighting = none
resharper_multiple_statements_on_one_line_highlighting = none
resharper_multiple_type_members_on_one_line_highlighting = none
resharper_must_use_return_value_highlighting = warning
resharper_mvc_action_not_resolved_highlighting = error
resharper_mvc_area_not_resolved_highlighting = error
resharper_mvc_controller_not_resolved_highlighting = error
resharper_mvc_invalid_model_type_highlighting = error
resharper_mvc_masterpage_not_resolved_highlighting = error
resharper_mvc_partial_view_not_resolved_highlighting = error
resharper_mvc_template_not_resolved_highlighting = error
resharper_mvc_view_component_not_resolved_highlighting = error
resharper_mvc_view_component_view_not_resolved_highlighting = error
resharper_mvc_view_not_resolved_highlighting = error
resharper_negation_of_relational_pattern_highlighting = suggestion
resharper_negative_equality_expression_highlighting = suggestion
resharper_negative_index_highlighting = warning
resharper_nested_string_interpolation_highlighting = suggestion
resharper_non_atomic_compound_operator_highlighting = warning
resharper_non_constant_equality_expression_has_constant_result_highlighting = warning
resharper_non_parsable_element_highlighting = warning
resharper_non_readonly_member_in_get_hash_code_highlighting = none
resharper_non_volatile_field_in_double_check_locking_highlighting = warning
resharper_not_accessed_field_global_highlighting = none
resharper_not_accessed_field_local_highlighting = warning
resharper_not_accessed_positional_property_global_highlighting = none
resharper_not_accessed_positional_property_local_highlighting = warning
resharper_not_accessed_property_global_highlighting = none
resharper_not_accessed_property_local_highlighting = warning
resharper_not_accessed_variable_highlighting = warning
resharper_not_assigned_out_parameter_highlighting = warning
resharper_not_declared_in_parent_culture_highlighting = warning
resharper_not_null_or_required_member_is_not_initialized_highlighting = warning
resharper_not_observable_annotation_redundancy_highlighting = warning
resharper_not_overridden_in_specific_culture_highlighting = warning
resharper_not_resolved_in_text_highlighting = warning
resharper_nullable_warning_suppression_is_used_highlighting = none
resharper_null_coalescing_condition_is_always_not_null_according_to_api_contract_highlighting = warning
resharper_n_unit_async_method_must_be_task_highlighting = warning
resharper_n_unit_attribute_produces_too_many_tests_highlighting = none
resharper_n_unit_auto_fixture_incorrect_argument_type_highlighting = warning
resharper_n_unit_auto_fixture_missed_test_attribute_highlighting = warning
resharper_n_unit_auto_fixture_missed_test_or_test_fixture_attribute_highlighting = warning
resharper_n_unit_auto_fixture_redundant_argument_in_inline_auto_data_attribute_highlighting = warning
resharper_n_unit_duplicate_values_highlighting = warning
resharper_n_unit_ignored_parameter_attribute_highlighting = warning
resharper_n_unit_implicit_unspecified_null_values_highlighting = warning
resharper_n_unit_incorrect_argument_type_highlighting = warning
resharper_n_unit_incorrect_expected_result_type_highlighting = warning
resharper_n_unit_incorrect_range_bounds_highlighting = warning
resharper_n_unit_method_with_parameters_and_test_attribute_highlighting = warning
resharper_n_unit_missing_arguments_in_test_case_attribute_highlighting = warning
resharper_n_unit_non_public_method_with_test_attribute_highlighting = warning
resharper_n_unit_no_values_provided_highlighting = warning
resharper_n_unit_parameter_type_is_not_compatible_with_attribute_highlighting = warning
resharper_n_unit_range_attribute_bounds_are_out_of_range_highlighting = warning
resharper_n_unit_range_step_sign_mismatch_highlighting = warning
resharper_n_unit_range_step_value_must_not_be_zero_highlighting = warning
resharper_n_unit_range_to_value_is_not_reachable_highlighting = warning
resharper_n_unit_redundant_argument_instead_of_expected_result_highlighting = warning
resharper_n_unit_redundant_argument_in_test_case_attribute_highlighting = warning
resharper_n_unit_redundant_expected_result_in_test_case_attribute_highlighting = warning
resharper_n_unit_test_case_attribute_requires_expected_result_highlighting = warning
resharper_n_unit_test_case_result_property_duplicates_expected_result_highlighting = warning
resharper_n_unit_test_case_result_property_is_obsolete_highlighting = warning
resharper_n_unit_test_case_source_cannot_be_resolved_highlighting = warning
resharper_n_unit_test_case_source_must_be_field_property_method_highlighting = warning
resharper_n_unit_test_case_source_must_be_static_highlighting = warning
resharper_n_unit_test_case_source_should_implement_i_enumerable_highlighting = warning
resharper_object_creation_as_statement_highlighting = warning
resharper_obsolete_element_error_highlighting = error
resharper_obsolete_element_highlighting = warning
resharper_ol_tag_contains_non_li_elements_highlighting = hint
resharper_one_way_operation_contract_with_return_type_highlighting = warning
resharper_operation_contract_without_service_contract_highlighting = warning
resharper_operator_is_can_be_used_highlighting = warning
resharper_operator_without_matched_checked_operator_highlighting = warning
resharper_optional_parameter_hierarchy_mismatch_highlighting = warning
resharper_optional_parameter_ref_out_highlighting = warning
resharper_other_tags_inside_script1_highlighting = error
resharper_other_tags_inside_script2_highlighting = error
resharper_other_tags_inside_unclosed_script_highlighting = error
resharper_outdent_is_off_prev_level_highlighting = none
resharper_out_parameter_value_is_always_discarded_global_highlighting = none
resharper_out_parameter_value_is_always_discarded_local_highlighting = warning
resharper_overridden_with_empty_value_highlighting = warning
resharper_overridden_with_same_value_highlighting = suggestion
resharper_parameter_hides_member_highlighting = warning
resharper_parameter_only_used_for_precondition_check_global_highlighting = none
resharper_parameter_only_used_for_precondition_check_local_highlighting = none
resharper_parameter_type_can_be_enumerable_global_highlighting = none
resharper_parameter_type_can_be_enumerable_local_highlighting = none
resharper_partial_method_parameter_name_mismatch_highlighting = warning
resharper_partial_method_with_single_part_highlighting = warning
resharper_partial_type_with_single_part_highlighting = warning
resharper_pass_string_interpolation_highlighting = hint
resharper_pattern_always_matches_highlighting = warning
resharper_pattern_is_always_true_or_false_highlighting = warning
resharper_pattern_never_matches_highlighting = warning
resharper_place_assignment_expression_into_block_highlighting = none
resharper_polymorphic_field_like_event_invocation_highlighting = warning
resharper_positional_property_used_problem_highlighting = warning
resharper_possible_infinite_inheritance_highlighting = warning
resharper_possible_intended_rethrow_highlighting = warning
resharper_possible_interface_member_ambiguity_highlighting = warning
resharper_possible_invalid_cast_exception_highlighting = warning
resharper_possible_invalid_cast_exception_in_foreach_loop_highlighting = warning
resharper_possible_invalid_operation_exception_highlighting = warning
resharper_possible_loss_of_fraction_highlighting = warning
resharper_possible_mistaken_argument_highlighting = warning
resharper_possible_mistaken_call_to_get_type_1_highlighting = warning
resharper_possible_mistaken_call_to_get_type_2_highlighting = warning
resharper_possible_multiple_enumeration_highlighting = warning
resharper_possible_multiple_write_access_in_double_check_locking_highlighting = warning
resharper_possible_null_reference_exception_highlighting = warning
resharper_possible_struct_member_modification_of_non_variable_struct_highlighting = warning
resharper_possible_unintended_linear_search_in_set_highlighting = warning
resharper_possible_unintended_queryable_as_enumerable_highlighting = suggestion
resharper_possible_unintended_reference_comparison_highlighting = warning
resharper_possible_write_to_me_highlighting = warning
resharper_possibly_impure_method_call_on_readonly_variable_highlighting = warning
resharper_possibly_missing_indexer_initializer_comma_highlighting = warning
resharper_possibly_mistaken_use_of_interpolated_string_insert_highlighting = warning
resharper_private_field_can_be_converted_to_local_variable_highlighting = warning
resharper_property_can_be_made_init_only_global_highlighting = none
resharper_property_can_be_made_init_only_local_highlighting = suggestion
resharper_property_field_keyword_is_never_assigned_highlighting = warning
resharper_property_field_keyword_is_never_used_highlighting = warning
resharper_property_not_resolved_highlighting = error
resharper_public_constructor_in_abstract_class_highlighting = suggestion
resharper_pure_attribute_on_void_method_highlighting = warning
resharper_razor_layout_not_resolved_highlighting = error
resharper_razor_section_not_resolved_highlighting = error
resharper_read_access_in_double_check_locking_highlighting = warning
resharper_redundant_abstract_modifier_highlighting = warning
resharper_redundant_accessor_body_highlighting = suggestion
resharper_redundant_always_match_subpattern_highlighting = suggestion
resharper_redundant_anonymous_type_property_name_highlighting = warning
resharper_redundant_argument_default_value_highlighting = warning
resharper_redundant_array_creation_expression_highlighting = hint
resharper_redundant_array_lower_bound_specification_highlighting = warning
resharper_redundant_assignment_highlighting = warning
resharper_redundant_attribute_parentheses_highlighting = hint
resharper_redundant_attribute_suffix_highlighting = warning
resharper_redundant_attribute_usage_property_highlighting = suggestion
resharper_redundant_base_constructor_call_highlighting = warning
resharper_redundant_base_qualifier_highlighting = warning
resharper_redundant_blank_lines_highlighting = none
resharper_redundant_bool_compare_highlighting = warning
resharper_redundant_caller_argument_expression_default_value_highlighting = warning
resharper_redundant_case_label_highlighting = warning
resharper_redundant_cast_highlighting = warning
resharper_redundant_catch_clause_highlighting = warning
resharper_redundant_check_before_assignment_highlighting = warning
resharper_redundant_collection_initializer_element_braces_highlighting = hint
resharper_redundant_configure_await_highlighting = suggestion
resharper_redundant_declaration_semicolon_highlighting = hint
resharper_redundant_default_member_initializer_highlighting = warning
resharper_redundant_delegate_creation_highlighting = warning
resharper_redundant_disable_warning_comment_highlighting = warning
resharper_redundant_discard_designation_highlighting = suggestion
resharper_redundant_empty_case_else_highlighting = warning
resharper_redundant_empty_finally_block_highlighting = warning
resharper_redundant_empty_object_creation_argument_list_highlighting = hint
resharper_redundant_empty_object_or_collection_initializer_highlighting = warning
resharper_redundant_empty_switch_section_highlighting = warning
resharper_redundant_enumerable_cast_call_highlighting = warning
resharper_redundant_enum_case_label_for_default_section_highlighting = none
resharper_redundant_explicit_array_creation_highlighting = warning
resharper_redundant_explicit_array_size_highlighting = warning
resharper_redundant_explicit_nullable_creation_highlighting = warning
resharper_redundant_explicit_params_array_creation_highlighting = suggestion
resharper_redundant_explicit_positional_property_declaration_highlighting = warning
resharper_redundant_explicit_tuple_component_name_highlighting = warning
resharper_redundant_extends_list_entry_highlighting = warning
resharper_redundant_fixed_pointer_declaration_highlighting = suggestion
resharper_redundant_if_else_block_highlighting = hint
resharper_redundant_if_statement_then_keyword_highlighting = none
resharper_redundant_immediate_delegate_invocation_highlighting = suggestion
resharper_redundant_include_highlighting = warning
resharper_redundant_is_before_relational_pattern_highlighting = suggestion
resharper_redundant_iterator_keyword_highlighting = warning
resharper_redundant_jump_statement_highlighting = warning
resharper_redundant_lambda_parameter_type_highlighting = warning
resharper_redundant_lambda_signature_parentheses_highlighting = hint
resharper_redundant_linebreak_highlighting = none
resharper_redundant_logical_conditional_expression_operand_highlighting = warning
resharper_redundant_me_qualifier_highlighting = warning
resharper_redundant_my_base_qualifier_highlighting = warning
resharper_redundant_my_class_qualifier_highlighting = warning
resharper_redundant_name_qualifier_highlighting = warning
resharper_redundant_not_null_constraint_highlighting = warning
resharper_redundant_nullable_annotation_on_reference_type_constraint_highlighting = warning
resharper_redundant_nullable_annotation_on_type_constraint_has_non_nullable_base_type_highlighting = warning
resharper_redundant_nullable_annotation_on_type_constraint_has_non_nullable_type_kind_highlighting = warning
resharper_redundant_nullable_flow_attribute_highlighting = warning
resharper_redundant_nullable_type_mark_highlighting = warning
resharper_redundant_nullness_attribute_with_nullable_reference_types_highlighting = warning
resharper_redundant_overflow_checking_context_highlighting = warning
resharper_redundant_overload_global_highlighting = none
resharper_redundant_overload_local_highlighting = suggestion
resharper_redundant_overridden_member_highlighting = warning
resharper_redundant_params_highlighting = warning
resharper_redundant_parentheses_highlighting = none
resharper_redundant_pattern_parentheses_highlighting = hint
resharper_redundant_property_parentheses_highlighting = hint
resharper_redundant_property_pattern_clause_highlighting = suggestion
resharper_redundant_qualifier_highlighting = warning
resharper_redundant_query_order_by_ascending_keyword_highlighting = hint
resharper_redundant_range_bound_highlighting = suggestion
resharper_redundant_readonly_modifier_highlighting = suggestion
resharper_redundant_record_body_highlighting = warning
resharper_redundant_record_class_keyword_highlighting = warning
resharper_redundant_scoped_parameter_modifier_highlighting = warning
resharper_redundant_setter_value_parameter_declaration_highlighting = hint
resharper_redundant_space_highlighting = none
resharper_redundant_string_format_call_highlighting = warning
resharper_redundant_string_interpolation_highlighting = suggestion
resharper_redundant_string_to_char_array_call_highlighting = warning
resharper_redundant_string_type_highlighting = suggestion
resharper_redundant_suppress_nullable_warning_expression_highlighting = warning
resharper_redundant_ternary_expression_highlighting = warning
resharper_redundant_to_string_call_for_value_type_highlighting = hint
resharper_redundant_to_string_call_highlighting = warning
resharper_redundant_type_arguments_of_method_highlighting = warning
resharper_redundant_type_check_in_pattern_highlighting = warning
resharper_redundant_unsafe_context_highlighting = warning
resharper_redundant_using_directive_global_highlighting = warning
resharper_redundant_using_directive_highlighting = warning
resharper_redundant_verbatim_prefix_highlighting = suggestion
resharper_redundant_verbatim_string_prefix_highlighting = suggestion
resharper_redundant_virtual_modifier_highlighting = warning
resharper_redundant_with_expression_highlighting = suggestion
resharper_reference_equals_with_value_type_highlighting = warning
resharper_reg_exp_inspections_highlighting = warning
resharper_remove_constructor_invocation_highlighting = none
resharper_remove_redundant_or_statement_false_highlighting = suggestion
resharper_remove_redundant_or_statement_true_highlighting = suggestion
resharper_remove_to_list_1_highlighting = suggestion
resharper_remove_to_list_2_highlighting = suggestion
resharper_replace_auto_property_with_computed_property_highlighting = hint
resharper_replace_conditional_expression_with_null_coalescing_highlighting = suggestion
resharper_replace_object_pattern_with_var_pattern_highlighting = suggestion
resharper_replace_slice_with_range_indexer_highlighting = hint
resharper_replace_substring_with_range_indexer_highlighting = hint
resharper_replace_with_field_keyword_highlighting = suggestion
resharper_replace_with_first_or_default_1_highlighting = suggestion
resharper_replace_with_first_or_default_2_highlighting = suggestion
resharper_replace_with_first_or_default_3_highlighting = suggestion
resharper_replace_with_first_or_default_4_highlighting = suggestion
resharper_replace_with_last_or_default_1_highlighting = suggestion
resharper_replace_with_last_or_default_2_highlighting = suggestion
resharper_replace_with_last_or_default_3_highlighting = suggestion
resharper_replace_with_last_or_default_4_highlighting = suggestion
resharper_replace_with_of_type_1_highlighting = suggestion
resharper_replace_with_of_type_2_highlighting = suggestion
resharper_replace_with_of_type_3_highlighting = suggestion
resharper_replace_with_of_type_any_1_highlighting = suggestion
resharper_replace_with_of_type_any_2_highlighting = suggestion
resharper_replace_with_of_type_count_1_highlighting = suggestion
resharper_replace_with_of_type_count_2_highlighting = suggestion
resharper_replace_with_of_type_first_1_highlighting = suggestion
resharper_replace_with_of_type_first_2_highlighting = suggestion
resharper_replace_with_of_type_first_or_default_1_highlighting = suggestion
resharper_replace_with_of_type_first_or_default_2_highlighting = suggestion
resharper_replace_with_of_type_last_1_highlighting = suggestion
resharper_replace_with_of_type_last_2_highlighting = suggestion
resharper_replace_with_of_type_last_or_default_1_highlighting = suggestion
resharper_replace_with_of_type_last_or_default_2_highlighting = suggestion
resharper_replace_with_of_type_long_count_highlighting = suggestion
resharper_replace_with_of_type_single_1_highlighting = suggestion
resharper_replace_with_of_type_single_2_highlighting = suggestion
resharper_replace_with_of_type_single_or_default_1_highlighting = suggestion
resharper_replace_with_of_type_single_or_default_2_highlighting = suggestion
resharper_replace_with_of_type_where_highlighting = suggestion
resharper_replace_with_simple_assignment_false_highlighting = suggestion
resharper_replace_with_simple_assignment_true_highlighting = suggestion
resharper_replace_with_single_assignment_false_highlighting = suggestion
resharper_replace_with_single_assignment_true_highlighting = suggestion
resharper_replace_with_single_call_to_any_highlighting = suggestion
resharper_replace_with_single_call_to_count_highlighting = suggestion
resharper_replace_with_single_call_to_first_highlighting = suggestion
resharper_replace_with_single_call_to_first_or_default_highlighting = suggestion
resharper_replace_with_single_call_to_last_highlighting = suggestion
resharper_replace_with_single_call_to_last_or_default_highlighting = suggestion
resharper_replace_with_single_call_to_single_highlighting = suggestion
resharper_replace_with_single_call_to_single_or_default_highlighting = suggestion
resharper_replace_with_single_or_default_1_highlighting = suggestion
resharper_replace_with_single_or_default_2_highlighting = suggestion
resharper_replace_with_single_or_default_3_highlighting = suggestion
resharper_replace_with_single_or_default_4_highlighting = suggestion
resharper_replace_with_string_is_null_or_empty_highlighting = suggestion
resharper_required_base_types_conflict_highlighting = warning
resharper_required_base_types_direct_conflict_highlighting = warning
resharper_required_base_types_is_not_inherited_highlighting = warning
resharper_resource_item_not_resolved_highlighting = error
resharper_resource_not_resolved_highlighting = error
resharper_resx_not_resolved_highlighting = warning
resharper_return_type_can_be_enumerable_global_highlighting = none
resharper_return_type_can_be_enumerable_local_highlighting = none
resharper_return_type_can_be_not_nullable_highlighting = warning
resharper_return_value_of_pure_method_is_not_used_highlighting = warning
resharper_route_templates_action_route_prefix_can_be_extracted_to_controller_route_highlighting = hint
resharper_route_templates_ambiguous_matching_constraint_constructor_highlighting = warning
resharper_route_templates_constraint_argument_cannot_be_converted_highlighting = warning
resharper_route_templates_controller_route_parameter_is_not_passed_to_methods_highlighting = hint
resharper_route_templates_duplicated_parameter_highlighting = warning
resharper_route_templates_matching_constraint_constructor_not_resolved_highlighting = warning
resharper_route_templates_method_missing_route_parameters_highlighting = hint
resharper_route_templates_optional_parameter_can_be_preceded_only_by_single_period_highlighting = warning
resharper_route_templates_optional_parameter_must_be_at_the_end_of_segment_highlighting = warning
resharper_route_templates_parameter_constraint_can_be_specified_highlighting = hint
resharper_route_templates_parameter_type_and_constraints_mismatch_highlighting = warning
resharper_route_templates_parameter_type_can_be_made_stricter_highlighting = suggestion
resharper_route_templates_route_parameter_constraint_not_resolved_highlighting = warning
resharper_route_templates_route_parameter_is_not_passed_to_method_highlighting = hint
resharper_route_templates_route_token_not_resolved_highlighting = warning
resharper_route_templates_symbol_not_resolved_highlighting = warning
resharper_route_templates_syntax_error_highlighting = warning
resharper_safe_cast_is_used_as_type_check_highlighting = suggestion
resharper_script_tag_has_both_src_and_content_attributes_highlighting = error
resharper_script_tag_with_content_before_includes_highlighting = hint
resharper_sealed_member_in_sealed_class_highlighting = warning
resharper_separate_control_transfer_statement_highlighting = none
resharper_service_contract_without_operations_highlighting = warning
resharper_shift_expression_real_shift_count_is_zero_highlighting = warning
resharper_shift_expression_result_equals_zero_highlighting = warning
resharper_shift_expression_right_operand_not_equal_real_count_highlighting = warning
resharper_shift_expression_zero_left_operand_highlighting = warning
resharper_similar_anonymous_type_nearby_highlighting = hint
resharper_simplify_conditional_operator_highlighting = suggestion
resharper_simplify_conditional_ternary_expression_highlighting = suggestion
resharper_simplify_i_if_highlighting = suggestion
resharper_simplify_linq_expression_use_all_highlighting = suggestion
resharper_simplify_linq_expression_use_any_highlighting = suggestion
resharper_simplify_linq_expression_use_min_by_and_max_by_highlighting = suggestion
resharper_simplify_string_interpolation_highlighting = suggestion
resharper_specify_a_culture_in_string_conversion_explicitly_highlighting = warning
resharper_specify_string_comparison_highlighting = hint
resharper_spin_lock_in_readonly_field_highlighting = warning
resharper_stack_alloc_inside_loop_highlighting = warning
resharper_static_member_initializer_referes_to_member_below_highlighting = warning
resharper_static_member_in_generic_type_highlighting = warning
resharper_static_problem_in_text_highlighting = warning
resharper_string_compare_is_culture_specific_1_highlighting = warning
resharper_string_compare_is_culture_specific_2_highlighting = warning
resharper_string_compare_is_culture_specific_3_highlighting = warning
resharper_string_compare_is_culture_specific_4_highlighting = warning
resharper_string_compare_is_culture_specific_5_highlighting = warning
resharper_string_compare_is_culture_specific_6_highlighting = warning
resharper_string_compare_to_is_culture_specific_highlighting = warning
resharper_string_ends_with_is_culture_specific_highlighting = none
resharper_string_index_of_is_culture_specific_1_highlighting = warning
resharper_string_index_of_is_culture_specific_2_highlighting = warning
resharper_string_index_of_is_culture_specific_3_highlighting = warning
resharper_string_last_index_of_is_culture_specific_1_highlighting = warning
resharper_string_last_index_of_is_culture_specific_2_highlighting = warning
resharper_string_last_index_of_is_culture_specific_3_highlighting = warning
resharper_string_literal_as_interpolation_argument_highlighting = suggestion
resharper_string_literal_typo_highlighting = none
resharper_string_starts_with_is_culture_specific_highlighting = none
resharper_structured_message_template_problem_highlighting = warning
resharper_struct_can_be_made_read_only_highlighting = suggestion
resharper_struct_member_can_be_made_read_only_highlighting = none
resharper_suggest_base_type_for_parameter_highlighting = none
resharper_suggest_base_type_for_parameter_in_constructor_highlighting = hint
resharper_suggest_discard_declaration_var_style_highlighting = hint
resharper_suggest_var_or_type_built_in_types_highlighting = hint
resharper_suggest_var_or_type_deconstruction_declarations_highlighting = hint
resharper_suggest_var_or_type_elsewhere_highlighting = hint
resharper_suggest_var_or_type_simple_types_highlighting = hint
resharper_suppress_nullable_warning_expression_as_inverted_is_expression_highlighting = warning
resharper_suspicious_lock_over_synchronization_primitive_highlighting = warning
resharper_suspicious_math_sign_method_highlighting = warning
resharper_suspicious_parameter_name_in_argument_null_exception_highlighting = warning
resharper_suspicious_type_conversion_global_highlighting = none
resharper_swap_via_deconstruction_highlighting = suggestion
resharper_switch_expression_handles_some_known_enum_values_with_exception_in_default_highlighting = none
resharper_switch_statement_for_enum_misses_default_section_highlighting = none
resharper_switch_statement_handles_some_known_enum_values_with_default_highlighting = none
resharper_switch_statement_missing_some_enum_cases_no_default_highlighting = none
resharper_symbol_from_not_copied_locally_reference_used_warning_highlighting = warning
resharper_tabs_and_spaces_mismatch_highlighting = none
resharper_tabs_are_disallowed_highlighting = none
resharper_tabs_outside_indent_highlighting = none
resharper_tail_recursive_call_highlighting = hint
resharper_template_duplicate_property_problem_highlighting = warning
resharper_template_format_string_problem_highlighting = warning
resharper_template_is_not_compile_time_constant_problem_highlighting = warning
resharper_thread_static_at_instance_field_highlighting = warning
resharper_thread_static_field_has_initializer_highlighting = warning
resharper_too_wide_local_variable_scope_highlighting = suggestion
resharper_try_cast_always_succeeds_highlighting = suggestion
resharper_try_statements_can_be_merged_highlighting = hint
resharper_type_parameter_can_be_variant_highlighting = suggestion
resharper_ul_tag_contains_non_li_elements_highlighting = hint
resharper_unassigned_field_global_highlighting = suggestion
resharper_unassigned_field_local_highlighting = warning
resharper_unassigned_get_only_auto_property_highlighting = warning
resharper_unassigned_readonly_field_highlighting = warning
resharper_unclosed_script_highlighting = error
resharper_unexpected_attribute_highlighting = warning
resharper_unexpected_directive_highlighting = warning
resharper_unnecessary_whitespace_highlighting = none
resharper_unreachable_switch_arm_due_to_integer_analysis_highlighting = warning
resharper_unreachable_switch_case_due_to_integer_analysis_highlighting = warning
resharper_unsupported_required_base_type_highlighting = warning
resharper_unused_anonymous_method_signature_highlighting = warning
resharper_unused_auto_property_accessor_global_highlighting = none
resharper_unused_auto_property_accessor_local_highlighting = warning
resharper_unused_import_clause_highlighting = warning
resharper_unused_local_function_highlighting = warning
resharper_unused_local_function_parameter_highlighting = warning
resharper_unused_local_function_return_value_highlighting = warning
resharper_unused_member_global_highlighting = none
resharper_unused_member_hierarchy_global_highlighting = suggestion
resharper_unused_member_hierarchy_local_highlighting = warning
resharper_unused_member_in_super_global_highlighting = suggestion
resharper_unused_member_in_super_local_highlighting = warning
resharper_unused_member_local_highlighting = warning
resharper_unused_method_return_value_global_highlighting = none
resharper_unused_method_return_value_local_highlighting = warning
resharper_unused_parameter_global_highlighting = none
resharper_unused_parameter_in_partial_method_highlighting = warning
resharper_unused_parameter_local_highlighting = none
resharper_unused_tuple_component_in_return_value_highlighting = none
resharper_unused_type_global_highlighting = none
resharper_unused_type_local_highlighting = warning
resharper_unused_type_parameter_highlighting = warning
resharper_unused_variable_highlighting = warning
resharper_useless_binary_operation_highlighting = warning
resharper_useless_comparison_to_integral_constant_highlighting = warning
resharper_use_array_creation_expression_1_highlighting = suggestion
resharper_use_array_creation_expression_2_highlighting = suggestion
resharper_use_array_empty_method_highlighting = suggestion
resharper_use_await_using_highlighting = suggestion
resharper_use_cancellation_token_for_i_async_enumerable_highlighting = suggestion
resharper_use_collection_count_property_highlighting = suggestion
resharper_use_configure_await_false_for_async_disposable_highlighting = none
resharper_use_configure_await_false_highlighting = suggestion
resharper_use_deconstruction_highlighting = hint
resharper_use_empty_types_field_highlighting = suggestion
resharper_use_event_args_empty_field_highlighting = suggestion
resharper_use_format_specifier_in_format_string_highlighting = suggestion
resharper_use_implicitly_typed_variable_evident_highlighting = hint
resharper_use_implicitly_typed_variable_highlighting = none
resharper_use_implicit_by_val_modifier_highlighting = hint
resharper_use_indexed_property_highlighting = suggestion
resharper_use_index_from_end_expression_highlighting = suggestion
resharper_use_is_operator_1_highlighting = suggestion
resharper_use_is_operator_2_highlighting = suggestion
resharper_use_method_any_0_highlighting = suggestion
resharper_use_method_any_1_highlighting = suggestion
resharper_use_method_any_2_highlighting = suggestion
resharper_use_method_any_3_highlighting = suggestion
resharper_use_method_any_4_highlighting = suggestion
resharper_use_method_is_instance_of_type_highlighting = suggestion
resharper_use_nameof_expression_for_part_of_the_string_highlighting = none
resharper_use_nameof_expression_highlighting = suggestion
resharper_use_nameof_for_dependency_property_highlighting = suggestion
resharper_use_name_of_instead_of_type_of_highlighting = suggestion
resharper_use_negated_pattern_in_is_expression_highlighting = hint
resharper_use_negated_pattern_matching_highlighting = hint
resharper_use_nullable_annotation_instead_of_attribute_highlighting = suggestion
resharper_use_nullable_attributes_supported_by_compiler_highlighting = suggestion
resharper_use_nullable_reference_types_annotation_syntax_highlighting = warning
resharper_use_null_propagation_highlighting = hint
resharper_use_object_or_collection_initializer_highlighting = suggestion
resharper_use_pattern_matching_highlighting = suggestion
resharper_use_positional_deconstruction_pattern_highlighting = none
resharper_use_string_interpolation_highlighting = suggestion
resharper_use_string_interpolation_when_possible_highlighting = hint
resharper_use_switch_case_pattern_variable_highlighting = suggestion
resharper_use_throw_if_null_method_highlighting = none
resharper_use_unsigned_right_shift_operator_highlighting = suggestion
resharper_use_verbatim_string_highlighting = hint
resharper_use_with_expression_to_copy_anonymous_object_highlighting = suggestion
resharper_use_with_expression_to_copy_record_highlighting = suggestion
resharper_use_with_expression_to_copy_struct_highlighting = suggestion
resharper_use_with_expression_to_copy_tuple_highlighting = suggestion
resharper_value_parameter_not_used_highlighting = warning
resharper_value_range_attribute_violation_highlighting = warning
resharper_variable_can_be_not_nullable_highlighting = warning
resharper_variable_hides_outer_variable_highlighting = warning
resharper_virtual_member_call_in_constructor_highlighting = warning
resharper_virtual_member_never_overridden_global_highlighting = none
resharper_virtual_member_never_overridden_local_highlighting = suggestion
resharper_void_method_with_must_use_return_value_attribute_highlighting = warning
resharper_web_config_module_not_resolved_highlighting = warning
resharper_web_config_module_qualification_resolve_highlighting = warning
resharper_web_config_redundant_add_namespace_tag_highlighting = warning
resharper_web_config_redundant_location_tag_highlighting = warning
resharper_web_config_tag_prefix_redundand_highlighting = warning
resharper_web_config_type_not_resolved_highlighting = warning
resharper_web_config_unused_add_tag_highlighting = warning
resharper_web_config_unused_element_due_to_config_source_attribute_highlighting = warning
resharper_web_config_unused_remove_or_clear_tag_highlighting = warning
resharper_web_config_web_config_path_warning_highlighting = warning
resharper_web_config_wrong_module_highlighting = warning
resharper_web_ignored_path_highlighting = none
resharper_web_mapped_path_highlighting = hint
resharper_with_expression_instead_of_initializer_highlighting = suggestion
resharper_with_expression_modifies_all_members_highlighting = warning
resharper_wrong_indent_size_highlighting = none
resharper_xaml_assign_null_to_not_null_attribute_highlighting = warning
resharper_xaml_avalonia_wrong_binding_mode_for_stream_binding_operator_highlighting = warning
resharper_xaml_binding_without_context_not_resolved_highlighting = hint
resharper_xaml_binding_with_context_not_resolved_highlighting = warning
resharper_xaml_compiled_binding_missing_data_type_error_highlighting_highlighting = error
resharper_xaml_constructor_warning_highlighting = warning
resharper_xaml_decimal_parsing_is_culture_dependent_highlighting = warning
resharper_xaml_dependency_property_resolve_error_highlighting = warning
resharper_xaml_duplicate_style_setter_highlighting = warning
resharper_xaml_dynamic_resource_error_highlighting = error
resharper_xaml_element_name_reference_not_resolved_highlighting = error
resharper_xaml_empty_grid_length_definition_highlighting = error
resharper_xaml_field_modifier_requires_name_attribute_highlighting = warning
resharper_xaml_grid_definitions_can_be_converted_to_attribute_highlighting = hint
resharper_xaml_ignored_path_highlighting_highlighting = none
resharper_xaml_index_out_of_grid_definition_highlighting = warning
resharper_xaml_invalid_member_type_highlighting = error
resharper_xaml_invalid_resource_target_type_highlighting = error
resharper_xaml_invalid_resource_type_highlighting = error
resharper_xaml_invalid_type_highlighting = error
resharper_xaml_language_level_highlighting = error
resharper_xaml_mapped_path_highlighting_highlighting = hint
resharper_xaml_method_arguments_will_be_ignored_highlighting = warning
resharper_xaml_missing_grid_index_highlighting = warning
resharper_xaml_overloads_collision_highlighting = warning
resharper_xaml_parent_is_out_of_current_component_tree_highlighting = warning
resharper_xaml_path_error_highlighting = warning
resharper_xaml_possible_null_reference_exception_highlighting = suggestion
resharper_xaml_redundant_attached_property_highlighting = warning
resharper_xaml_redundant_binding_mode_attribute_highlighting = warning
resharper_xaml_redundant_collection_property_highlighting = warning
resharper_xaml_redundant_freeze_attribute_highlighting = warning
resharper_xaml_redundant_grid_definitions_highlighting = warning
resharper_xaml_redundant_grid_span_highlighting = warning
resharper_xaml_redundant_modifiers_attribute_highlighting = warning
resharper_xaml_redundant_namespace_alias_highlighting = warning
resharper_xaml_redundant_name_attribute_highlighting = warning
resharper_xaml_redundant_property_type_qualifier_highlighting = warning
resharper_xaml_redundant_resource_highlighting = warning
resharper_xaml_redundant_styled_value_highlighting = warning
resharper_xaml_redundant_update_source_trigger_attribute_highlighting = warning
resharper_xaml_redundant_xamarin_forms_class_declaration_highlighting = warning
resharper_xaml_resource_file_path_case_mismatch_highlighting = warning
resharper_xaml_routed_event_resolve_error_highlighting = warning
resharper_xaml_static_resource_not_resolved_highlighting = warning
resharper_xaml_style_class_not_found_highlighting = warning
resharper_xaml_style_invalid_target_type_highlighting = error
resharper_xaml_unexpected_element_highlighting = error
resharper_xaml_unexpected_text_token_highlighting = error
resharper_xaml_xaml_duplicate_device_family_type_view_highlighting_highlighting = error
resharper_xaml_xaml_mismatched_device_family_view_clr_name_highlighting_highlighting = warning
resharper_xaml_xaml_relative_source_default_mode_warning_highlighting_highlighting = warning
resharper_xaml_xaml_unknown_device_family_type_highlighting_highlighting = warning
resharper_xaml_xaml_xamarin_forms_data_type_and_binding_context_type_mismatched_highlighting_highlighting = warning
resharper_xaml_x_key_attribute_disallowed_highlighting = error
resharper_xunit_xunit_test_with_console_output_highlighting = warning
resharper_zero_index_from_end_highlighting = warning
